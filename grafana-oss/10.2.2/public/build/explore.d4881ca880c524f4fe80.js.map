{"version":3,"file":"explore.d4881ca880c524f4fe80.js","mappings":"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","sources":["webpack://grafana/./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useBeforeUnload.js","webpack://grafana/./public/app/features/explore/CorrelationUnsavedChangesModal.tsx","webpack://grafana/./public/app/features/explore/CorrelationEditorModeBar.tsx","webpack://grafana/./public/app/features/explore/ExploreActions.tsx","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutlineContext.tsx","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutlineItemButton.tsx","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutline.tsx","webpack://grafana/./public/app/features/explore/ContentOutline/ContentOutlineItem.tsx","webpack://grafana/./public/app/features/explore/CorrelationHelper.tsx","webpack://grafana/./public/app/features/explore/CustomContainer.tsx","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-3cca0dab2b/0/cache/re-resizable-npm-6.9.9-2a772ae568-a2c8bfe866.zip/node_modules/re-resizable/lib/resizer.js","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-3cca0dab2b/0/cache/re-resizable-npm-6.9.9-2a772ae568-a2c8bfe866.zip/node_modules/re-resizable/lib/index.js","webpack://grafana/./public/app/features/explore/ExploreDrawer.tsx","webpack://grafana/./public/app/features/explore/ExploreQueryInspector.tsx","webpack://grafana/./public/app/features/explore/TimeSyncButton.tsx","webpack://grafana/./public/app/features/explore/ExploreTimeControls.tsx","webpack://grafana/./public/app/features/explore/LiveTailButton.tsx","webpack://grafana/./public/app/features/explore/extensions/ConfirmNavigationModal.tsx","webpack://grafana/./public/app/features/explore/extensions/ToolbarExtensionPointMenu.tsx","webpack://grafana/./public/app/features/explore/extensions/ToolbarExtensionPoint.tsx","webpack://grafana/./public/app/features/explore/useLiveTailControls.ts","webpack://grafana/./public/app/features/explore/ExploreToolbar.tsx","webpack://grafana/./public/app/features/explore/FlameGraph/FlameGraphExploreContainer.tsx","webpack://grafana/./public/app/features/explore/ElapsedTime.tsx","webpack://grafana/./public/app/features/explore/Logs/LiveLogs.tsx","webpack://grafana/./public/app/features/explore/Logs/utils/logs.ts","webpack://grafana/./public/app/features/logs/components/log-context/LoadingIndicator.tsx","webpack://grafana/./public/app/features/logs/components/log-context/LogContextButtons.tsx","webpack://grafana/./public/app/features/logs/components/log-context/LogRowContextModal.tsx","webpack://grafana/./public/app/features/explore/hooks/utils.ts","webpack://grafana/./public/app/features/explore/hooks/useStateSync/migrators/v0.ts","webpack://grafana/./public/app/features/explore/hooks/useStateSync/migrators/v1.ts","webpack://grafana/./public/app/features/explore/hooks/useStateSync/parseURL.ts","webpack://grafana/./public/app/features/explore/hooks/useStateSync/index.ts","webpack://grafana/./public/app/features/explore/MetaInfoText.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsMetaRow.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsNavigationPages.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsNavigation.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsTable.tsx","webpack://grafana/./public/app/features/explore/SupplementaryResultError.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsVolumePanel.tsx","webpack://grafana/./public/app/features/explore/Logs/utils/logsVolumeResponse.ts","webpack://grafana/./public/app/features/explore/Logs/LogsVolumePanelList.tsx","webpack://grafana/./public/app/features/explore/Logs/Logs.tsx","webpack://grafana/./public/app/features/explore/Logs/utils/LogsCrossFadeTransition.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsContainer.tsx","webpack://grafana/./public/app/features/explore/Logs/LogsSamplePanel.tsx","webpack://grafana/./public/app/features/explore/NoData.tsx","webpack://grafana/./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack://grafana/./public/app/features/explore/NodeGraph/NodeGraphContainer.tsx","webpack://grafana/./public/app/features/explore/QueryRows.tsx","webpack://grafana/./public/app/features/explore/PrometheusListView/RawListContainer.tsx","webpack://grafana/./public/app/features/explore/RawPrometheus/RawPrometheusContainer.tsx","webpack://grafana/./public/app/core/components/Animations/FadeIn.tsx","webpack://grafana/./public/app/features/explore/ErrorContainer.tsx","webpack://grafana/./public/app/features/explore/ResponseErrorContainer.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistorySettingsTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistory.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack://grafana/./public/app/features/explore/SecondaryActions.tsx","webpack://grafana/./public/app/features/explore/Table/TableContainer.tsx","webpack://grafana/./public/app/features/explore/TraceView/TraceViewContainer.tsx","webpack://grafana/./public/app/features/explore/Explore.tsx","webpack://grafana/./public/app/features/explore/ExplorePaneContainer.tsx","webpack://grafana/./public/app/features/explore/hooks/useExplorePageTitle.ts","webpack://grafana/./public/app/features/explore/hooks/useKeyboardShortcuts.ts","webpack://grafana/./public/app/features/explore/hooks/useSplitSizeUpdater.ts","webpack://grafana/./public/app/features/explore/hooks/useTimeSrvFix.ts","webpack://grafana/./public/app/features/explore/ExplorePage.tsx","webpack://grafana/./public/app/features/inspector/types.ts","webpack://grafana/./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useInterval.js"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nimport { off, on } from './misc/util';\nvar useBeforeUnload = function (enabled, message) {\n    if (enabled === void 0) { enabled = true; }\n    var handler = useCallback(function (event) {\n        var finalEnabled = typeof enabled === 'function' ? enabled() : true;\n        if (!finalEnabled) {\n            return;\n        }\n        event.preventDefault();\n        if (message) {\n            event.returnValue = message;\n        }\n        return message;\n    }, [enabled, message]);\n    useEffect(function () {\n        if (!enabled) {\n            return;\n        }\n        on(window, 'beforeunload', handler);\n        return function () { return off(window, 'beforeunload', handler); };\n    }, [enabled, handler]);\n};\nexport default useBeforeUnload;\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { Button, Modal } from '@grafana/ui';\n\ninterface UnsavedChangesModalProps {\n  onDiscard: () => void;\n  onCancel: () => void;\n  onSave: () => void;\n}\n\nexport const CorrelationUnsavedChangesModal = ({ onSave, onDiscard, onCancel }: UnsavedChangesModalProps) => {\n  return (\n    <Modal\n      isOpen={true}\n      title=\"Unsaved changes to correlation\"\n      onDismiss={onCancel}\n      icon=\"exclamation-triangle\"\n      className={css({ width: '500px' })}\n    >\n      <h5>Do you want to save changes to this Correlation?</h5>\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={onCancel} fill=\"outline\">\n          Cancel\n        </Button>\n        <Button variant=\"destructive\" onClick={onDiscard}>\n          Discard correlation\n        </Button>\n        <Button variant=\"primary\" onClick={onSave}>\n          Save correlation\n        </Button>\n      </Modal.ButtonRow>\n    </Modal>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { useBeforeUnload, useUnmount } from 'react-use';\n\nimport { GrafanaTheme2, colorManipulator } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button, HorizontalGroup, Icon, Tooltip, useStyles2 } from '@grafana/ui';\nimport { CORRELATION_EDITOR_POST_CONFIRM_ACTION, ExploreItemState, useDispatch, useSelector } from 'app/types';\n\nimport { CorrelationUnsavedChangesModal } from './CorrelationUnsavedChangesModal';\nimport { saveCurrentCorrelation } from './state/correlations';\nimport { changeDatasource } from './state/datasource';\nimport { changeCorrelationHelperData } from './state/explorePane';\nimport { changeCorrelationEditorDetails, splitClose } from './state/main';\nimport { runQueries } from './state/query';\nimport { selectCorrelationDetails } from './state/selectors';\n\nexport const CorrelationEditorModeBar = ({ panes }: { panes: Array<[string, ExploreItemState]> }) => {\n  const dispatch = useDispatch();\n  const styles = useStyles2(getStyles);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const [showSavePrompt, setShowSavePrompt] = useState(false);\n\n  // handle refreshing and closing the tab\n  useBeforeUnload(correlationDetails?.dirty || false, 'Save correlation?');\n\n  // handle exiting (staying within explore)\n  useEffect(() => {\n    if (correlationDetails?.isExiting && correlationDetails?.dirty) {\n      setShowSavePrompt(true);\n    } else if (correlationDetails?.isExiting && !correlationDetails?.dirty) {\n      dispatch(\n        changeCorrelationEditorDetails({\n          editorMode: false,\n          dirty: false,\n          isExiting: false,\n        })\n      );\n    }\n  }, [correlationDetails?.dirty, correlationDetails?.isExiting, dispatch]);\n\n  // clear data when unmounted\n  useUnmount(() => {\n    dispatch(\n      changeCorrelationEditorDetails({\n        editorMode: false,\n        isExiting: false,\n        dirty: false,\n        label: undefined,\n        description: undefined,\n        canSave: false,\n      })\n    );\n\n    panes.forEach((pane) => {\n      dispatch(\n        changeCorrelationHelperData({\n          exploreId: pane[0],\n          correlationEditorHelperData: undefined,\n        })\n      );\n      dispatch(runQueries({ exploreId: pane[0] }));\n    });\n  });\n\n  const closePaneAndReset = (exploreId: string) => {\n    setShowSavePrompt(false);\n    dispatch(splitClose(exploreId));\n    reportInteraction('grafana_explore_split_view_closed');\n    dispatch(\n      changeCorrelationEditorDetails({\n        editorMode: true,\n        isExiting: false,\n        dirty: false,\n        label: undefined,\n        description: undefined,\n        canSave: false,\n      })\n    );\n\n    panes.forEach((pane) => {\n      dispatch(\n        changeCorrelationHelperData({\n          exploreId: pane[0],\n          correlationEditorHelperData: undefined,\n        })\n      );\n      dispatch(runQueries({ exploreId: pane[0] }));\n    });\n  };\n\n  const changeDatasourceAndReset = (exploreId: string, datasourceUid: string) => {\n    setShowSavePrompt(false);\n    dispatch(changeDatasource(exploreId, datasourceUid, { importQueries: true }));\n    dispatch(\n      changeCorrelationEditorDetails({\n        editorMode: true,\n        isExiting: false,\n        dirty: false,\n        label: undefined,\n        description: undefined,\n        canSave: false,\n      })\n    );\n    panes.forEach((pane) => {\n      dispatch(\n        changeCorrelationHelperData({\n          exploreId: pane[0],\n          correlationEditorHelperData: undefined,\n        })\n      );\n    });\n  };\n\n  const saveCorrelation = (skipPostConfirmAction: boolean) => {\n    dispatch(saveCurrentCorrelation(correlationDetails?.label, correlationDetails?.description));\n    if (!skipPostConfirmAction && correlationDetails?.postConfirmAction !== undefined) {\n      const { exploreId, action, changeDatasourceUid } = correlationDetails?.postConfirmAction;\n      if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE) {\n        closePaneAndReset(exploreId);\n      } else if (\n        action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE &&\n        changeDatasourceUid !== undefined\n      ) {\n        changeDatasourceAndReset(exploreId, changeDatasourceUid);\n      }\n    } else {\n      dispatch(changeCorrelationEditorDetails({ editorMode: false, dirty: false, isExiting: false }));\n    }\n  };\n\n  return (\n    <>\n      {/* Handle navigating outside of Explore */}\n      <Prompt\n        message={(location) => {\n          if (\n            location.pathname !== '/explore' &&\n            (correlationDetails?.editorMode || false) &&\n            (correlationDetails?.dirty || false)\n          ) {\n            return 'You have unsaved correlation data. Continue?';\n          } else {\n            return true;\n          }\n        }}\n      />\n\n      {showSavePrompt && (\n        <CorrelationUnsavedChangesModal\n          onDiscard={() => {\n            if (correlationDetails?.postConfirmAction !== undefined) {\n              const { exploreId, action, changeDatasourceUid } = correlationDetails?.postConfirmAction;\n              if (action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE) {\n                closePaneAndReset(exploreId);\n              } else if (\n                action === CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE &&\n                changeDatasourceUid !== undefined\n              ) {\n                changeDatasourceAndReset(exploreId, changeDatasourceUid);\n              }\n            } else {\n              // exit correlations mode\n              // if we are discarding the in progress correlation, reset everything\n              // this modal only shows if the editorMode is false, so we just need to update the dirty state\n              dispatch(\n                changeCorrelationEditorDetails({\n                  editorMode: false,\n                  dirty: false,\n                  isExiting: false,\n                })\n              );\n            }\n          }}\n          onCancel={() => {\n            // if we are cancelling the exit, set the editor mode back to true and hide the prompt\n            dispatch(changeCorrelationEditorDetails({ isExiting: false }));\n            setShowSavePrompt(false);\n          }}\n          onSave={() => {\n            saveCorrelation(false);\n          }}\n        />\n      )}\n      <div className={styles.correlationEditorTop}>\n        <HorizontalGroup spacing=\"md\" justify=\"flex-end\">\n          <Tooltip content=\"Correlations editor in Explore is an experimental feature.\">\n            <Icon className={styles.iconColor} name=\"info-circle\" size=\"xl\" />\n          </Tooltip>\n          <Button\n            variant=\"secondary\"\n            disabled={!correlationDetails?.canSave}\n            fill=\"outline\"\n            className={correlationDetails?.canSave ? styles.buttonColor : styles.disabledButtonColor}\n            onClick={() => {\n              saveCorrelation(true);\n            }}\n          >\n            Save\n          </Button>\n          <Button\n            variant=\"secondary\"\n            fill=\"outline\"\n            className={styles.buttonColor}\n            icon=\"times\"\n            onClick={() => {\n              dispatch(changeCorrelationEditorDetails({ isExiting: true }));\n              reportInteraction('grafana_explore_correlation_editor_exit_pressed');\n            }}\n          >\n            Exit correlation editor\n          </Button>\n        </HorizontalGroup>\n      </div>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const contrastColor = theme.colors.getContrastText(theme.colors.primary.main);\n  const lighterBackgroundColor = colorManipulator.lighten(theme.colors.primary.main, 0.1);\n  const darkerBackgroundColor = colorManipulator.darken(theme.colors.primary.main, 0.2);\n\n  const disabledColor = colorManipulator.darken(contrastColor, 0.2);\n\n  return {\n    correlationEditorTop: css({\n      backgroundColor: theme.colors.primary.main,\n      marginTop: '3px',\n      padding: theme.spacing(1),\n    }),\n    iconColor: css({\n      color: contrastColor,\n    }),\n    buttonColor: css({\n      color: contrastColor,\n      borderColor: contrastColor,\n      '&:hover': {\n        color: contrastColor,\n        borderColor: contrastColor,\n        backgroundColor: lighterBackgroundColor,\n      },\n    }),\n    // important needed to override disabled state styling\n    disabledButtonColor: css({\n      color: `${disabledColor} !important`,\n      backgroundColor: `${darkerBackgroundColor} !important`,\n    }),\n  };\n};\n","import { useRegisterActions, useKBar, Action, Priority } from 'kbar';\nimport { useEffect, useState } from 'react';\n\nimport { config } from '@grafana/runtime';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { AccessControlAction, useDispatch, useSelector } from 'app/types';\n\nimport { splitOpen, splitClose, changeCorrelationEditorDetails } from './state/main';\nimport { runQueries } from './state/query';\nimport { isSplit, selectPanes } from './state/selectors';\n\n// FIXME: this should use the new IDs\nexport const ExploreActions = () => {\n  const [actions, setActions] = useState<Action[]>([]);\n  const { query } = useKBar();\n  const dispatch = useDispatch();\n  const panes = useSelector(selectPanes);\n  const splitted = useSelector(isSplit);\n\n  const canWriteCorrelations = contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  useEffect(() => {\n    const keys = Object.keys(panes);\n    const exploreSection = {\n      name: 'Explore',\n      priority: Priority.HIGH + 1,\n    };\n\n    const actionsArr: Action[] = [];\n\n    if (splitted) {\n      actionsArr.push({\n        id: 'explore/run-query-left',\n        name: 'Run query (left)',\n        keywords: 'query left',\n        perform: () => {\n          dispatch(runQueries({ exploreId: keys[0] }));\n        },\n        section: exploreSection,\n      });\n      if ([panes[1]]) {\n        // we should always have the right exploreId if split\n        actionsArr.push({\n          id: 'explore/run-query-right',\n          name: 'Run query (right)',\n          keywords: 'query right',\n          perform: () => {\n            dispatch(runQueries({ exploreId: keys[1] }));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-left',\n          name: 'Close split view left',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(keys[0]));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-right',\n          name: 'Close split view right',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(keys[1]));\n          },\n          section: exploreSection,\n        });\n      }\n    } else {\n      // command palette doesn't know what pane we're in, only show option if not split and no datasource is mixed\n      const hasMixed = Object.values(panes).some((pane) => {\n        return pane?.datasourceInstance?.uid === MIXED_DATASOURCE_NAME;\n      });\n\n      if (config.featureToggles.correlations && canWriteCorrelations && !hasMixed) {\n        actionsArr.push({\n          id: 'explore/correlations-editor',\n          name: 'Correlations editor',\n          perform: () => {\n            dispatch(changeCorrelationEditorDetails({ editorMode: true }));\n            dispatch(runQueries({ exploreId: keys[0] }));\n          },\n          section: exploreSection,\n        });\n      }\n\n      actionsArr.push({\n        id: 'explore/run-query',\n        name: 'Run query',\n        keywords: 'query',\n        perform: () => {\n          dispatch(runQueries({ exploreId: keys[0] }));\n        },\n        section: exploreSection,\n      });\n      actionsArr.push({\n        id: 'explore/split-view-open',\n        name: 'Open split view',\n        keywords: 'split',\n        perform: () => {\n          dispatch(splitOpen());\n        },\n        section: exploreSection,\n      });\n    }\n    setActions(actionsArr);\n  }, [panes, splitted, query, dispatch, canWriteCorrelations]);\n\n  useRegisterActions(!query ? [] : actions, [actions, query]);\n\n  return null;\n};\n","import { uniqueId } from 'lodash';\nimport React, { useState, useContext, createContext, ReactNode, useCallback } from 'react';\n\nimport { ContentOutlineItemBaseProps } from './ContentOutlineItem';\n\nexport interface ContentOutlineItemContextProps extends ContentOutlineItemBaseProps {\n  id: string;\n  ref: HTMLElement | null;\n}\n\ntype RegisterFunction = ({ title, icon, ref }: Omit<ContentOutlineItemContextProps, 'id'>) => string;\n\ninterface ContentOutlineContextProps {\n  outlineItems: ContentOutlineItemContextProps[];\n  register: RegisterFunction;\n  unregister: (id: string) => void;\n}\n\nconst ContentOutlineContext = createContext<ContentOutlineContextProps | undefined>(undefined);\n\nexport const ContentOutlineContextProvider = ({ children }: { children: ReactNode }) => {\n  const [outlineItems, setOutlineItems] = useState<ContentOutlineItemContextProps[]>([]);\n\n  const register: RegisterFunction = useCallback(({ title, icon, ref }) => {\n    const id = uniqueId(`${title}-${icon}_`);\n\n    setOutlineItems((prevItems) => {\n      const updatedItems = [...prevItems, { id, title, icon, ref }];\n\n      return updatedItems.sort((a, b) => {\n        if (a.ref && b.ref) {\n          const diff = a.ref.compareDocumentPosition(b.ref);\n          if (diff === Node.DOCUMENT_POSITION_PRECEDING) {\n            return 1;\n          } else if (diff === Node.DOCUMENT_POSITION_FOLLOWING) {\n            return -1;\n          }\n        }\n        return 0;\n      });\n    });\n\n    return id;\n  }, []);\n\n  const unregister = useCallback((id: string) => {\n    setOutlineItems((prevItems) => prevItems.filter((item) => item.id !== id));\n  }, []);\n\n  return (\n    <ContentOutlineContext.Provider value={{ outlineItems, register, unregister }}>\n      {children}\n    </ContentOutlineContext.Provider>\n  );\n};\n\nexport function useContentOutlineContext() {\n  const ctx = useContext(ContentOutlineContext);\n\n  if (!ctx) {\n    throw new Error('useContentOutlineContext must be used within a ContentOutlineContextProvider');\n  }\n  return ctx;\n}\n","import { cx, css } from '@emotion/css';\nimport React, { ButtonHTMLAttributes } from 'react';\n\nimport { IconName, isIconName, GrafanaTheme2 } from '@grafana/data';\nimport { Icon, useStyles2, Tooltip } from '@grafana/ui';\n\ntype CommonProps = {\n  title?: string;\n  icon: string;\n  tooltip?: string;\n  className?: string;\n};\n\nexport type ContentOutlineItemButtonProps = CommonProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport function ContentOutlineItemButton({ title, icon, tooltip, className, ...rest }: ContentOutlineItemButtonProps) {\n  const styles = useStyles2(getStyles);\n\n  const buttonStyles = cx(styles.button, className);\n\n  const body = (\n    <button className={buttonStyles} aria-label={tooltip} {...rest}>\n      {renderIcon(icon)}\n      {title}\n    </button>\n  );\n\n  return tooltip ? (\n    <Tooltip content={tooltip} placement=\"bottom\">\n      {body}\n    </Tooltip>\n  ) : (\n    body\n  );\n}\n\nfunction renderIcon(icon: IconName | React.ReactNode) {\n  if (!icon) {\n    return null;\n  }\n\n  if (isIconName(icon)) {\n    return <Icon name={icon} size={'lg'} />;\n  }\n\n  return icon;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    button: css({\n      label: 'content-outline-item-button',\n      display: 'flex',\n      flexGrow: 1,\n      alignItems: 'center',\n      height: theme.spacing(theme.components.height.md),\n      padding: theme.spacing(0, 1),\n      gap: theme.spacing(1),\n      color: theme.colors.text.secondary,\n      background: 'transparent',\n      border: 'none',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      '&:hover': {\n        color: theme.colors.text.primary,\n        background: theme.colors.background.secondary,\n        textDecoration: 'underline',\n      },\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { useToggle } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { useStyles2, PanelContainer, CustomScrollbar } from '@grafana/ui';\n\nimport { useContentOutlineContext } from './ContentOutlineContext';\nimport { ContentOutlineItemButton } from './ContentOutlineItemButton';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css({\n      label: 'wrapper',\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'center',\n      marginRight: theme.spacing(1),\n      height: '100%',\n      backgroundColor: theme.colors.background.primary,\n    }),\n    content: css({\n      label: 'content',\n      top: 0,\n    }),\n    buttonStyles: css({\n      textAlign: 'left',\n      width: '100%',\n      padding: theme.spacing(0, 1.5),\n    }),\n  };\n};\n\nexport function ContentOutline({ scroller, panelId }: { scroller: HTMLElement | undefined; panelId: string }) {\n  const [expanded, toggleExpanded] = useToggle(false);\n  const styles = useStyles2((theme) => getStyles(theme));\n  const { outlineItems } = useContentOutlineContext();\n\n  const scrollIntoView = (ref: HTMLElement | null, buttonTitle: string) => {\n    let scrollValue = 0;\n    let el: HTMLElement | null | undefined = ref;\n\n    do {\n      scrollValue += el?.offsetTop || 0;\n      el = el?.offsetParent as HTMLElement;\n    } while (el && el !== scroller);\n\n    scroller?.scroll({\n      top: scrollValue,\n      behavior: 'smooth',\n    });\n    reportInteraction('explore_toolbar_contentoutline_clicked', {\n      item: 'select_section',\n      type: buttonTitle,\n    });\n  };\n\n  const toggle = () => {\n    toggleExpanded();\n    reportInteraction('explore_toolbar_contentoutline_clicked', {\n      item: 'outline',\n      type: expanded ? 'minimize' : 'expand',\n    });\n  };\n\n  return (\n    <PanelContainer className={styles.wrapper} id={panelId}>\n      <CustomScrollbar>\n        <div className={styles.content}>\n          <ContentOutlineItemButton\n            title={expanded ? 'Collapse outline' : undefined}\n            icon={expanded ? 'angle-left' : 'angle-right'}\n            onClick={toggle}\n            tooltip={!expanded ? 'Expand content outline' : undefined}\n            className={styles.buttonStyles}\n            aria-expanded={expanded}\n          />\n\n          {outlineItems.map((item) => (\n            <ContentOutlineItemButton\n              key={item.id}\n              title={expanded ? item.title : undefined}\n              className={styles.buttonStyles}\n              icon={item.icon}\n              onClick={() => scrollIntoView(item.ref, item.title)}\n              tooltip={!expanded ? item.title : undefined}\n            />\n          ))}\n        </div>\n      </CustomScrollbar>\n    </PanelContainer>\n  );\n}\n","import React, { useEffect, useRef, ReactNode } from 'react';\n\nimport { useContentOutlineContext } from './ContentOutlineContext';\n\nexport interface ContentOutlineItemBaseProps {\n  title: string;\n  icon: string;\n}\n\ninterface ContentOutlineItemProps extends ContentOutlineItemBaseProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport function ContentOutlineItem({ title, icon, children, className }: ContentOutlineItemProps) {\n  const { register, unregister } = useContentOutlineContext();\n  const ref = useRef(null);\n\n  useEffect(() => {\n    // When the component mounts, register it and get its unique ID.\n    const id = register({ title: title, icon: icon, ref: ref.current });\n\n    // When the component unmounts, unregister it using its unique ID.\n    return () => unregister(id);\n  }, [title, icon, register, unregister]);\n\n  return (\n    <div className={className} ref={ref}>\n      {children}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useId } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { ExploreCorrelationHelperData } from '@grafana/data';\nimport { Collapse, Alert, Field, Input } from '@grafana/ui';\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { changeCorrelationEditorDetails } from './state/main';\nimport { selectCorrelationDetails } from './state/selectors';\n\ninterface Props {\n  correlations: ExploreCorrelationHelperData;\n}\n\ninterface FormValues {\n  label: string;\n  description: string;\n}\n\nexport const CorrelationHelper = ({ correlations }: Props) => {\n  const dispatch = useDispatch();\n  const { register, watch } = useForm<FormValues>();\n  const [isOpen, setIsOpen] = useState(false);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const id = useId();\n\n  useEffect(() => {\n    const subscription = watch((value) => {\n      let dirty = false;\n\n      if (!correlationDetails?.dirty && (value.label !== '' || value.description !== '')) {\n        dirty = true;\n      } else if (correlationDetails?.dirty && value.label.trim() === '' && value.description.trim() === '') {\n        dirty = false;\n      }\n      dispatch(changeCorrelationEditorDetails({ label: value.label, description: value.description, dirty: dirty }));\n    });\n    return () => subscription.unsubscribe();\n  }, [correlationDetails?.dirty, dispatch, watch]);\n\n  // only fire once on mount to allow save button to enable / disable when unmounted\n  useEffect(() => {\n    dispatch(changeCorrelationEditorDetails({ canSave: true }));\n\n    return () => {\n      dispatch(changeCorrelationEditorDetails({ canSave: false }));\n    };\n  }, [dispatch]);\n\n  return (\n    <Alert title=\"Correlation details\" severity=\"info\">\n      The correlation link will appear by the <code>{correlations.resultField}</code> field. You can use the following\n      variables to set up your correlations:\n      <pre>\n        {Object.entries(correlations.vars).map((entry) => {\n          return `\\$\\{${entry[0]}\\} = ${entry[1]}\\n`;\n        })}\n      </pre>\n      <Collapse\n        collapsible\n        isOpen={isOpen}\n        onToggle={() => {\n          setIsOpen(!isOpen);\n        }}\n        label=\"Label/Description\"\n      >\n        <Field label=\"Label\" htmlFor={`${id}-label`}>\n          <Input {...register('label')} id={`${id}-label`} />\n        </Field>\n        <Field label=\"Description\" htmlFor={`${id}-description`}>\n          <Input {...register('description')} id={`${id}-description`} />\n        </Field>\n      </Collapse>\n    </Alert>\n  );\n};\n","import React, { useMemo } from 'react';\n\nimport { AbsoluteTimeRange, DataFrame, dateTime, EventBus, LoadingState, SplitOpen } from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { PanelChrome, PanelContext, PanelContextProvider } from '@grafana/ui';\n\nimport { getPanelPluginMeta } from '../plugins/importPanelPlugin';\n\nimport { useExploreDataLinkPostProcessor } from './hooks/useExploreDataLinkPostProcessor';\n\nexport interface Props {\n  width: number;\n  height: number;\n  timeZone: string;\n  pluginId: string;\n  frames: DataFrame[];\n  absoluteRange: AbsoluteTimeRange;\n  state: LoadingState;\n  splitOpenFn: SplitOpen;\n  eventBus: EventBus;\n}\n\nexport function CustomContainer({\n  width,\n  height,\n  timeZone,\n  state,\n  pluginId,\n  frames,\n  absoluteRange,\n  splitOpenFn,\n  eventBus,\n}: Props) {\n  const timeRange = useMemo(\n    () => ({\n      from: dateTime(absoluteRange.from),\n      to: dateTime(absoluteRange.to),\n      raw: {\n        from: dateTime(absoluteRange.from),\n        to: dateTime(absoluteRange.to),\n      },\n    }),\n    [absoluteRange.from, absoluteRange.to]\n  );\n\n  const plugin = getPanelPluginMeta(pluginId);\n\n  const dataLinkPostProcessor = useExploreDataLinkPostProcessor(splitOpenFn, timeRange);\n\n  const panelContext: PanelContext = {\n    dataLinkPostProcessor,\n    eventBus,\n    eventsScope: 'explore',\n  };\n\n  return (\n    <PanelContextProvider value={panelContext}>\n      <PanelChrome title={plugin.name} width={width} height={height} loadingState={state}>\n        {(innerWidth, innerHeight) => (\n          <PanelRenderer\n            data={{ series: frames, state: state, timeRange }}\n            pluginId={pluginId}\n            title=\"\"\n            width={innerWidth}\n            height={innerHeight}\n            timeZone={timeZone}\n          />\n        )}\n      </PanelChrome>\n    </PanelContextProvider>\n  );\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar rowSizeBase = {\n    width: '100%',\n    height: '10px',\n    top: '0px',\n    left: '0px',\n    cursor: 'row-resize',\n};\nvar colSizeBase = {\n    width: '10px',\n    height: '100%',\n    top: '0px',\n    left: '0px',\n    cursor: 'col-resize',\n};\nvar edgeBase = {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n};\nvar styles = {\n    top: __assign(__assign({}, rowSizeBase), { top: '-5px' }),\n    right: __assign(__assign({}, colSizeBase), { left: undefined, right: '-5px' }),\n    bottom: __assign(__assign({}, rowSizeBase), { top: undefined, bottom: '-5px' }),\n    left: __assign(__assign({}, colSizeBase), { left: '-5px' }),\n    topRight: __assign(__assign({}, edgeBase), { right: '-10px', top: '-10px', cursor: 'ne-resize' }),\n    bottomRight: __assign(__assign({}, edgeBase), { right: '-10px', bottom: '-10px', cursor: 'se-resize' }),\n    bottomLeft: __assign(__assign({}, edgeBase), { left: '-10px', bottom: '-10px', cursor: 'sw-resize' }),\n    topLeft: __assign(__assign({}, edgeBase), { left: '-10px', top: '-10px', cursor: 'nw-resize' }),\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexport { Resizer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport { Resizer } from './resizer';\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = function (n, min, max) { return Math.max(Math.min(n, max), min); };\nvar snap = function (n, size) { return Math.round(n / size) * size; };\nvar hasDirection = function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n};\n// INFO: In case of window is a Proxy and does not porxy Events correctly, use isTouchEvent & isMouseEvent to distinguish event type instead of `instanceof`.\nvar isTouchEvent = function (event) {\n    return Boolean(event.touches && event.touches.length);\n};\nvar isMouseEvent = function (event) {\n    return Boolean((event.clientX || event.clientX === 0) &&\n        (event.clientY || event.clientY === 0));\n};\nvar findClosestSnap = function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n};\nvar getStringSize = function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (n.endsWith('px')) {\n        return n;\n    }\n    if (n.endsWith('%')) {\n        return n;\n    }\n    if (n.endsWith('vh')) {\n        return n;\n    }\n    if (n.endsWith('vw')) {\n        return n;\n    }\n    if (n.endsWith('vmax')) {\n        return n;\n    }\n    if (n.endsWith('vmin')) {\n        return n;\n    }\n    return n + \"px\";\n};\nvar getPixelSize = function (size, parentSize, innerWidth, innerHeight) {\n    if (size && typeof size === 'string') {\n        if (size.endsWith('px')) {\n            return Number(size.replace('px', ''));\n        }\n        if (size.endsWith('%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        if (size.endsWith('vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return innerWidth * ratio;\n        }\n        if (size.endsWith('vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = function (parentSize, innerWidth, innerHeight, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width, innerWidth, innerHeight);\n    maxHeight = getPixelSize(maxHeight, parentSize.height, innerWidth, innerHeight);\n    minWidth = getPixelSize(minWidth, parentSize.width, innerWidth, innerHeight);\n    minHeight = getPixelSize(minHeight, parentSize.height, innerWidth, innerHeight);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n};\nvar definedProps = [\n    'as',\n    'style',\n    'className',\n    'grid',\n    'snap',\n    'bounds',\n    'boundsByDirection',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableRight = 0;\n        _this.resizableTop = 0;\n        _this.resizableBottom = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.appendBase = function () {\n            if (!_this.resizable || !_this.window) {\n                return null;\n            }\n            var parent = _this.parentNode;\n            if (!parent) {\n                return null;\n            }\n            var element = _this.window.document.createElement('div');\n            element.style.width = '100%';\n            element.style.height = '100%';\n            element.style.position = 'absolute';\n            element.style.transform = 'scale(0, 0)';\n            element.style.left = '0';\n            element.style.flex = '0 0 100%';\n            if (element.classList) {\n                element.classList.add(baseClassName);\n            }\n            else {\n                element.className += baseClassName;\n            }\n            parent.appendChild(element);\n            return element;\n        };\n        _this.removeBase = function (base) {\n            var parent = _this.parentNode;\n            if (!parent) {\n                return;\n            }\n            parent.removeChild(base);\n        };\n        _this.ref = function (c) {\n            if (c) {\n                _this.resizable = c;\n            }\n        };\n        _this.state = {\n            isResizing: false,\n            width: typeof (_this.propsSize && _this.propsSize.width) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.width,\n            height: typeof (_this.propsSize && _this.propsSize.height) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.height,\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n            flexBasis: undefined,\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"window\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            if (!this.resizable.ownerDocument) {\n                return null;\n            }\n            return this.resizable.ownerDocument.defaultView;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (this.resizable && this.window) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && _this.propsSize[key].toString().endsWith('%')) {\n                    if (_this.state[key].toString().endsWith('%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.parentNode) {\n            if (!this.window) {\n                return { width: 0, height: 0 };\n            }\n            return { width: this.window.innerWidth, height: this.window.innerHeight };\n        }\n        var base = this.appendBase();\n        if (!base) {\n            return { width: 0, height: 0 };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        base.style.position = 'relative';\n        base.style.minWidth = '100%';\n        base.style.minHeight = '100%';\n        var size = {\n            width: base.offsetWidth,\n            height: base.offsetHeight,\n        };\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.removeBase(base);\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (this.window) {\n            this.window.addEventListener('mouseup', this.onMouseUp);\n            this.window.addEventListener('mousemove', this.onMouseMove);\n            this.window.addEventListener('mouseleave', this.onMouseUp);\n            this.window.addEventListener('touchmove', this.onMouseMove, {\n                capture: true,\n                passive: false,\n            });\n            this.window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (this.window) {\n            this.window.removeEventListener('mouseup', this.onMouseUp);\n            this.window.removeEventListener('mousemove', this.onMouseMove);\n            this.window.removeEventListener('mouseleave', this.onMouseUp);\n            this.window.removeEventListener('touchmove', this.onMouseMove, true);\n            this.window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (this.window) {\n            this.unbindEvents();\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        var boundsByDirection = this.props.boundsByDirection;\n        var direction = this.state.direction;\n        var widthByDirection = boundsByDirection && hasDirection('left', direction);\n        var heightByDirection = boundsByDirection && hasDirection('top', direction);\n        var boundWidth;\n        var boundHeight;\n        if (this.props.bounds === 'parent') {\n            var parent_1 = this.parentNode;\n            if (parent_1) {\n                boundWidth = widthByDirection\n                    ? this.resizableRight - this.parentLeft\n                    : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);\n                boundHeight = heightByDirection\n                    ? this.resizableBottom - this.parentTop\n                    : parent_1.offsetHeight + (this.parentTop - this.resizableTop);\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (this.window) {\n                boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;\n                boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;\n            }\n        }\n        else if (this.props.bounds) {\n            boundWidth = widthByDirection\n                ? this.resizableRight - this.targetLeft\n                : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            boundHeight = heightByDirection\n                ? this.resizableBottom - this.targetTop\n                : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n        }\n        if (boundWidth && Number.isFinite(boundWidth)) {\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n        }\n        if (boundHeight && Number.isFinite(boundHeight)) {\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var resizeRatio = this.props.resizeRatio || 1;\n        var _a = this.state, direction = _a.direction, original = _a.original;\n        var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2) {\n                var parentRect = parent_2.getBoundingClientRect();\n                this.parentLeft = parentRect.left;\n                this.parentTop = parentRect.top;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds && typeof this.props.bounds !== 'string') {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left;\n            this.targetTop = targetRect.top;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top, right = _a.right, bottom = _a.bottom;\n            this.resizableLeft = left;\n            this.resizableRight = right;\n            this.resizableTop = top_1;\n            this.resizableBottom = bottom;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent && isMouseEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n        }\n        else if (event.nativeEvent && isTouchEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_3 = this.parentNode;\n            if (parent_3) {\n                var dir = this.window.getComputedStyle(parent_3).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        var _this = this;\n        if (!this.state.isResizing || !this.resizable || !this.window) {\n            return;\n        }\n        if (this.window.TouchEvent && isTouchEvent(event)) {\n            try {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            catch (e) {\n                // Ignore on fail\n            }\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = isTouchEvent(event) ? event.touches[0].clientX : event.clientX;\n        var clientY = isTouchEvent(event) ? event.touches[0].clientY : event.clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0]);\n            var newGridHeight = snap(newHeight, this.props.grid[1]);\n            var gap = this.props.snapGap || 0;\n            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (width.endsWith('%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (width.endsWith('vw')) {\n                var vw = (newWidth / this.window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (width.endsWith('vh')) {\n                var vh = (newWidth / this.window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (height.endsWith('%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (height.endsWith('vw')) {\n                var vw = (newHeight / this.window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (height.endsWith('vh')) {\n                var vh = (newHeight / this.window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        // For v18, update state sync\n        flushSync(function () {\n            _this.setState(newState);\n        });\n        if (this.props.onResize) {\n            this.props.onResize(event, direction, this.resizable, delta);\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState(this.props.size);\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        this.setState({ width: size.width, height: size.height });\n    };\n    Resizable.prototype.renderResizer = function () {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = Object.keys(enable).map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"div\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        var Wrapper = this.props.as || 'div';\n        return (React.createElement(Wrapper, __assign({ ref: this.ref, style: style, className: this.props.className }, extendsProps),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.props.children,\n            this.renderResizer()));\n    };\n    Resizable.defaultProps = {\n        as: 'div',\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexport { Resizable };\n","// Libraries\nimport { css, cx, keyframes } from '@emotion/css';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport React from 'react';\n\n// Services & Utils\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { stylesFactory, useTheme2 } from '@grafana/ui';\n\n// Types\n\nconst drawerSlide = (theme: GrafanaTheme2) => keyframes`\n  0% {\n    transform: translateY(${theme.components.horizontalDrawer.defaultHeight}px);\n  }\n\n  100% {\n    transform: translateY(0px);\n  }\n`;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      position: fixed !important;\n      bottom: 0;\n      background: ${theme.colors.background.primary};\n      border-top: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(0, -2, 0, -2)};\n      box-shadow: ${theme.shadows.z3};\n      z-index: ${theme.zIndex.navbarFixed};\n    `,\n    drawerActive: css`\n      opacity: 1;\n      animation: 0.5s ease-out ${drawerSlide(theme)};\n    `,\n    rzHandle: css`\n      background: ${theme.colors.secondary.main};\n      transition: 0.3s background ease-in-out;\n      position: relative;\n      width: 200px !important;\n      height: 7px !important;\n      left: calc(50% - 100px) !important;\n      top: -4px !important;\n      cursor: grab;\n      border-radius: ${theme.shape.radius.pill};\n      &:hover {\n        background: ${theme.colors.secondary.shade};\n      }\n    `,\n  };\n});\n\nexport interface Props {\n  width: number;\n  children: React.ReactNode;\n  onResize?: ResizeCallback;\n}\n\nexport function ExploreDrawer(props: Props) {\n  const { width, children, onResize } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const drawerWidth = `${width + 31.5}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.container, styles.drawerActive)}\n      defaultSize={{ width: drawerWidth, height: `${theme.components.horizontalDrawer.defaultHeight}px` }}\n      handleClasses={{ top: styles.rzHandle }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      maxWidth={drawerWidth}\n      minWidth={drawerWidth}\n      onResize={onResize}\n    >\n      {children}\n    </Resizable>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { CoreApp, LoadingState, TimeZone } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { defaultTimeZone } from '@grafana/schema';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { StoreState, ExploreItemState } from 'app/types';\n\nimport { runQueries } from './state/query';\n\ninterface DispatchProps {\n  width: number;\n  exploreId: string;\n  timeZone: TimeZone;\n  onClose: () => void;\n}\n\ntype Props = DispatchProps & ConnectedProps<typeof connector>;\n\nexport function ExploreQueryInspector(props: Props) {\n  const { width, onClose, queryResponse, timeZone } = props;\n  const dataFrames = queryResponse?.series || [];\n  let errors = queryResponse?.errors;\n  if (!errors?.length && queryResponse?.error) {\n    errors = [queryResponse.error];\n  }\n\n  useEffect(() => {\n    reportInteraction('grafana_explore_query_inspector_opened');\n  }, []);\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone ?? defaultTimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        dataName={'Explore'}\n        isLoading={queryResponse.state === LoadingState.Loading}\n        options={{ withTransforms: false, withFieldConfig: false }}\n        timeZone={timeZone}\n        app={CoreApp.Explore}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: (\n      <QueryInspector data={queryResponse} onRefreshQuery={() => props.runQueries({ exploreId: props.exploreId })} />\n    ),\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (errors?.length) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab errors={errors} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer width={width}>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const { queryResponse } = item;\n\n  return {\n    queryResponse,\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connector(ExploreQueryInspector);\n","import React from 'react';\n\nimport { Tooltip, ToolbarButton } from '@grafana/ui';\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <ToolbarButton\n        icon=\"link\"\n        variant={isSynced ? 'active' : 'canvas'}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={onClick}\n      />\n    </Tooltip>\n  );\n}\n","import React, { Component } from 'react';\n\nimport { TimeRange, TimeZone, RawTimeRange, dateTimeForTimeZone, dateMath } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\n\nimport { TimeSyncButton } from './TimeSyncButton';\n\nexport interface Props {\n  exploreId: string;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  fiscalYearStartMonth: number;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth: (fiscalYearStartMonth: number) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n\n    this.props.onChangeTime({\n      from: adjustedFrom,\n      to: adjustedTo,\n    });\n\n    reportInteraction('grafana_explore_time_picker_time_range_changed', {\n      timeRangeFrom: adjustedFrom,\n      timeRangeTo: adjustedTo,\n    });\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const {\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      onChangeTimeSync,\n      hideText,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n    } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      fiscalYearStartMonth,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        isOnCanvas\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        widthOverride={splitted ? window.innerWidth / 2 : undefined}\n        onChange={this.onChangeTimePicker}\n        onChangeTimeZone={onChangeTimeZone}\n        onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n      />\n    );\n  }\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { Tooltip, ButtonGroup, ToolbarButton } from '@grafana/ui';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const buttonVariant = isLive && !isPaused ? 'active' : 'canvas';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst styles = {\n  stopButtonEnter: css`\n    label: stopButtonEnter;\n    width: 0;\n    opacity: 0;\n    overflow: hidden;\n  `,\n  stopButtonEnterActive: css`\n    label: stopButtonEnterActive;\n    opacity: 1;\n    width: 32px;\n  `,\n  stopButtonExit: css`\n    label: stopButtonExit;\n    width: 32px;\n    opacity: 1;\n    overflow: hidden;\n  `,\n  stopButtonExitActive: css`\n    label: stopButtonExitActive;\n    opacity: 0;\n    width: 0;\n  `,\n};\n","import React, { ReactElement } from 'react';\n\nimport { locationUtil } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { Button, Modal, VerticalGroup } from '@grafana/ui';\n\ntype Props = {\n  onDismiss: () => void;\n  path: string;\n  title: string;\n};\n\nexport function ConfirmNavigationModal(props: Props): ReactElement {\n  const { onDismiss, path, title } = props;\n  const openInNewTab = () => {\n    global.open(locationUtil.assureBaseUrl(path), '_blank');\n    onDismiss();\n  };\n  const openInCurrentTab = () => locationService.push(path);\n\n  return (\n    <Modal title={title} isOpen onDismiss={onDismiss}>\n      <VerticalGroup spacing=\"sm\">\n        <p>Do you want to proceed in the current tab or open a new tab?</p>\n      </VerticalGroup>\n      <Modal.ButtonRow>\n        <Button onClick={onDismiss} fill=\"outline\" variant=\"secondary\">\n          Cancel\n        </Button>\n        <Button type=\"submit\" variant=\"secondary\" onClick={openInNewTab} icon=\"external-link-alt\">\n          Open in new tab\n        </Button>\n        <Button type=\"submit\" variant=\"primary\" onClick={openInCurrentTab} icon=\"apps\">\n          Open\n        </Button>\n      </Modal.ButtonRow>\n    </Modal>\n  );\n}\n","import React, { ReactElement, useMemo } from 'react';\n\nimport { PluginExtensionLink } from '@grafana/data';\nimport { Menu } from '@grafana/ui';\nimport { truncateTitle } from 'app/features/plugins/extensions/utils';\n\ntype Props = {\n  extensions: PluginExtensionLink[];\n  onSelect: (extension: PluginExtensionLink) => void;\n};\n\nexport function ToolbarExtensionPointMenu({ extensions, onSelect }: Props): ReactElement | null {\n  const { categorised, uncategorised } = useExtensionLinksByCategory(extensions);\n  const showDivider = uncategorised.length > 0 && Object.keys(categorised).length > 0;\n\n  return (\n    <Menu>\n      <>\n        {Object.keys(categorised).map((category) => (\n          <Menu.Group key={category} label={truncateTitle(category, 25)}>\n            {renderItems(categorised[category], onSelect)}\n          </Menu.Group>\n        ))}\n        {showDivider && <Menu.Divider key=\"divider\" />}\n        {renderItems(uncategorised, onSelect)}\n      </>\n    </Menu>\n  );\n}\n\nfunction renderItems(extensions: PluginExtensionLink[], onSelect: (link: PluginExtensionLink) => void): JSX.Element[] {\n  return extensions.map((extension) => (\n    <Menu.Item\n      ariaLabel={extension.title}\n      icon={extension?.icon || 'plug'}\n      key={extension.id}\n      label={truncateTitle(extension.title, 25)}\n      onClick={(event) => {\n        if (extension.path) {\n          return onSelect(extension);\n        }\n        extension.onClick?.(event);\n      }}\n    />\n  ));\n}\n\ntype ExtensionLinksResult = {\n  uncategorised: PluginExtensionLink[];\n  categorised: Record<string, PluginExtensionLink[]>;\n};\n\nfunction useExtensionLinksByCategory(extensions: PluginExtensionLink[]): ExtensionLinksResult {\n  return useMemo(() => {\n    const uncategorised: PluginExtensionLink[] = [];\n    const categorised: Record<string, PluginExtensionLink[]> = {};\n\n    for (const link of extensions) {\n      if (!link.category) {\n        uncategorised.push(link);\n        continue;\n      }\n\n      if (!Array.isArray(categorised[link.category])) {\n        categorised[link.category] = [];\n      }\n      categorised[link.category].push(link);\n      continue;\n    }\n\n    return {\n      uncategorised,\n      categorised,\n    };\n  }, [extensions]);\n}\n","import React, { lazy, ReactElement, Suspense, useMemo, useState } from 'react';\n\nimport { type PluginExtensionLink, PluginExtensionPoints, RawTimeRange, getTimeZone } from '@grafana/data';\nimport { getPluginLinkExtensions, config } from '@grafana/runtime';\nimport { DataQuery, TimeZone } from '@grafana/schema';\nimport { Dropdown, ToolbarButton } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction, ExplorePanelData, useSelector } from 'app/types';\n\nimport { getExploreItemSelector, isLeftPaneSelector, selectCorrelationDetails } from '../state/selectors';\n\nimport { ConfirmNavigationModal } from './ConfirmNavigationModal';\nimport { ToolbarExtensionPointMenu } from './ToolbarExtensionPointMenu';\n\nconst AddToDashboard = lazy(() =>\n  import('./AddToDashboard').then(({ AddToDashboard }) => ({ default: AddToDashboard }))\n);\n\ntype Props = {\n  exploreId: string;\n  timeZone: TimeZone;\n  splitted: boolean;\n};\n\nexport function ToolbarExtensionPoint(props: Props): ReactElement | null {\n  const { exploreId, splitted } = props;\n  const [selectedExtension, setSelectedExtension] = useState<PluginExtensionLink | undefined>();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const context = useExtensionPointContext(props);\n  const extensions = useExtensionLinks(context);\n  const selectExploreItem = getExploreItemSelector(exploreId);\n  const noQueriesInPane = useSelector(selectExploreItem)?.queries?.length;\n\n  // If we only have the explore core extension point registered we show the old way of\n  // adding a query to a dashboard.\n  if (extensions.length <= 1) {\n    const canAddPanelToDashboard =\n      contextSrv.hasPermission(AccessControlAction.DashboardsCreate) ||\n      contextSrv.hasPermission(AccessControlAction.DashboardsWrite);\n\n    if (!canAddPanelToDashboard) {\n      return null;\n    }\n\n    return (\n      <Suspense fallback={null}>\n        <AddToDashboard exploreId={exploreId} />\n      </Suspense>\n    );\n  }\n\n  const menu = <ToolbarExtensionPointMenu extensions={extensions} onSelect={setSelectedExtension} />;\n\n  return (\n    <>\n      <Dropdown onVisibleChange={setIsOpen} placement=\"bottom-start\" overlay={menu}>\n        <ToolbarButton\n          aria-label=\"Add\"\n          icon=\"plus\"\n          disabled={!Boolean(noQueriesInPane)}\n          variant=\"canvas\"\n          isOpen={isOpen}\n        >\n          {splitted ? ' ' : 'Add'}\n        </ToolbarButton>\n      </Dropdown>\n      {!!selectedExtension && !!selectedExtension.path && (\n        <ConfirmNavigationModal\n          path={selectedExtension.path}\n          title={selectedExtension.title}\n          onDismiss={() => setSelectedExtension(undefined)}\n        />\n      )}\n    </>\n  );\n}\n\nexport type PluginExtensionExploreContext = {\n  exploreId: string;\n  targets: DataQuery[];\n  data: ExplorePanelData;\n  timeRange: RawTimeRange;\n  timeZone: TimeZone;\n  shouldShowAddCorrelation: boolean;\n};\n\nfunction useExtensionPointContext(props: Props): PluginExtensionExploreContext {\n  const { exploreId, timeZone } = props;\n  const isCorrelationDetails = useSelector(selectCorrelationDetails);\n  const isCorrelationsEditorMode = isCorrelationDetails?.editorMode || false;\n  const { queries, queryResponse, range } = useSelector(getExploreItemSelector(exploreId))!;\n  const isLeftPane = useSelector(isLeftPaneSelector(exploreId));\n\n  const datasourceUids = queries.map((query) => query?.datasource?.uid).filter((uid) => uid !== undefined);\n  const numUniqueIds = [...new Set(datasourceUids)].length;\n  const canWriteCorrelations = contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  return useMemo(() => {\n    return {\n      exploreId,\n      targets: queries,\n      data: queryResponse,\n      timeRange: range.raw,\n      timeZone: getTimeZone({ timeZone }),\n      shouldShowAddCorrelation:\n        config.featureToggles.correlations === true &&\n        canWriteCorrelations &&\n        !isCorrelationsEditorMode &&\n        isLeftPane &&\n        numUniqueIds === 1,\n    };\n  }, [\n    exploreId,\n    queries,\n    queryResponse,\n    range.raw,\n    timeZone,\n    canWriteCorrelations,\n    isCorrelationsEditorMode,\n    isLeftPane,\n    numUniqueIds,\n  ]);\n}\n\nfunction useExtensionLinks(context: PluginExtensionExploreContext): PluginExtensionLink[] {\n  return useMemo(() => {\n    const { extensions } = getPluginLinkExtensions({\n      extensionPointId: PluginExtensionPoints.ExploreToolbarAction,\n      context: context,\n      limitPerPlugin: 3,\n    });\n\n    return extensions;\n  }, [context]);\n}\n","import React, { useCallback } from 'react';\n\nimport { RefreshPicker } from '@grafana/ui';\nimport { useDispatch } from 'app/types';\n\nimport { setPausedStateAction, runQueries, clearLogs } from './state/query';\nimport { changeRefreshInterval } from './state/time';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: string) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval({ exploreId, refreshInterval: RefreshPicker.offOption.value }));\n    dispatch(runQueries({ exploreId }));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval({ exploreId, refreshInterval: RefreshPicker.liveOption.value }));\n  }, [exploreId, dispatch]);\n\n  const clear = useCallback(() => {\n    dispatch(clearLogs({ exploreId }));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n    clear,\n  };\n}\n\ntype Props = {\n  exploreId: string;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import { css, cx } from '@emotion/css';\nimport { pick } from 'lodash';\nimport React, { RefObject, useMemo } from 'react';\nimport { shallowEqual } from 'react-redux';\n\nimport { DataSourceInstanceSettings, RawTimeRange, GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction, config } from '@grafana/runtime';\nimport {\n  defaultIntervals,\n  PageToolbar,\n  RefreshPicker,\n  SetInterval,\n  ToolbarButton,\n  ButtonGroup,\n  useStyles2,\n} from '@grafana/ui';\nimport { AppChromeUpdate } from 'app/core/components/AppChrome/AppChromeUpdate';\nimport { t, Trans } from 'app/core/internationalization';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { DataSourcePicker } from 'app/features/datasources/components/picker/DataSourcePicker';\nimport { CORRELATION_EDITOR_POST_CONFIRM_ACTION } from 'app/types/explore';\nimport { StoreState, useDispatch, useSelector } from 'app/types/store';\n\nimport { contextSrv } from '../../core/core';\nimport { DashNavButton } from '../dashboard/components/DashNav/DashNavButton';\nimport { updateFiscalYearStartMonthForSession, updateTimeZoneForSession } from '../profile/state/reducers';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\n\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { ToolbarExtensionPoint } from './extensions/ToolbarExtensionPoint';\nimport { changeDatasource } from './state/datasource';\nimport { changeCorrelationHelperData } from './state/explorePane';\nimport {\n  splitClose,\n  splitOpen,\n  maximizePaneAction,\n  evenPaneResizeAction,\n  changeCorrelationEditorDetails,\n} from './state/main';\nimport { cancelQueries, runQueries, selectIsWaitingForData } from './state/query';\nimport { isLeftPaneSelector, isSplit, selectCorrelationDetails, selectPanesEntries } from './state/selectors';\nimport { syncTimes, changeRefreshInterval } from './state/time';\nimport { LiveTailControls } from './useLiveTailControls';\n\nconst getStyles = (theme: GrafanaTheme2, splitted: Boolean) => ({\n  rotateIcon: css({\n    '> div > svg': {\n      transform: 'rotate(180deg)',\n    },\n  }),\n  toolbarButton: css({\n    display: 'flex',\n    justifyContent: 'center',\n    marginRight: theme.spacing(0.5),\n    width: splitted && theme.spacing(6),\n  }),\n});\n\ninterface Props {\n  exploreId: string;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n  onContentOutlineToogle: () => void;\n  isContentOutlineOpen: boolean;\n  topOfViewRef?: RefObject<HTMLDivElement>;\n}\n\nexport function ExploreToolbar({\n  exploreId,\n  topOfViewRef,\n  onChangeTime,\n  onContentOutlineToogle,\n  isContentOutlineOpen,\n}: Props) {\n  const dispatch = useDispatch();\n  const splitted = useSelector(isSplit);\n  const styles = useStyles2(getStyles, splitted);\n\n  const timeZone = useSelector((state: StoreState) => getTimeZone(state.user));\n  const fiscalYearStartMonth = useSelector((state: StoreState) => getFiscalYearStartMonth(state.user));\n  const { refreshInterval, datasourceInstance, range, isLive, isPaused, syncedTimes } = useSelector(\n    (state: StoreState) => ({\n      ...pick(state.explore.panes[exploreId]!, 'refreshInterval', 'datasourceInstance', 'range', 'isLive', 'isPaused'),\n      syncedTimes: state.explore.syncedTimes,\n    }),\n    shallowEqual\n  );\n  const loading = useSelector(selectIsWaitingForData(exploreId));\n  const isLargerPane = useSelector((state: StoreState) => state.explore.largerExploreId === exploreId);\n  const showSmallTimePicker = useSelector((state) => splitted || state.explore.panes[exploreId]!.containerWidth < 1210);\n  const showSmallDataSourcePicker = useSelector(\n    (state) => state.explore.panes[exploreId]!.containerWidth < (splitted ? 700 : 800)\n  );\n\n  const panes = useSelector(selectPanesEntries);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const isCorrelationsEditorMode = correlationDetails?.editorMode || false;\n  const isLeftPane = useSelector(isLeftPaneSelector(exploreId));\n\n  const shouldRotateSplitIcon = useMemo(\n    () => (isLeftPane && isLargerPane) || (!isLeftPane && !isLargerPane),\n    [isLeftPane, isLargerPane]\n  );\n\n  const refreshPickerLabel = loading\n    ? t('explore.toolbar.refresh-picker-cancel', 'Cancel')\n    : t('explore.toolbar.refresh-picker-run', 'Run query');\n\n  const onCopyShortLink = () => {\n    createAndCopyShortLink(global.location.href);\n    reportInteraction('grafana_explore_shortened_link_clicked');\n  };\n\n  const onChangeDatasource = async (dsSettings: DataSourceInstanceSettings) => {\n    if (!isCorrelationsEditorMode) {\n      dispatch(changeDatasource(exploreId, dsSettings.uid, { importQueries: true }));\n    } else {\n      if (correlationDetails?.dirty) {\n        // prompt will handle datasource change if needed\n        dispatch(\n          changeCorrelationEditorDetails({\n            isExiting: true,\n            postConfirmAction: {\n              exploreId: exploreId,\n              action: CORRELATION_EDITOR_POST_CONFIRM_ACTION.CHANGE_DATASOURCE,\n              changeDatasourceUid: dsSettings.uid,\n            },\n          })\n        );\n      } else {\n        // if the left pane is changing, clear helper data for right pane\n        if (isLeftPane) {\n          panes.forEach((pane) => {\n            dispatch(\n              changeCorrelationHelperData({\n                exploreId: pane[0],\n                correlationEditorHelperData: undefined,\n              })\n            );\n          });\n        }\n\n        dispatch(changeDatasource(exploreId, dsSettings.uid, { importQueries: true }));\n      }\n    }\n  };\n\n  const onRunQuery = (loading = false) => {\n    if (loading) {\n      return dispatch(cancelQueries(exploreId));\n    } else {\n      return dispatch(runQueries({ exploreId }));\n    }\n  };\n\n  const onChangeTimeZone = (timezone: string) => dispatch(updateTimeZoneForSession(timezone));\n\n  const onOpenSplitView = () => {\n    dispatch(splitOpen());\n    reportInteraction('grafana_explore_split_view_opened', { origin: 'menu' });\n  };\n\n  const onCloseSplitView = () => {\n    if (isCorrelationsEditorMode) {\n      if (correlationDetails?.dirty) {\n        // if dirty, prompt\n        dispatch(\n          changeCorrelationEditorDetails({\n            isExiting: true,\n            postConfirmAction: {\n              exploreId: exploreId,\n              action: CORRELATION_EDITOR_POST_CONFIRM_ACTION.CLOSE_PANE,\n            },\n          })\n        );\n      } else {\n        // otherwise, clear helper data and close\n        panes.forEach((pane) => {\n          dispatch(\n            changeCorrelationHelperData({\n              exploreId: pane[0],\n              correlationEditorHelperData: undefined,\n            })\n          );\n        });\n        dispatch(splitClose(exploreId));\n        reportInteraction('grafana_explore_split_view_closed');\n      }\n    } else {\n      dispatch(splitClose(exploreId));\n      reportInteraction('grafana_explore_split_view_closed');\n    }\n  };\n\n  const onClickResize = () => {\n    if (isLargerPane) {\n      dispatch(evenPaneResizeAction());\n    } else {\n      dispatch(maximizePaneAction({ exploreId }));\n    }\n  };\n\n  const onChangeTimeSync = () => {\n    dispatch(syncTimes(exploreId));\n  };\n\n  const onChangeFiscalYearStartMonth = (fiscalyearStartMonth: number) =>\n    dispatch(updateFiscalYearStartMonthForSession(fiscalyearStartMonth));\n\n  const onChangeRefreshInterval = (refreshInterval: string) => {\n    dispatch(changeRefreshInterval({ exploreId, refreshInterval }));\n  };\n\n  const navBarActions = [\n    <DashNavButton\n      key=\"share\"\n      tooltip={t('explore.toolbar.copy-shortened-link', 'Copy shortened link')}\n      icon=\"share-alt\"\n      onClick={onCopyShortLink}\n      aria-label={t('explore.toolbar.copy-shortened-link', 'Copy shortened link')}\n    />,\n    <div style={{ flex: 1 }} key=\"spacer0\" />,\n  ];\n\n  return (\n    <div ref={topOfViewRef}>\n      {refreshInterval && <SetInterval func={onRunQuery} interval={refreshInterval} loading={loading} />}\n      <div ref={topOfViewRef}>\n        <AppChromeUpdate actions={navBarActions} />\n      </div>\n      <PageToolbar\n        aria-label={t('explore.toolbar.aria-label', 'Explore toolbar')}\n        leftItems={[\n          config.featureToggles.exploreContentOutline && (\n            <ToolbarButton\n              key=\"content-outline\"\n              variant=\"canvas\"\n              tooltip=\"Content outline\"\n              icon=\"list-ui-alt\"\n              iconOnly={splitted}\n              onClick={onContentOutlineToogle}\n              aria-expanded={isContentOutlineOpen}\n              aria-controls={isContentOutlineOpen ? 'content-outline-container' : undefined}\n              className={styles.toolbarButton}\n            >\n              Outline\n            </ToolbarButton>\n          ),\n          <DataSourcePicker\n            key={`${exploreId}-ds-picker`}\n            mixed={!isCorrelationsEditorMode}\n            onChange={onChangeDatasource}\n            current={datasourceInstance?.getRef()}\n            hideTextValue={showSmallDataSourcePicker}\n            width={showSmallDataSourcePicker ? 8 : undefined}\n          />,\n        ].filter(Boolean)}\n        forceShowLeftItems\n      >\n        {[\n          !splitted ? (\n            <ToolbarButton\n              variant=\"canvas\"\n              key=\"split\"\n              tooltip={t('explore.toolbar.split-tooltip', 'Split the pane')}\n              onClick={onOpenSplitView}\n              icon=\"columns\"\n              disabled={isLive}\n            >\n              <Trans i18nKey=\"explore.toolbar.split-title\">Split</Trans>\n            </ToolbarButton>\n          ) : (\n            <ButtonGroup key=\"split-controls\">\n              <ToolbarButton\n                variant=\"canvas\"\n                tooltip={\n                  isLargerPane\n                    ? t('explore.toolbar.split-narrow', 'Narrow pane')\n                    : t('explore.toolbar.split-widen', 'Widen pane')\n                }\n                onClick={onClickResize}\n                icon={isLargerPane ? 'gf-movepane-left' : 'gf-movepane-right'}\n                iconOnly={true}\n                className={cx(shouldRotateSplitIcon && styles.rotateIcon)}\n              />\n              <ToolbarButton\n                tooltip={t('explore.toolbar.split-close-tooltip', 'Close split pane')}\n                onClick={onCloseSplitView}\n                icon=\"times\"\n                variant=\"canvas\"\n              >\n                <Trans i18nKey=\"explore.toolbar.split-close\"> Close </Trans>\n              </ToolbarButton>\n            </ButtonGroup>\n          ),\n          <ToolbarExtensionPoint\n            splitted={splitted}\n            key=\"toolbar-extension-point\"\n            exploreId={exploreId}\n            timeZone={timeZone}\n          />,\n          !isLive && (\n            <ExploreTimeControls\n              key=\"timeControls\"\n              exploreId={exploreId}\n              range={range}\n              timeZone={timeZone}\n              fiscalYearStartMonth={fiscalYearStartMonth}\n              onChangeTime={onChangeTime}\n              splitted={splitted}\n              syncedTimes={syncedTimes}\n              onChangeTimeSync={onChangeTimeSync}\n              hideText={showSmallTimePicker}\n              onChangeTimeZone={onChangeTimeZone}\n              onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n            />\n          ),\n          <RefreshPicker\n            key=\"refreshPicker\"\n            onIntervalChanged={onChangeRefreshInterval}\n            value={refreshInterval}\n            isLoading={loading}\n            text={showSmallTimePicker ? undefined : refreshPickerLabel}\n            tooltip={showSmallTimePicker ? refreshPickerLabel : undefined}\n            intervals={contextSrv.getValidIntervals(defaultIntervals)}\n            isLive={isLive}\n            onRefresh={() => onRunQuery(loading)}\n            noIntervalPicker={isLive}\n            primary={true}\n            width={(showSmallTimePicker ? 35 : 108) + 'px'}\n          />,\n          datasourceInstance?.meta.streaming && (\n            <LiveTailControls key=\"liveControls\" exploreId={exploreId}>\n              {(c) => {\n                const controls = {\n                  ...c,\n                  start: () => {\n                    reportInteraction('grafana_explore_logs_live_tailing_clicked', {\n                      datasourceType: datasourceInstance?.type,\n                    });\n                    c.start();\n                  },\n                };\n                return (\n                  <LiveTailButton\n                    splitted={splitted}\n                    isLive={isLive}\n                    isPaused={isPaused}\n                    start={controls.start}\n                    pause={controls.pause}\n                    resume={controls.resume}\n                    stop={controls.stop}\n                  />\n                );\n              }}\n            </LiveTailControls>\n          ),\n        ].filter(Boolean)}\n      </PageToolbar>\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { DataFrame, GrafanaTheme2, CoreApp } from '@grafana/data';\nimport { FlameGraph } from '@grafana/flamegraph';\nimport { reportInteraction, config } from '@grafana/runtime';\nimport { useStyles2 } from '@grafana/ui';\n\ninterface Props {\n  dataFrames: DataFrame[];\n}\n\nfunction interaction(name: string, context: Record<string, string | number> = {}) {\n  reportInteraction(`grafana_flamegraph_${name}`, {\n    app: CoreApp.Unknown,\n    grafana_version: config.buildInfo.version,\n    ...context,\n  });\n}\n\nexport const FlameGraphExploreContainer = (props: Props) => {\n  const styles = useStyles2((theme) => getStyles(theme));\n\n  return (\n    <div className={styles.container}>\n      <FlameGraph\n        data={props.dataFrames[0]}\n        stickyHeader={true}\n        getTheme={() => config.theme2}\n        onTableSymbolClick={() => interaction('table_item_selected')}\n        onViewSelected={(view: string) => interaction('view_selected', { view })}\n        onTextAlignSelected={(align: string) => interaction('text_align_selected', { align })}\n        onTableSort={(sort: string) => interaction('table_sort_selected', { sort })}\n      />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    background: ${theme.colors.background.primary};\n    display: flow-root;\n    padding: 0 ${theme.spacing(1)} ${theme.spacing(1)} ${theme.spacing(1)};\n    border: 1px solid ${theme.components.panel.borderColor};\n    border-radius: ${theme.shape.radius.default};\n  `,\n});\n","import React, { useState, useEffect } from 'react';\nimport { useInterval } from 'react-use';\n\nimport { Time, TimeProps } from './Time';\n\nconst INTERVAL = 150;\n\nexport interface ElapsedTimeProps extends Omit<TimeProps, 'timeInMs'> {\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: unknown;\n}\n\nexport const ElapsedTime = ({ resetKey, humanize, className }: ElapsedTimeProps) => {\n  const [elapsed, setElapsed] = useState(0); // the current value of elapsed\n\n  // hook that will schedule a interval and then update the elapsed value on every tick.\n  useInterval(() => setElapsed(elapsed + INTERVAL), INTERVAL);\n  // this effect will only be run when resetKey changes. This will reset the elapsed to 0.\n  useEffect(() => setElapsed(0), [resetKey]);\n\n  return <Time timeInMs={elapsed} className={className} humanize={humanize} />;\n};\n","import { css, cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { LogRowModel, TimeZone, dateTimeFormat, GrafanaTheme2, LogsSortOrder } from '@grafana/data';\nimport { Button, Themeable2, withTheme2 } from '@grafana/ui';\n\nimport { LogMessageAnsi } from '../../logs/components/LogMessageAnsi';\nimport { getLogRowStyles } from '../../logs/components/getLogRowStyles';\nimport { sortLogRows } from '../../logs/utils';\nimport { ElapsedTime } from '../ElapsedTime';\nimport { filterLogRowsByIndex } from '../state/utils';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 60vh;\n    overflow-y: scroll;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.h6.fontSize};\n    padding-top: ${theme.spacing(1)};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing(1)};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable2 {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  onClear: () => void;\n  clearedAtIndex: number | null;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (nextProps.isPaused && nextProps.clearedAtIndex) {\n      return {\n        logRowsToRender: filterLogRowsByIndex(nextProps.clearedAtIndex, state.logRowsToRender),\n      };\n    }\n\n    if (nextProps.isPaused) {\n      return null;\n    }\n\n    return {\n      // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n      // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n      // without creating a gap in the log results.\n      logRowsToRender: nextProps.logRows,\n    };\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = sortLogRows(rowsToRender, LogsSortOrder.Ascending).slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, onClear, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={styles.logsRowsLive}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  <td className={logsRowLocalTime}>{dateTimeFormat(row.timeEpochMs, { timeZone })}</td>\n                  <td className={logsRowMessage}>{row.hasAnsi ? <LogMessageAnsi value={row.raw} /> : row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={(element) => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                // As scrollTo is not implemented in JSDOM it needs to be part of the condition\n                if (this.liveEndDiv && this.scrollContainerRef.current?.scrollTo && !isPaused) {\n                  this.scrollContainerRef.current?.scrollTo(0, this.scrollContainerRef.current.scrollHeight);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={styles.logsRowsIndicator}>\n          <Button\n            icon={isPaused ? 'play' : 'pause'}\n            variant=\"secondary\"\n            onClick={isPaused ? onResume : onPause}\n            className={styles.button}\n          >\n            {isPaused ? 'Resume' : 'Pause'}\n          </Button>\n          <Button icon=\"trash-alt\" variant=\"secondary\" onClick={onClear} className={styles.button}>\n            Clear logs\n          </Button>\n          <Button icon=\"square-shape\" variant=\"secondary\" onClick={this.props.stopLive} className={styles.button}>\n            Exit live mode\n          </Button>\n          {isPaused ||\n            (this.rowsToRender().length > 0 && (\n              <span>\n                Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n              </span>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme2(LiveLogs);\n","export const SETTINGS_KEYS = {\n  showLabels: 'grafana.explore.logs.showLabels',\n  showTime: 'grafana.explore.logs.showTime',\n  wrapLogMessage: 'grafana.explore.logs.wrapLogMessage',\n  prettifyLogMessage: 'grafana.explore.logs.prettifyLogMessage',\n  logsSortOrder: 'grafana.explore.logs.sortOrder',\n  logContextWrapLogMessage: 'grafana.explore.logs.logContext.wrapLogMessage',\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { Spinner } from '@grafana/ui';\n\nimport { Place } from './types';\n\n// ideally we'd use `@grafana/ui/LoadingPlaceholder`, but that\n// one has a large margin-bottom.\n\ntype Props = {\n  place: Place;\n};\n\nexport const LoadingIndicator = ({ place }: Props) => {\n  const text = place === 'above' ? 'Loading newer logs...' : 'Loading older logs...';\n  return (\n    <div className={loadingIndicatorStyles}>\n      <div>\n        {text} <Spinner inline />\n      </div>\n    </div>\n  );\n};\n\nconst loadingIndicatorStyles = css`\n  display: flex;\n  justify-content: center;\n`;\n","import { css } from '@emotion/css';\nimport React, { useCallback } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button, InlineSwitch, useStyles2 } from '@grafana/ui';\n\nexport type Props = {\n  wrapLines?: boolean;\n  onChangeWrapLines: (wrapLines: boolean) => void;\n  onScrollCenterClick: () => void;\n};\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    buttons: css({\n      display: 'flex',\n      gap: theme.spacing(1),\n    }),\n  };\n}\n\nexport const LogContextButtons = (props: Props) => {\n  const styles = useStyles2(getStyles);\n  const { wrapLines, onChangeWrapLines, onScrollCenterClick } = props;\n  const internalOnChangeWrapLines = useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      const state = event.currentTarget.checked;\n      reportInteraction('grafana_explore_logs_log_context_toggle_lines_clicked', {\n        state,\n      });\n      onChangeWrapLines(state);\n    },\n    [onChangeWrapLines]\n  );\n\n  return (\n    <div className={styles.buttons}>\n      <InlineSwitch showLabel value={wrapLines} onChange={internalOnChangeWrapLines} label=\"Wrap lines\" />\n      <Button variant=\"secondary\" onClick={onScrollCenterClick}>\n        Center matched line\n      </Button>\n    </div>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport { partition } from 'lodash';\nimport React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { useAsync } from 'react-use';\n\nimport {\n  DataQueryResponse,\n  DataSourceWithLogsContextSupport,\n  GrafanaTheme2,\n  LogRowContextOptions,\n  LogRowContextQueryDirection,\n  LogRowModel,\n  LogsDedupStrategy,\n  LogsSortOrder,\n  dateTime,\n  TimeRange,\n  LoadingState,\n} from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { DataQuery, TimeZone } from '@grafana/schema';\nimport { Button, Modal, useTheme2 } from '@grafana/ui';\nimport store from 'app/core/store';\nimport { SETTINGS_KEYS } from 'app/features/explore/Logs/utils/logs';\nimport { splitOpen } from 'app/features/explore/state/main';\nimport { useDispatch } from 'app/types';\n\nimport { dataFrameToLogsModel } from '../../logsModel';\nimport { sortLogRows } from '../../utils';\nimport { LogRows } from '../LogRows';\n\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { LogContextButtons } from './LogContextButtons';\nimport { Place } from './types';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    modal: css`\n      width: 85vw;\n      ${theme.breakpoints.down('md')} {\n        width: 100%;\n      }\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    `,\n    sticky: css`\n      position: sticky;\n      z-index: 1;\n      top: -1px;\n      bottom: -1px;\n    `,\n    entry: css`\n      & > td {\n        padding: ${theme.spacing(1)} 0 ${theme.spacing(1)} 0;\n      }\n      background: ${theme.colors.emphasize(theme.colors.background.secondary)};\n\n      & > table {\n        margin-bottom: 0;\n      }\n\n      & .log-row-menu {\n        margin-top: -6px;\n      }\n    `,\n    datasourceUi: css`\n      padding-bottom: ${theme.spacing(1.25)};\n      display: flex;\n      align-items: center;\n    `,\n    logRowGroups: css`\n      overflow: auto;\n      max-height: 75%;\n      align-self: stretch;\n      display: inline-block;\n      border: 1px solid ${theme.colors.border.weak};\n      border-radius: ${theme.shape.radius.default};\n      & > table {\n        min-width: 100%;\n      }\n    `,\n    flexColumn: css`\n      display: flex;\n      flex-direction: column;\n      padding: 0 ${theme.spacing(3)} ${theme.spacing(3)} ${theme.spacing(3)};\n    `,\n    flexRow: css`\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      & > div:last-child {\n        margin-left: auto;\n      }\n    `,\n    noMarginBottom: css`\n      & > table {\n        margin-bottom: 0;\n      }\n    `,\n    hidden: css`\n      display: none;\n    `,\n    paddingTop: css`\n      padding-top: ${theme.spacing(1)};\n    `,\n    paddingBottom: css`\n      padding-bottom: ${theme.spacing(1)};\n    `,\n    link: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      :hover {\n        color: ${theme.colors.text.link};\n      }\n    `,\n    loadingCell: css`\n      position: sticky;\n      left: 50%;\n      display: inline-block;\n      transform: translateX(-50%);\n    `,\n  };\n};\n\ninterface LogRowContextModalProps {\n  row: LogRowModel;\n  open: boolean;\n  timeZone: TimeZone;\n  onClose: () => void;\n  getRowContext: (row: LogRowModel, options: LogRowContextOptions) => Promise<DataQueryResponse>;\n\n  getRowContextQuery?: (row: LogRowModel, options?: LogRowContextOptions) => Promise<DataQuery | null>;\n  logsSortOrder: LogsSortOrder;\n  runContextQuery?: () => void;\n  getLogRowContextUi?: DataSourceWithLogsContextSupport['getLogRowContextUi'];\n}\n\ntype Section = {\n  loadingState: LoadingState;\n  rows: LogRowModel[];\n};\ntype Context = Record<Place, Section>;\n\nconst makeEmptyContext = (): Context => ({\n  above: { loadingState: LoadingState.NotStarted, rows: [] },\n  below: { loadingState: LoadingState.NotStarted, rows: [] },\n});\n\nconst getLoadMoreDirection = (place: Place, sortOrder: LogsSortOrder): LogRowContextQueryDirection => {\n  if (place === 'above' && sortOrder === LogsSortOrder.Descending) {\n    return LogRowContextQueryDirection.Forward;\n  }\n  if (place === 'below' && sortOrder === LogsSortOrder.Ascending) {\n    return LogRowContextQueryDirection.Forward;\n  }\n\n  return LogRowContextQueryDirection.Backward;\n};\n\ntype LoadCounter = Record<Place, number>;\n\nconst normalizeLogRowRefId = (row: LogRowModel, counter: LoadCounter): LogRowModel => {\n  // the datasoure plugins often create the context-query based on the row's dataframe's refId,\n  // by appending something to it. for example:\n  // - let's say the row's dataframe's refId is \"query\"\n  // - the datasource plugin will take \"query\" and append \"-context\" to it, so it becomes \"query-context\".\n  // - later we want to load even more lines, so we make a context query\n  // - the datasource plugin does the same transform again, but now the source is \"query-context\",\n  //   so the new refId becomes \"query-context-context\"\n  // - next time it becomes \"query-context-context-context\", and so on.\n  // we do not want refIds to grow unbounded.\n  // to avoid this, we set the refId to a value that does not grow.\n  // on the other hand, the refId is also used in generating the row's UID, so it is useful\n  // when the refId is not always the exact same string, otherwise UID duplication can occur,\n  // which may cause problems.\n  // so we go with an approach where the refId always changes, but does not grow.\n  return {\n    ...row,\n    dataFrame: {\n      ...row.dataFrame,\n      refId: `context_${counter.above}_${counter.below}`,\n    },\n  };\n};\n\nconst containsRow = (rows: LogRowModel[], row: LogRowModel) => {\n  return rows.some((r) => r.entry === row.entry && r.timeEpochNs === row.timeEpochNs);\n};\n\nconst PAGE_SIZE = 100;\n\nexport const LogRowContextModal: React.FunctionComponent<LogRowContextModalProps> = ({\n  row,\n  open,\n  logsSortOrder,\n  timeZone,\n  getLogRowContextUi,\n  getRowContextQuery,\n  onClose,\n  getRowContext,\n}) => {\n  const scrollElement = useRef<HTMLDivElement | null>(null);\n  const entryElement = useRef<HTMLTableRowElement | null>(null);\n  // We can not use `entryElement` to scroll to the right element because it's\n  // sticky. That's why we add another row and use this ref to scroll to that\n  // first.\n  const preEntryElement = useRef<HTMLTableRowElement | null>(null);\n\n  const prevScrollHeightRef = useRef<number | null>(null);\n  const prevClientHeightRef = useRef<number | null>(null);\n\n  const aboveLoadingElement = useRef<HTMLDivElement | null>(null);\n  const belowLoadingElement = useRef<HTMLDivElement | null>(null);\n\n  const loadCountRef = useRef<LoadCounter>({ above: 0, below: 0 });\n\n  const dispatch = useDispatch();\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  const [sticky, setSticky] = useState(true);\n\n  // we need to keep both the \"above\" and \"below\" rows\n  // in the same react-state, to be able to atomically change both\n  // at the same time.\n  // we create the `setSection` convenience function to adjust any\n  // part of it easily.\n  const [context, setContext] = useState<Context>(makeEmptyContext());\n  const setSection = (place: Place, fun: (s: Section) => Section) => {\n    setContext((c) => {\n      const newContext = { ...c };\n      newContext[place] = fun(c[place]);\n      return newContext;\n    });\n  };\n\n  // this is used to \"cancel\" the ongoing load-more requests.\n  // whenever we want to cancel them, we increment this number.\n  // and when those requests return, we check if the number\n  // is still the same as when we started. and if it is not the same,\n  // we ignore the results.\n  //\n  // best would be to literally cancel those requests,\n  // but right now there's no way with the current logs-context API.\n  const generationRef = useRef(1);\n\n  const [contextQuery, setContextQuery] = useState<DataQuery | null>(null);\n  const [wrapLines, setWrapLines] = useState(\n    store.getBool(SETTINGS_KEYS.logContextWrapLogMessage, store.getBool(SETTINGS_KEYS.wrapLogMessage, true))\n  );\n  const getFullTimeRange = useCallback(() => {\n    const { below, above } = context;\n    const allRows = sortLogRows([...below.rows, row, ...above.rows], LogsSortOrder.Ascending);\n    const fromMs = allRows[0].timeEpochMs;\n    let toMs = allRows[allRows.length - 1].timeEpochMs;\n    // In case we have a lot of logs and from and to have same millisecond\n    // we add 1 millisecond to toMs to make sure we have a range\n    if (fromMs === toMs) {\n      toMs += 1;\n    }\n    const from = dateTime(fromMs);\n    const to = dateTime(toMs);\n\n    const range: TimeRange = {\n      from,\n      to,\n      raw: {\n        from,\n        to,\n      },\n    };\n    return range;\n  }, [context, row]);\n\n  const updateContextQuery = useCallback(async () => {\n    const contextQuery = getRowContextQuery ? await getRowContextQuery(row) : null;\n    setContextQuery(contextQuery);\n  }, [row, getRowContextQuery]);\n\n  const updateResults = async () => {\n    await updateContextQuery();\n    setContext(makeEmptyContext());\n    loadCountRef.current = { above: 0, below: 0 };\n    generationRef.current += 1; // results from currently running loadMore calls will be ignored\n  };\n\n  const loadMore = async (place: Place, allRows: LogRowModel[]): Promise<LogRowModel[]> => {\n    loadCountRef.current[place] += 1;\n    const refRow = allRows.at(place === 'above' ? 0 : -1);\n    if (refRow == null) {\n      throw new Error('should never happen. the array always contains at least 1 item (the middle row)');\n    }\n\n    reportInteraction('grafana_explore_logs_log_context_load_more_called', {\n      datasourceType: refRow.datasourceType,\n      above: loadCountRef.current.above,\n      below: loadCountRef.current.below,\n    });\n\n    const direction = getLoadMoreDirection(place, logsSortOrder);\n\n    const result = await getRowContext(normalizeLogRowRefId(refRow, loadCountRef.current), {\n      limit: PAGE_SIZE,\n      direction,\n    });\n    const newRows = dataFrameToLogsModel(result.data).rows;\n\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      newRows.reverse();\n    }\n\n    const out = newRows.filter((r) => {\n      return !containsRow(allRows, r);\n    });\n\n    return out;\n  };\n\n  useEffect(() => {\n    if (open) {\n      updateContextQuery();\n    }\n  }, [updateContextQuery, open]);\n\n  const [displayedFields, setDisplayedFields] = useState<string[]>([]);\n\n  const showField = (key: string) => {\n    const index = displayedFields.indexOf(key);\n\n    if (index === -1) {\n      setDisplayedFields([...displayedFields, key]);\n    }\n  };\n\n  const hideField = (key: string) => {\n    const index = displayedFields.indexOf(key);\n\n    if (index > -1) {\n      displayedFields.splice(index, 1);\n      setDisplayedFields([...displayedFields]);\n    }\n  };\n\n  const maybeLoadMore = async (place: Place) => {\n    const { below, above } = context;\n    const section = context[place];\n    if (section.loadingState === LoadingState.Loading) {\n      return;\n    }\n\n    setSection(place, (section) => ({\n      ...section,\n      loadingState: LoadingState.Loading,\n    }));\n\n    const currentGen = generationRef.current;\n    try {\n      // we consider all the currently existing rows, even the original row,\n      // this way this array of rows will never be empty\n      const allRows = [...above.rows, row, ...below.rows];\n\n      const newRows = await loadMore(place, allRows);\n      const [older, newer] = partition(newRows, (newRow) => newRow.timeEpochNs > row.timeEpochNs);\n      const newAbove = logsSortOrder === LogsSortOrder.Ascending ? newer : older;\n      const newBelow = logsSortOrder === LogsSortOrder.Ascending ? older : newer;\n\n      if (currentGen === generationRef.current) {\n        setContext((c) => {\n          // we should only modify the row-arrays if necessary\n          const sortedNewAbove =\n            newAbove.length > 0 ? sortLogRows([...newAbove, ...c.above.rows], logsSortOrder) : c.above.rows;\n          const sortedNewBelow =\n            newBelow.length > 0 ? sortLogRows([...c.below.rows, ...newBelow], logsSortOrder) : c.below.rows;\n          return {\n            above: {\n              rows: sortedNewAbove,\n              loadingState:\n                place === 'above'\n                  ? newRows.length === 0\n                    ? LoadingState.Done\n                    : LoadingState.NotStarted\n                  : c.above.loadingState,\n            },\n            below: {\n              rows: sortedNewBelow,\n              loadingState:\n                place === 'below'\n                  ? newRows.length === 0\n                    ? LoadingState.Done\n                    : LoadingState.NotStarted\n                  : c.below.loadingState,\n            },\n          };\n        });\n      }\n    } catch {\n      setSection(place, (section) => ({\n        rows: section.rows,\n        loadingState: LoadingState.Error,\n      }));\n    }\n  };\n\n  const onScrollHit = async (entries: IntersectionObserverEntry[], observer: IntersectionObserver) => {\n    for (const entry of entries) {\n      // If the element is not intersecting, skip to the next one\n      if (!entry.isIntersecting) {\n        continue;\n      }\n\n      const targetElement = entry.target;\n\n      if (targetElement === aboveLoadingElement.current) {\n        maybeLoadMore('above');\n      } else if (targetElement === belowLoadingElement.current) {\n        maybeLoadMore('below');\n      }\n    }\n  };\n\n  useEffect(() => {\n    const scroll = scrollElement.current;\n    const aboveElem = aboveLoadingElement.current;\n    const belowElem = belowLoadingElement.current;\n\n    if (scroll == null) {\n      // should not happen, but need to make typescript happy\n      return;\n    }\n\n    const observer = new IntersectionObserver(onScrollHit, { root: scroll });\n\n    if (aboveElem != null) {\n      observer.observe(aboveElem);\n    }\n\n    if (belowElem != null) {\n      observer.observe(belowElem);\n    }\n\n    return () => {\n      observer.disconnect();\n    };\n  }); // on every render, why not\n\n  const scrollToCenter = useCallback(() => {\n    preEntryElement.current?.scrollIntoView({ block: 'center' });\n    entryElement.current?.scrollIntoView({ block: 'center' });\n  }, [preEntryElement, entryElement]);\n\n  useLayoutEffect(() => {\n    const scrollE = scrollElement.current;\n    if (scrollE == null) {\n      return;\n    }\n\n    const prevClientHeight = prevClientHeightRef.current;\n    const currentClientHeight = scrollE.clientHeight;\n    prevClientHeightRef.current = currentClientHeight;\n    if (prevClientHeight !== currentClientHeight) {\n      // height has changed, we scroll to the center\n      scrollToCenter();\n      return;\n    }\n\n    // if the newly loaded content is part of the initial load of `above` and `below`,\n    // we scroll to center, to keep the chosen log-row centered\n    if (loadCountRef.current.above <= 1 && loadCountRef.current.below <= 1) {\n      scrollToCenter();\n      return;\n    }\n\n    const prevScrollHeight = prevScrollHeightRef.current;\n    const currentHeight = scrollE.scrollHeight;\n    prevScrollHeightRef.current = currentHeight;\n    if (prevScrollHeight != null) {\n      const newScrollTop = scrollE.scrollTop + (currentHeight - prevScrollHeight);\n      scrollE.scrollTop = newScrollTop;\n    }\n  }, [context.above.rows, scrollToCenter]);\n\n  useAsync(updateContextQuery, [getRowContextQuery, row]);\n\n  const loadingStateAbove = context.above.loadingState;\n  const loadingStateBelow = context.below.loadingState;\n\n  return (\n    <Modal\n      isOpen={open}\n      title=\"Log context\"\n      contentClassName={styles.flexColumn}\n      className={styles.modal}\n      onDismiss={onClose}\n    >\n      {config.featureToggles.logsContextDatasourceUi && getLogRowContextUi && (\n        <div className={styles.datasourceUi}>{getLogRowContextUi(row, updateResults)}</div>\n      )}\n      <div className={cx(styles.flexRow, styles.paddingBottom)}>\n        <div>\n          <LogContextButtons\n            wrapLines={wrapLines}\n            onChangeWrapLines={setWrapLines}\n            onScrollCenterClick={scrollToCenter}\n          />\n        </div>\n      </div>\n      <div ref={scrollElement} className={styles.logRowGroups}>\n        <table>\n          <tbody>\n            <tr>\n              <td className={styles.loadingCell}>\n                {loadingStateAbove !== LoadingState.Done && loadingStateAbove !== LoadingState.Error && (\n                  <div ref={aboveLoadingElement}>\n                    <LoadingIndicator place=\"above\" />\n                  </div>\n                )}\n                {loadingStateAbove === LoadingState.Error && <div>Error loading log more logs.</div>}\n                {loadingStateAbove === LoadingState.Done && <div>No more logs available.</div>}\n              </td>\n            </tr>\n            <tr>\n              <td className={styles.noMarginBottom}>\n                <LogRows\n                  logRows={context.above.rows}\n                  dedupStrategy={LogsDedupStrategy.none}\n                  showLabels={store.getBool(SETTINGS_KEYS.showLabels, false)}\n                  showTime={store.getBool(SETTINGS_KEYS.showTime, true)}\n                  wrapLogMessage={wrapLines}\n                  prettifyLogMessage={store.getBool(SETTINGS_KEYS.prettifyLogMessage, false)}\n                  enableLogDetails={true}\n                  timeZone={timeZone}\n                  displayedFields={displayedFields}\n                  onClickShowField={showField}\n                  onClickHideField={hideField}\n                />\n              </td>\n            </tr>\n            <tr ref={preEntryElement}></tr>\n            <tr ref={entryElement} className={cx(styles.entry, sticky ? styles.sticky : null)} data-testid=\"entry-row\">\n              <td className={styles.noMarginBottom}>\n                <LogRows\n                  logRows={[row]}\n                  dedupStrategy={LogsDedupStrategy.none}\n                  showLabels={store.getBool(SETTINGS_KEYS.showLabels, false)}\n                  showTime={store.getBool(SETTINGS_KEYS.showTime, true)}\n                  wrapLogMessage={wrapLines}\n                  prettifyLogMessage={store.getBool(SETTINGS_KEYS.prettifyLogMessage, false)}\n                  enableLogDetails={true}\n                  timeZone={timeZone}\n                  displayedFields={displayedFields}\n                  onClickShowField={showField}\n                  onClickHideField={hideField}\n                  onUnpinLine={() => setSticky(false)}\n                  onPinLine={() => setSticky(true)}\n                  pinnedRowId={sticky ? row.uid : undefined}\n                  overflowingContent={true}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <>\n                  <LogRows\n                    logRows={context.below.rows}\n                    dedupStrategy={LogsDedupStrategy.none}\n                    showLabels={store.getBool(SETTINGS_KEYS.showLabels, false)}\n                    showTime={store.getBool(SETTINGS_KEYS.showTime, true)}\n                    wrapLogMessage={wrapLines}\n                    prettifyLogMessage={store.getBool(SETTINGS_KEYS.prettifyLogMessage, false)}\n                    enableLogDetails={true}\n                    timeZone={timeZone}\n                    displayedFields={displayedFields}\n                    onClickShowField={showField}\n                    onClickHideField={hideField}\n                  />\n                </>\n              </td>\n            </tr>\n            <tr>\n              <td className={styles.loadingCell}>\n                {loadingStateBelow !== LoadingState.Done && loadingStateBelow !== LoadingState.Error && (\n                  <div ref={belowLoadingElement}>\n                    <LoadingIndicator place=\"below\" />\n                  </div>\n                )}\n                {loadingStateBelow === LoadingState.Error && <div>Error loading log more logs.</div>}\n                {loadingStateBelow === LoadingState.Done && <div>No more logs available.</div>}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <Modal.ButtonRow>\n        {contextQuery?.datasource?.uid && (\n          <Button\n            variant=\"secondary\"\n            onClick={async () => {\n              let rowId = row.uid;\n              if (row.dataFrame.refId) {\n                // the orignal row has the refid from the base query and not the refid from the context query, so we need to replace it.\n                rowId = row.uid.replace(row.dataFrame.refId, contextQuery.refId);\n              }\n\n              dispatch(\n                splitOpen({\n                  queries: [contextQuery],\n                  range: getFullTimeRange(),\n                  datasourceUid: contextQuery.datasource!.uid!,\n                  panelsState: {\n                    logs: {\n                      id: rowId,\n                    },\n                  },\n                })\n              );\n              onClose();\n              reportInteraction('grafana_explore_logs_log_context_open_split_view_clicked', {\n                datasourceType: row.datasourceType,\n                logRowUid: row.uid,\n              });\n            }}\n          >\n            Open in split view\n          </Button>\n        )}\n      </Modal.ButtonRow>\n    </Modal>\n  );\n};\n","export const isFulfilled = <T>(promise: PromiseSettledResult<T>): promise is PromiseFulfilledResult<T> =>\n  promise.status === 'fulfilled';\n\n// TS<5 does not support `in` operator for type narrowing. once we upgrade to TS5, we can remove this function and just use the in operator instead.\nexport function hasKey<K extends string, T extends object>(k: K, o: T): o is T & Record<K, unknown> {\n  return k in o;\n}\n","import { ExploreUrlState } from '@grafana/data';\nimport { safeParseJson } from 'app/core/utils/explore';\nimport { DEFAULT_RANGE } from 'app/features/explore/state/utils';\n\nimport { BaseExploreURL, MigrationHandler } from './types';\n\nexport interface ExploreURLV0 extends BaseExploreURL {\n  schemaVersion: 0;\n  left: ExploreUrlState;\n  right?: ExploreUrlState;\n}\n\nexport const v0Migrator: MigrationHandler<never, ExploreURLV0> = {\n  parse: (params) => {\n    return {\n      schemaVersion: 0,\n      left: parseUrlState(typeof params.left === 'string' ? params.left : undefined),\n      ...(params.right && {\n        right: parseUrlState(typeof params.right === 'string' ? params.right : undefined),\n      }),\n    };\n  },\n};\n\nconst isSegment = (segment: { [key: string]: string }, ...props: string[]) =>\n  props.some((prop) => segment.hasOwnProperty(prop));\n\nenum ParseUrlStateIndex {\n  RangeFrom = 0,\n  RangeTo = 1,\n  Datasource = 2,\n  SegmentsStart = 3,\n}\n\nfunction parseUrlState(initial: string | undefined): ExploreUrlState {\n  const parsed = safeParseJson(initial);\n  const errorResult = {\n    datasource: null,\n    queries: [],\n    range: DEFAULT_RANGE,\n  };\n\n  if (!parsed) {\n    return errorResult;\n  }\n\n  if (!Array.isArray(parsed)) {\n    return { queries: [], range: DEFAULT_RANGE, ...parsed };\n  }\n\n  if (parsed.length <= ParseUrlStateIndex.SegmentsStart) {\n    console.error('Error parsing compact URL state for Explore.');\n    return errorResult;\n  }\n\n  const range = {\n    from: parsed[ParseUrlStateIndex.RangeFrom],\n    to: parsed[ParseUrlStateIndex.RangeTo],\n  };\n  const datasource = parsed[ParseUrlStateIndex.Datasource];\n  const parsedSegments = parsed.slice(ParseUrlStateIndex.SegmentsStart);\n  const queries = parsedSegments.filter((segment) => !isSegment(segment, 'ui', 'mode', '__panelsState'));\n\n  const panelsState = parsedSegments.find((segment) => isSegment(segment, '__panelsState'))?.__panelsState;\n  return { datasource, queries, range, panelsState };\n}\n","import { ExploreUrlState } from '@grafana/data';\nimport { generateExploreId, safeParseJson } from 'app/core/utils/explore';\nimport { DEFAULT_RANGE } from 'app/features/explore/state/utils';\n\nimport { hasKey } from '../../utils';\n\nimport { BaseExploreURL, MigrationHandler } from './types';\nimport { ExploreURLV0 } from './v0';\n\nexport interface ExploreURLV1 extends BaseExploreURL {\n  schemaVersion: 1;\n  panes: {\n    [id: string]: ExploreUrlState;\n  };\n}\n\nexport const v1Migrator: MigrationHandler<ExploreURLV0, ExploreURLV1> = {\n  parse: (params) => {\n    if (!params || !params.panes || typeof params.panes !== 'string') {\n      return {\n        schemaVersion: 1,\n        panes: {\n          [generateExploreId()]: DEFAULT_STATE,\n        },\n      };\n    }\n\n    const rawPanes: Record<string, unknown> = safeParseJson(params.panes) || {};\n\n    const panes = Object.entries(rawPanes)\n      .map(([key, value]) => [key, applyDefaults(value)] as const)\n      .reduce<Record<string, ExploreUrlState>>((acc, [key, value]) => {\n        return {\n          ...acc,\n          [key]: value,\n        };\n      }, {});\n\n    if (!Object.keys(panes).length) {\n      panes[generateExploreId()] = DEFAULT_STATE;\n    }\n\n    return {\n      schemaVersion: 1,\n      panes,\n    };\n  },\n  migrate: (params) => {\n    return {\n      schemaVersion: 1,\n      panes: {\n        [generateExploreId()]: params.left,\n        ...(params.right && { [generateExploreId()]: params.right }),\n      },\n    };\n  },\n};\n\nconst DEFAULT_STATE: ExploreUrlState = {\n  datasource: null,\n  queries: [],\n  range: DEFAULT_RANGE,\n};\n\nfunction applyDefaults(input: unknown): ExploreUrlState {\n  if (!input || typeof input !== 'object') {\n    return DEFAULT_STATE;\n  }\n\n  return {\n    ...DEFAULT_STATE,\n    // queries\n    ...(hasKey('queries', input) && Array.isArray(input.queries) && { queries: input.queries }),\n    // datasource\n    ...(hasKey('datasource', input) && typeof input.datasource === 'string' && { datasource: input.datasource }),\n    // panelsState\n    ...(hasKey('panelsState', input) &&\n      !!input.panelsState &&\n      typeof input.panelsState === 'object' && { panelsState: input.panelsState }),\n    // range\n    ...(hasKey('range', input) &&\n      !!input.range &&\n      typeof input.range === 'object' &&\n      hasKey('from', input.range) &&\n      hasKey('to', input.range) &&\n      typeof input.range.from === 'string' &&\n      typeof input.range.to === 'string' && { range: { from: input.range.from, to: input.range.to } }),\n  };\n}\n","import { ExploreQueryParams } from 'app/types';\n\nimport { v0Migrator } from './migrators/v0';\nimport { ExploreURLV1, v1Migrator } from './migrators/v1';\n\ntype ExploreURL = ExploreURLV1;\n\nexport const parseURL = (params: ExploreQueryParams) => {\n  return migrate(params);\n};\n\nconst migrators = [v0Migrator, v1Migrator] as const;\n\nconst migrate = (params: ExploreQueryParams): ExploreURL => {\n  const schemaVersion = getSchemaVersion(params);\n\n  const [parser, ...migratorsToRun] = migrators.slice(schemaVersion);\n\n  const parsedUrl = parser.parse(params);\n\n  // @ts-expect-error\n  const final: ExploreURL = migratorsToRun.reduce((acc, migrator) => {\n    // @ts-expect-error\n    return migrator.migrate ? migrator.migrate(acc) : acc;\n  }, parsedUrl);\n\n  return final;\n};\n\nfunction getSchemaVersion(params: ExploreQueryParams): number {\n  if (!params || !('schemaVersion' in params) || !params.schemaVersion) {\n    return 0;\n  }\n\n  if (typeof params.schemaVersion === 'number') {\n    return params.schemaVersion;\n  }\n\n  if (typeof params.schemaVersion === 'string') {\n    return Number.parseInt(params.schemaVersion, 10);\n  }\n\n  return 0;\n}\n","import { identity, isEmpty, isEqual, isObject, mapValues, omitBy } from 'lodash';\nimport { useEffect, useRef } from 'react';\n\nimport { CoreApp, ExploreUrlState, DataSourceApi, toURLRange, EventBusSrv } from '@grafana/data';\nimport { DataQuery, DataSourceRef } from '@grafana/schema';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\nimport { clearQueryKeys, getLastUsedDatasourceUID } from 'app/core/utils/explore';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { addListener, ExploreItemState, ExploreQueryParams, useDispatch, useSelector } from 'app/types';\n\nimport { changeDatasource } from '../../state/datasource';\nimport { initializeExplore } from '../../state/explorePane';\nimport { clearPanes, splitClose, splitOpen, syncTimesAction } from '../../state/main';\nimport { runQueries, setQueriesAction } from '../../state/query';\nimport { selectPanes } from '../../state/selectors';\nimport { changeRangeAction, updateTime } from '../../state/time';\nimport { DEFAULT_RANGE, fromURLRange } from '../../state/utils';\nimport { withUniqueRefIds } from '../../utils/queries';\nimport { isFulfilled } from '../utils';\n\nimport { parseURL } from './parseURL';\n\n/**\n * Bi-directionally syncs URL changes with Explore's state.\n */\nexport function useStateSync(params: ExploreQueryParams) {\n  const { location } = useGrafana();\n  const dispatch = useDispatch();\n  const panesState = useSelector(selectPanes);\n  const orgId = useSelector((state) => state.user.orgId);\n  const prevParams = useRef(params);\n  const initState = useRef<'notstarted' | 'pending' | 'done'>('notstarted');\n\n  useEffect(() => {\n    // This happens when the user navigates to an explore \"empty page\" while within Explore.\n    // ie. by clicking on the explore when explore is active.\n    if (!params.panes) {\n      initState.current = 'notstarted';\n      prevParams.current = params;\n    }\n  }, [params]);\n\n  useEffect(() => {\n    const unsubscribe = dispatch(\n      addListener({\n        predicate: (action) =>\n          // We want to update the URL when:\n          // - a pane is opened or closed\n          // - a query is run\n          // - range is changed\n          [splitClose.type, splitOpen.fulfilled.type, runQueries.pending.type, changeRangeAction.type].includes(\n            action.type\n          ),\n        effect: async (_, { cancelActiveListeners, delay, getState }) => {\n          // The following 2 lines will throttle updates to avoid creating history entries when rapid changes\n          // are committed to the store.\n          cancelActiveListeners();\n          await delay(200);\n\n          const panesQueryParams = Object.entries(getState().explore.panes).reduce((acc, [id, paneState]) => {\n            if (!paneState) {\n              return acc;\n            }\n            return {\n              ...acc,\n              [id]: getUrlStateFromPaneState(paneState),\n            };\n          }, {});\n\n          if (!isEqual(prevParams.current.panes, JSON.stringify(panesQueryParams))) {\n            // If there's no previous state it means we are mounting explore for the first time,\n            // in this case we want to replace the URL instead of pushing a new entry to the history.\n            const replace =\n              !!prevParams.current.panes && Object.values(prevParams.current.panes).filter(Boolean).length === 0;\n\n            prevParams.current = {\n              panes: JSON.stringify(panesQueryParams),\n            };\n\n            location.partial({ panes: prevParams.current.panes }, replace);\n          }\n        },\n      })\n    );\n\n    // @ts-expect-error the return type of addListener is actually callable, but dispatch is not middleware-aware\n    return () => unsubscribe();\n  }, [dispatch, location]);\n\n  useEffect(() => {\n    const isURLOutOfSync = prevParams.current?.panes !== params.panes;\n\n    const urlState = parseURL(params);\n\n    async function sync() {\n      // if navigating the history causes one of the time range to not being equal to all the other ones,\n      // we set syncedTimes to false to avoid inconsistent UI state.\n      // Ideally `syncedTimes` should be saved in the URL.\n      if (Object.values(urlState.panes).some(({ range }, _, [{ range: firstRange }]) => !isEqual(range, firstRange))) {\n        dispatch(syncTimesAction({ syncedTimes: false }));\n      }\n\n      Object.entries(urlState.panes).forEach(([exploreId, urlPane], i) => {\n        const { datasource, queries, range, panelsState } = urlPane;\n\n        const paneState = panesState[exploreId];\n\n        if (paneState !== undefined) {\n          const update = urlDiff(urlPane, getUrlStateFromPaneState(paneState));\n\n          Promise.resolve()\n            .then(async () => {\n              if (update.datasource && datasource) {\n                await dispatch(changeDatasource(exploreId, datasource));\n              }\n              return;\n            })\n            .then(() => {\n              if (update.range) {\n                dispatch(updateTime({ exploreId, rawRange: fromURLRange(range) }));\n              }\n\n              if (update.queries) {\n                dispatch(setQueriesAction({ exploreId, queries: withUniqueRefIds(queries) }));\n              }\n\n              if (update.queries || update.range) {\n                dispatch(runQueries({ exploreId }));\n              }\n            });\n        } else {\n          // This happens when browser history is used to navigate.\n          // In this case we want to initialize the pane with the data from the URL\n          // if it's not present in the store. This may happen if the user has navigated\n          // from split view to non-split view and then back to split view.\n          dispatch(\n            initializeExplore({\n              exploreId,\n              datasource: datasource || '',\n              queries: withUniqueRefIds(queries),\n              range: fromURLRange(range),\n              panelsState,\n              position: i,\n              eventBridge: new EventBusSrv(),\n            })\n          );\n        }\n      });\n\n      // Close all the panes that are not in the URL but are still in the store\n      // ie. because the user has navigated back after opening the split view.\n      Object.keys(panesState)\n        .filter((keyInStore) => !Object.keys(urlState.panes).includes(keyInStore))\n        .forEach((paneId) => dispatch(splitClose(paneId)));\n    }\n\n    // This happens when the user first navigates to explore.\n    // Here we want to initialize each pane initial data, wether it comes\n    // from the url or as a result of migrations.\n    if (!isURLOutOfSync && initState.current === 'notstarted') {\n      initState.current = 'pending';\n\n      // Clear all the panes in the store first to avoid stale data.\n      dispatch(clearPanes());\n\n      Promise.all(\n        Object.entries(urlState.panes).map(([exploreId, { datasource, queries, range, panelsState }]) => {\n          return getPaneDatasource(datasource, queries, orgId).then((paneDatasource) => {\n            return Promise.resolve(\n              // Given the Grafana datasource will always be present, this should always be defined.\n              paneDatasource\n                ? queries.length\n                  ? // if we have queries in the URL, we use them\n                    withUniqueRefIds(queries)\n                      // but filter out the ones that are not compatible with the pane datasource\n                      .filter(getQueryFilter(paneDatasource))\n                      .map(\n                        isMixedDatasource(paneDatasource)\n                          ? identity<DataQuery>\n                          : (query) => ({ ...query, datasource: paneDatasource.getRef() })\n                      )\n                  : getDatasourceSrv()\n                      // otherwise we get a default query from the pane datasource or from the default datasource if the pane datasource is mixed\n                      .get(isMixedDatasource(paneDatasource) ? undefined : paneDatasource.getRef())\n                      .then((ds) => [getDefaultQuery(ds)])\n                : []\n            ).then(async (queries) => {\n              // we remove queries that have an invalid datasources\n              let validQueries = await removeQueriesWithInvalidDatasource(queries);\n\n              if (!validQueries.length && paneDatasource) {\n                // and in case there's no query left we add a default one.\n                validQueries = [\n                  getDefaultQuery(isMixedDatasource(paneDatasource) ? await getDatasourceSrv().get() : paneDatasource),\n                ];\n              }\n\n              return { exploreId, range, panelsState, queries: validQueries, datasource: paneDatasource };\n            });\n          });\n        })\n      ).then(async (panes) => {\n        const initializedPanes = await Promise.all(\n          panes.map(({ exploreId, range, panelsState, queries, datasource }) => {\n            return dispatch(\n              initializeExplore({\n                exploreId,\n                datasource,\n                queries,\n                range: fromURLRange(range),\n                panelsState,\n                eventBridge: new EventBusSrv(),\n              })\n            ).unwrap();\n          })\n        );\n\n        const newParams = initializedPanes.reduce(\n          (acc, { exploreId, state }) => {\n            return {\n              ...acc,\n              panes: {\n                ...acc.panes,\n                [exploreId]: getUrlStateFromPaneState(state),\n              },\n            };\n          },\n          {\n            panes: {},\n          }\n        );\n        initState.current = 'done';\n        // we need to use partial here beacuse replace doesn't encode the query params.\n        location.partial(\n          {\n            // partial doesn't remove other parameters, so we delete (by setting them to undefined) all the current one before adding the new ones.\n            ...Object.keys(location.getSearchObject()).reduce<Record<string, unknown>>((acc, key) => {\n              acc[key] = undefined;\n              return acc;\n            }, {}),\n            panes: JSON.stringify(newParams.panes),\n            schemaVersion: urlState.schemaVersion,\n            orgId,\n          },\n          true\n        );\n      });\n    }\n\n    prevParams.current = params;\n\n    isURLOutOfSync && initState.current === 'done' && sync();\n  }, [dispatch, panesState, orgId, location, params]);\n}\n\nfunction getDefaultQuery(ds: DataSourceApi) {\n  return { ...ds.getDefaultQuery?.(CoreApp.Explore), refId: 'A', datasource: ds.getRef() };\n}\n\nfunction isMixedDatasource(datasource: DataSourceApi) {\n  return datasource.name === MIXED_DATASOURCE_NAME;\n}\n\nfunction getQueryFilter(datasource?: DataSourceApi) {\n  // if the root datasource is mixed, filter out queries that don't have a datasource.\n  if (datasource && isMixedDatasource(datasource)) {\n    return (q: DataQuery) => !!q.datasource;\n  } else {\n    // else filter out queries that have a datasource different from the root one.\n    // Queries may not have a datasource, if so, it's assumed they are using the root datasource\n    return (q: DataQuery) => {\n      if (!q.datasource) {\n        return true;\n      }\n      // Due to legacy URLs, `datasource` in queries may be a string. This logic should probably be in the migration\n      if (typeof q.datasource === 'string') {\n        return q.datasource === datasource?.uid;\n      }\n\n      return q.datasource.uid === datasource?.uid;\n    };\n  }\n}\n\nasync function removeQueriesWithInvalidDatasource(queries: DataQuery[]) {\n  const results = await Promise.allSettled(\n    queries.map((query) => {\n      return getDatasourceSrv()\n        .get(query.datasource)\n        .then((ds) => ({\n          query,\n          ds,\n        }));\n    })\n  );\n\n  return results.filter(isFulfilled).map(({ value }) => value.query);\n}\n\n/**\n * Returns the datasource that an explore pane should be using.\n * If the URL specifies a datasource and that datasource exists, it will be used unless said datasource is mixed.\n * Otherwise the datasource will be extracetd from the the first query specifying a valid datasource.\n *\n * If there's no datasource in the queries, the last used datasource will be used.\n * if there's no last used datasource, the default datasource will be used.\n *\n * @param rootDatasource the top-level datasource specified in the URL\n * @param queries the queries in the pane\n * @param orgId the orgId of the user\n *\n * @returns the datasource UID that the pane should use, undefined if no suitable datasource is found\n */\nasync function getPaneDatasource(\n  rootDatasource: DataSourceRef | string | null | undefined,\n  queries: DataQuery[],\n  orgId: number\n) {\n  // If there's a root datasource, use it unless it's unavailable\n  if (rootDatasource) {\n    try {\n      return await getDatasourceSrv().get(rootDatasource);\n    } catch (_) {}\n  }\n\n  // TODO: if queries have multiple datasources we should return mixed datasource\n  // Else we try to find a datasource in the queries, returning the first one that exists\n  const queriesWithDS = queries.filter((q) => q.datasource);\n  for (const query of queriesWithDS) {\n    try {\n      return await getDatasourceSrv().get(query.datasource);\n    } catch (_) {}\n  }\n\n  // If none of the queries specify a avalid datasource, we use the last used one\n  const lastUsedDSUID = getLastUsedDatasourceUID(orgId);\n\n  return (\n    getDatasourceSrv()\n      .get(lastUsedDSUID)\n      // Or the default one\n      .catch(() => getDatasourceSrv().get())\n      .catch(() => undefined)\n  );\n}\n\n/**\n * Compare 2 explore urls and return a map of what changed. Used to update the local state with all the\n * side effects needed.\n */\nconst urlDiff = (\n  oldUrlState: ExploreUrlState | undefined,\n  currentUrlState: ExploreUrlState | undefined\n): {\n  datasource: boolean;\n  queries: boolean;\n  range: boolean;\n  panelsState: boolean;\n} => {\n  const datasource = !isEqual(currentUrlState?.datasource, oldUrlState?.datasource);\n  const queries = !isEqual(currentUrlState?.queries, oldUrlState?.queries);\n  const range = !isEqual(currentUrlState?.range || DEFAULT_RANGE, oldUrlState?.range || DEFAULT_RANGE);\n  const panelsState = !isEqual(currentUrlState?.panelsState, oldUrlState?.panelsState);\n\n  return {\n    datasource,\n    queries,\n    range,\n    panelsState,\n  };\n};\n\nexport function getUrlStateFromPaneState(pane: ExploreItemState): ExploreUrlState {\n  return {\n    // datasourceInstance should not be undefined anymore here but in case there is some path for it to be undefined\n    // lets just fallback instead of crashing.\n    datasource: pane.datasourceInstance?.uid || '',\n    queries: pane.queries.map(clearQueryKeys),\n    range: toURLRange(pane.range.raw),\n    // don't include panelsState in the url unless a piece of state is actually set\n    panelsState: pruneObject(pane.panelsState),\n  };\n}\n\n/**\n * recursively walks an object, removing keys where the value is undefined\n * if the resulting object is empty, returns undefined\n **/\nfunction pruneObject(obj: object): object | undefined {\n  let pruned = mapValues(obj, (value) => (isObject(value) ? pruneObject(value) : value));\n  pruned = omitBy<typeof pruned>(pruned, isEmpty);\n  if (isEmpty(pruned)) {\n    return undefined;\n  }\n  return pruned;\n}\n","import { css } from '@emotion/css';\nimport React, { memo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metaContainer: css`\n    flex: 1;\n    color: ${theme.colors.text.secondary};\n    margin-bottom: ${theme.spacing(2)};\n    min-width: 30%;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  metaItem: css`\n    margin-right: ${theme.spacing(2)};\n    margin-top: ${theme.spacing(0.5)};\n    display: flex;\n    align-items: center;\n\n    .logs-meta-item__error {\n      color: ${theme.colors.error.text};\n    }\n  `,\n  metaLabel: css`\n    margin-right: calc(${theme.spacing(2)} / 2);\n    font-size: ${theme.typography.bodySmall.fontSize};\n    font-weight: ${theme.typography.fontWeightMedium};\n  `,\n  metaValue: css`\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n  `,\n});\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string | JSX.Element;\n}\n\nconst MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const style = useStyles2(getStyles);\n  const { label, value } = props;\n\n  return (\n    <div data-testid=\"meta-info-text-item\" className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\ninterface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const style = useStyles2(getStyles);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer} data-testid=\"meta-info-text\">\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n","import { css } from '@emotion/css';\nimport saveAs from 'file-saver';\nimport React from 'react';\n\nimport { LogsDedupStrategy, LogsMetaItem, LogsMetaKind, LogRowModel, CoreApp, dateTimeFormat } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button, Dropdown, Menu, ToolbarButton, Tooltip, useStyles2 } from '@grafana/ui';\n\nimport { downloadLogsModelAsTxt } from '../../inspector/utils/download';\nimport { LogLabels } from '../../logs/components/LogLabels';\nimport { MAX_CHARACTERS } from '../../logs/components/LogRowMessage';\nimport { logRowsToReadableJson } from '../../logs/utils';\nimport { MetaInfoText, MetaItemProps } from '../MetaInfoText';\n\nconst getStyles = () => ({\n  metaContainer: css`\n    flex: 1;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n});\n\nexport type Props = {\n  meta: LogsMetaItem[];\n  dedupStrategy: LogsDedupStrategy;\n  dedupCount: number;\n  displayedFields: string[];\n  hasUnescapedContent: boolean;\n  forceEscape: boolean;\n  logRows: LogRowModel[];\n  onEscapeNewlines: () => void;\n  clearDetectedFields: () => void;\n};\n\nenum DownloadFormat {\n  Text = 'text',\n  Json = 'json',\n}\n\nexport const LogsMetaRow = React.memo(\n  ({\n    meta,\n    dedupStrategy,\n    dedupCount,\n    displayedFields,\n    clearDetectedFields,\n    hasUnescapedContent,\n    forceEscape,\n    onEscapeNewlines,\n    logRows,\n  }: Props) => {\n    const style = useStyles2(getStyles);\n\n    const downloadLogs = (format: DownloadFormat) => {\n      reportInteraction('grafana_logs_download_logs_clicked', {\n        app: CoreApp.Explore,\n        format,\n        area: 'logs-meta-row',\n      });\n\n      switch (format) {\n        case DownloadFormat.Text:\n          downloadLogsModelAsTxt({ meta, rows: logRows }, 'Explore');\n          break;\n        case DownloadFormat.Json:\n          const jsonLogs = logRowsToReadableJson(logRows);\n          const blob = new Blob([JSON.stringify(jsonLogs)], {\n            type: 'application/json;charset=utf-8',\n          });\n\n          const fileName = `Explore-logs-${dateTimeFormat(new Date())}.json`;\n          saveAs(blob, fileName);\n          break;\n      }\n    };\n\n    const logsMetaItem: Array<LogsMetaItem | MetaItemProps> = [...meta];\n\n    // Add deduplication info\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      logsMetaItem.push({\n        label: 'Deduplication count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n    // Add info about limit for highlighting\n    if (logRows.some((r) => r.entry.length > MAX_CHARACTERS)) {\n      logsMetaItem.push({\n        label: 'Info',\n        value: 'Logs with more than 100,000 characters could not be parsed and highlighted',\n        kind: LogsMetaKind.String,\n      });\n    }\n\n    // Add detected fields info\n    if (displayedFields?.length > 0) {\n      logsMetaItem.push(\n        {\n          label: 'Showing only selected fields',\n          value: renderMetaItem(displayedFields, LogsMetaKind.LabelsMap),\n        },\n        {\n          label: '',\n          value: (\n            <Button variant=\"secondary\" size=\"sm\" onClick={clearDetectedFields}>\n              Show original line\n            </Button>\n          ),\n        }\n      );\n    }\n\n    // Add unescaped content info\n    if (hasUnescapedContent) {\n      logsMetaItem.push({\n        label: 'Your logs might have incorrectly escaped content',\n        value: (\n          <Tooltip\n            content=\"Fix incorrectly escaped newline and tab sequences in log lines. Manually review the results to confirm that the replacements are correct.\"\n            placement=\"right\"\n          >\n            <Button variant=\"secondary\" size=\"sm\" onClick={onEscapeNewlines}>\n              {forceEscape ? 'Remove escaping' : 'Escape newlines'}\n            </Button>\n          </Tooltip>\n        ),\n      });\n    }\n    const downloadMenu = (\n      <Menu>\n        <Menu.Item label=\"txt\" onClick={() => downloadLogs(DownloadFormat.Text)} />\n        <Menu.Item label=\"json\" onClick={() => downloadLogs(DownloadFormat.Json)} />\n      </Menu>\n    );\n    return (\n      <>\n        {logsMetaItem && (\n          <div className={style.metaContainer}>\n            <MetaInfoText\n              metaItems={logsMetaItem.map((item) => {\n                return {\n                  label: item.label,\n                  value: 'kind' in item ? renderMetaItem(item.value, item.kind) : item.value,\n                };\n              })}\n            />\n            <Dropdown overlay={downloadMenu}>\n              <ToolbarButton isOpen={false} variant=\"canvas\" icon=\"download-alt\">\n                Download\n              </ToolbarButton>\n            </Dropdown>\n          </div>\n        )}\n      </>\n    );\n  }\n);\n\nLogsMetaRow.displayName = 'LogsMetaRow';\n\nfunction renderMetaItem(value: any, kind: LogsMetaKind) {\n  if (kind === LogsMetaKind.LabelsMap) {\n    return <LogLabels labels={value} />;\n  } else if (kind === LogsMetaKind.Error) {\n    return <span className=\"logs-meta-item__error\">{value}</span>;\n  }\n  return value;\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { dateTimeFormat, systemDateFormats, TimeZone, GrafanaTheme2 } from '@grafana/data';\nimport { CustomScrollbar, Spinner, useTheme2, clearButtonStyles } from '@grafana/ui';\n\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  onClick: (page: LogsPage, pageNumber: number) => void;\n};\n\nexport function LogsNavigationPages({ pages, currentPageIndex, oldestLogsFirst, timeZone, loading, onClick }: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <button\n              type=\"button\"\n              data-testid={`page${index + 1}`}\n              className={cx(clearButtonStyles(theme), styles.page)}\n              key={page.queryRange.to}\n              onClick={() => {\n                onClick(page, index + 1);\n              }}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.background.primary},\n          ${theme.colors.background.primary} 5px,\n          ${theme.colors.background.secondary} 5px,\n          ${theme.colors.background.secondary} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing(2)} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.primary.main};\n      }\n      .selectedText {\n        color: ${theme.colors.primary.main};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.text.secondary};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.v1.typography.size.sm};\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      align-items: center;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { isEqual } from 'lodash';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\n\nimport { AbsoluteTimeRange, GrafanaTheme2, LogsSortOrder, TimeZone } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { Button, Icon, Spinner, useTheme2 } from '@grafana/ui';\nimport { TOP_BAR_LEVEL_HEIGHT } from 'app/core/components/AppChrome/types';\n\nimport { LogsNavigationPages } from './LogsNavigationPages';\n\ntype Props = {\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  loading: boolean;\n  visibleRange: AbsoluteTimeRange;\n  logsSortOrder?: LogsSortOrder | null;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  scrollToTopLogs: () => void;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n};\n\nexport type LogsPage = {\n  logsRange: AbsoluteTimeRange;\n  queryRange: AbsoluteTimeRange;\n};\n\nfunction LogsNavigation({\n  absoluteRange,\n  logsSortOrder,\n  timeZone,\n  loading,\n  onChangeTime,\n  scrollToTopLogs,\n  visibleRange,\n  queries,\n  clearCache,\n  addResultsToCache,\n}: Props) {\n  const [pages, setPages] = useState<LogsPage[]>([]);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n\n  // These refs are to determine, if we want to clear up logs navigation when totally new query is run\n  const expectedQueriesRef = useRef<DataQuery[]>();\n  const expectedRangeRef = useRef<AbsoluteTimeRange>();\n  // This ref is to store range span for future queres based on firstly selected time range\n  // e.g. if last 5 min selected, always run 5 min range\n  const rangeSpanRef = useRef(0);\n\n  const oldestLogsFirst = logsSortOrder === LogsSortOrder.Ascending;\n  const onFirstPage = oldestLogsFirst ? currentPageIndex === pages.length - 1 : currentPageIndex === 0;\n  const onLastPage = oldestLogsFirst ? currentPageIndex === 0 : currentPageIndex === pages.length - 1;\n  const theme = useTheme2();\n  const styles = getStyles(theme, oldestLogsFirst);\n\n  // Main effect to set pages and index\n  useEffect(() => {\n    const newPage = { logsRange: visibleRange, queryRange: absoluteRange };\n    let newPages: LogsPage[] = [];\n    // We want to start new pagination if queries change or if absolute range is different than expected\n    if (!isEqual(expectedRangeRef.current, absoluteRange) || !isEqual(expectedQueriesRef.current, queries)) {\n      clearCache();\n      setPages([newPage]);\n      setCurrentPageIndex(0);\n      expectedQueriesRef.current = queries;\n      rangeSpanRef.current = absoluteRange.to - absoluteRange.from;\n    } else {\n      setPages((pages) => {\n        // Remove duplicates with new query\n        newPages = pages.filter((page) => !isEqual(newPage.queryRange, page.queryRange));\n        // Sort pages based on logsOrder so they visually align with displayed logs\n        newPages = [...newPages, newPage].sort((a, b) => sortPages(a, b, logsSortOrder));\n        // Set new pages\n\n        return newPages;\n      });\n\n      // Set current page index\n      const index = newPages.findIndex((page) => page.queryRange.to === absoluteRange.to);\n      setCurrentPageIndex(index);\n    }\n    addResultsToCache();\n  }, [visibleRange, absoluteRange, logsSortOrder, queries, clearCache, addResultsToCache]);\n\n  useEffect(() => {\n    clearCache();\n    // We can't enforce the eslint rule here because we only want to run when component is mounted.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const changeTime = useCallback(\n    ({ from, to }: AbsoluteTimeRange) => {\n      expectedRangeRef.current = { from, to };\n      onChangeTime({ from, to });\n    },\n    [onChangeTime]\n  );\n\n  const sortPages = (a: LogsPage, b: LogsPage, logsSortOrder?: LogsSortOrder | null) => {\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      return a.queryRange.to > b.queryRange.to ? 1 : -1;\n    }\n    return a.queryRange.to > b.queryRange.to ? -1 : 1;\n  };\n\n  const olderLogsButton = (\n    <Button\n      data-testid=\"olderLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the last page, use next page's range\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'olderLogsButton',\n        });\n        if (!onLastPage) {\n          const indexChange = oldestLogsFirst ? -1 : 1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        } else {\n          //If we are on the last page, create new range\n          changeTime({ from: visibleRange.from - rangeSpanRef.current, to: visibleRange.from });\n        }\n        scrollToTopLogs();\n      }}\n      disabled={loading}\n    >\n      <div className={styles.navButtonContent}>\n        {loading ? <Spinner /> : <Icon name={oldestLogsFirst ? 'angle-up' : 'angle-down'} size=\"lg\" />}\n        Older logs\n      </div>\n    </Button>\n  );\n\n  const newerLogsButton = (\n    <Button\n      data-testid=\"newerLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'newerLogsButton',\n        });\n        //If we are not on the first page, use previous page's range\n        if (!onFirstPage) {\n          const indexChange = oldestLogsFirst ? 1 : -1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        }\n        scrollToTopLogs();\n        //If we are on the first page, button is disabled and we do nothing\n      }}\n      disabled={loading || onFirstPage}\n    >\n      <div className={styles.navButtonContent}>\n        {loading && <Spinner />}\n        {onFirstPage || loading ? null : <Icon name={oldestLogsFirst ? 'angle-down' : 'angle-up'} size=\"lg\" />}\n        {onFirstPage ? 'Start of range' : 'Newer logs'}\n      </div>\n    </Button>\n  );\n\n  const onPageClick = useCallback(\n    (page: LogsPage, pageNumber: number) => {\n      reportInteraction('grafana_explore_logs_pagination_clicked', {\n        pageType: 'page',\n        pageNumber,\n      });\n      !loading && changeTime({ from: page.queryRange.from, to: page.queryRange.to });\n      scrollToTopLogs();\n    },\n    [changeTime, loading, scrollToTopLogs]\n  );\n\n  return (\n    <div className={styles.navContainer}>\n      {oldestLogsFirst ? olderLogsButton : newerLogsButton}\n      <LogsNavigationPages\n        pages={pages}\n        currentPageIndex={currentPageIndex}\n        oldestLogsFirst={oldestLogsFirst}\n        timeZone={timeZone}\n        loading={loading}\n        onClick={onPageClick}\n      />\n      {oldestLogsFirst ? newerLogsButton : olderLogsButton}\n      <Button\n        data-testid=\"scrollToTop\"\n        className={styles.scrollToTopButton}\n        variant=\"secondary\"\n        onClick={scrollToTopLogs}\n        title=\"Scroll to top\"\n      >\n        <Icon name=\"arrow-up\" size=\"lg\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(LogsNavigation);\n\nconst getStyles = (theme: GrafanaTheme2, oldestLogsFirst: boolean) => {\n  const navContainerHeight = `calc(100vh - 2*${theme.spacing(2)} - 2*${TOP_BAR_LEVEL_HEIGHT}px)`;\n  return {\n    navContainer: css`\n      max-height: ${navContainerHeight};\n      display: flex;\n      flex-direction: column;\n      justify-content: ${oldestLogsFirst ? 'flex-start' : 'space-between'};\n      position: sticky;\n      top: ${theme.spacing(2)};\n      right: 0;\n    `,\n    navButton: css`\n      width: 58px;\n      height: 68px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n    `,\n    navButtonContent: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      white-space: normal;\n    `,\n    scrollToTopButton: css`\n      width: 40px;\n      height: 40px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: ${theme.spacing(1)};\n    `,\n  };\n};\n","import memoizeOne from 'memoize-one';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { lastValueFrom } from 'rxjs';\n\nimport {\n  applyFieldOverrides,\n  DataFrame,\n  Field,\n  LogsSortOrder,\n  sortDataFrame,\n  SplitOpen,\n  TimeRange,\n  transformDataFrame,\n  ValueLinkConfig,\n} from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Table } from '@grafana/ui';\nimport { separateVisibleFields } from 'app/features/logs/components/logParser';\nimport { parseLogsFrame } from 'app/features/logs/logsFrame';\n\nimport { getFieldLinksForExplore } from '../utils/links';\n\ninterface Props {\n  logsFrames?: DataFrame[];\n  width: number;\n  timeZone: string;\n  splitOpen: SplitOpen;\n  range: TimeRange;\n  logsSortOrder: LogsSortOrder;\n}\n\nconst getTableHeight = memoizeOne((dataFrames: DataFrame[] | undefined) => {\n  const largestFrameLength = dataFrames?.reduce((length, frame) => {\n    return frame.length > length ? frame.length : length;\n  }, 0);\n  // from TableContainer.tsx\n  return Math.min(600, Math.max(largestFrameLength ?? 0 * 36, 300) + 40 + 46);\n});\n\nexport const LogsTable: React.FunctionComponent<Props> = (props) => {\n  const { timeZone, splitOpen, range, logsSortOrder, width, logsFrames } = props;\n\n  const [tableFrame, setTableFrame] = useState<DataFrame | undefined>(undefined);\n\n  const prepareTableFrame = useCallback(\n    (frame: DataFrame): DataFrame => {\n      const logsFrame = parseLogsFrame(frame);\n      const timeIndex = logsFrame?.timeField.index;\n      const sortedFrame = sortDataFrame(frame, timeIndex, logsSortOrder === LogsSortOrder.Descending);\n\n      const [frameWithOverrides] = applyFieldOverrides({\n        data: [sortedFrame],\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: (v: string) => v,\n        fieldConfig: {\n          defaults: {\n            custom: {},\n          },\n          overrides: [],\n        },\n      });\n      // `getLinks` and `applyFieldOverrides` are taken from TableContainer.tsx\n      for (const field of frameWithOverrides.fields) {\n        field.getLinks = (config: ValueLinkConfig) => {\n          return getFieldLinksForExplore({\n            field,\n            rowIndex: config.valueRowIndex!,\n            splitOpenFn: splitOpen,\n            range: range,\n            dataFrame: sortedFrame!,\n          });\n        };\n        field.config = {\n          ...field.config,\n          custom: {\n            filterable: true,\n            inspect: true,\n            ...field.config.custom,\n          },\n        };\n      }\n\n      return frameWithOverrides;\n    },\n    [logsSortOrder, range, splitOpen, timeZone]\n  );\n\n  useEffect(() => {\n    const prepare = async () => {\n      if (!logsFrames || !logsFrames.length) {\n        setTableFrame(undefined);\n        return;\n      }\n      // TODO: This does not work with multiple logs queries for now, as we currently only support one logs frame.\n      let dataFrame = logsFrames[0];\n\n      const logsFrame = parseLogsFrame(dataFrame);\n      const timeIndex = logsFrame?.timeField.index;\n      dataFrame = sortDataFrame(dataFrame, timeIndex, logsSortOrder === LogsSortOrder.Descending);\n\n      // create extract JSON transformation for every field that is `json.RawMessage`\n      // TODO: explore if `logsFrame.ts` can help us with getting the right fields\n      const transformations = dataFrame.fields\n        .filter((field: Field & { typeInfo?: { frame: string } }) => {\n          return field.typeInfo?.frame === 'json.RawMessage';\n        })\n        .flatMap((field: Field) => {\n          return [\n            {\n              id: 'extractFields',\n              options: {\n                format: 'json',\n                keepTime: false,\n                replace: false,\n                source: field.name,\n              },\n            },\n            // hide the field that was extracted\n            {\n              id: 'organize',\n              options: {\n                excludeByName: {\n                  [field.name]: true,\n                },\n              },\n            },\n          ];\n        });\n\n      // remove fields that should not be displayed\n\n      const hiddenFields = separateVisibleFields(dataFrame, { keepBody: true, keepTimestamp: true }).hidden;\n      hiddenFields.forEach((field: Field, index: number) => {\n        transformations.push({\n          id: 'organize',\n          options: {\n            excludeByName: {\n              [field.name]: true,\n            },\n          },\n        });\n      });\n      if (transformations.length > 0) {\n        const [transformedDataFrame] = await lastValueFrom(transformDataFrame(transformations, [dataFrame]));\n        setTableFrame(prepareTableFrame(transformedDataFrame));\n      } else {\n        setTableFrame(prepareTableFrame(dataFrame));\n      }\n    };\n    prepare();\n  }, [prepareTableFrame, logsFrames, logsSortOrder]);\n\n  if (!tableFrame) {\n    return null;\n  }\n\n  return (\n    <Table\n      data={tableFrame}\n      width={width}\n      height={getTableHeight(props.logsFrames)}\n      footerOptions={{ show: true, reducer: ['count'], countRows: true }}\n    />\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport { DataQueryError, GrafanaTheme2 } from '@grafana/data';\nimport { Alert, AlertVariant, Button, useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  error?: DataQueryError;\n  title: string;\n  severity?: AlertVariant;\n  suggestedAction?: string;\n  onSuggestedAction?(): void;\n  onRemove?(): void;\n};\nexport function SupplementaryResultError(props: Props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const SHORT_ERROR_MESSAGE_LIMIT = 100;\n  const { error, title, suggestedAction, onSuggestedAction, onRemove, severity = 'warning' } = props;\n  // generic get-error-message-logic, taken from\n  // /public/app/features/explore/ErrorContainer.tsx\n  const message = error?.message || error?.data?.message || '';\n  const showButton = !isOpen && message.length > SHORT_ERROR_MESSAGE_LIMIT;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.supplementaryErrorContainer}>\n      <Alert title={title} severity={severity} onRemove={onRemove}>\n        <div className={styles.suggestedActionWrapper}>\n          {showButton ? (\n            <Button\n              variant=\"secondary\"\n              size=\"xs\"\n              onClick={() => {\n                setIsOpen(true);\n              }}\n            >\n              Show details\n            </Button>\n          ) : (\n            message\n          )}\n          {suggestedAction && onSuggestedAction && (\n            <div className={styles.suggestedActionWrapper}>\n              <Button variant=\"primary\" size=\"xs\" onClick={onSuggestedAction}>\n                {suggestedAction}\n              </Button>\n            </div>\n          )}\n        </div>\n      </Alert>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    supplementaryErrorContainer: css`\n      width: 50%;\n      min-width: ${theme.breakpoints.values.sm}px;\n      margin: 0 auto;\n    `,\n    suggestedActionWrapper: css`\n      height: ${theme.spacing(6)};\n      button {\n        position: absolute;\n        right: ${theme.spacing(2)};\n        top: ${theme.spacing(7)};\n      }\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { identity } from 'lodash';\nimport React from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  DataQueryResponse,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n  EventBus,\n  GrafanaTheme2,\n} from '@grafana/data';\nimport { Icon, Tooltip, TooltipDisplayMode, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { getLogsVolumeDataSourceInfo, isLogsVolumeLimited } from '../../logs/utils';\nimport { ExploreGraph } from '../Graph/ExploreGraph';\n\ntype Props = {\n  logsVolumeData: DataQueryResponse;\n  allLogsVolumeMaximum: number;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n  onHiddenSeriesChanged: (hiddenSeries: string[]) => void;\n  eventBus: EventBus;\n};\n\nexport function LogsVolumePanel(props: Props) {\n  const { width, timeZone, splitOpen, onUpdateTimeRange, onHiddenSeriesChanged, allLogsVolumeMaximum } = props;\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n  const height = 150;\n\n  const logsVolumeData = props.logsVolumeData;\n\n  const logsVolumeInfo = getLogsVolumeDataSourceInfo(logsVolumeData?.data);\n  let extraInfo = logsVolumeInfo ? `${logsVolumeInfo.name}` : '';\n\n  if (isLogsVolumeLimited(logsVolumeData.data)) {\n    extraInfo = [\n      extraInfo,\n      'This datasource does not support full-range histograms. The graph below is based on the logs seen in the response.',\n    ]\n      .filter(identity)\n      .join('. ');\n  }\n\n  let extraInfoComponent = <span>{extraInfo}</span>;\n\n  if (logsVolumeData.state === LoadingState.Streaming) {\n    extraInfoComponent = (\n      <>\n        {extraInfoComponent}\n        <Tooltip content=\"Streaming\">\n          <Icon name=\"circle-mono\" size=\"md\" className={styles.streaming} data-testid=\"logs-volume-streaming\" />\n        </Tooltip>\n      </>\n    );\n  }\n\n  return (\n    <div style={{ height }} className={styles.contentContainer}>\n      <ExploreGraph\n        graphStyle=\"lines\"\n        loadingState={logsVolumeData.state ?? LoadingState.Done}\n        data={logsVolumeData.data}\n        height={height}\n        width={width - spacing * 2}\n        absoluteRange={props.absoluteRange}\n        onChangeTime={onUpdateTimeRange}\n        timeZone={timeZone}\n        splitOpenFn={splitOpen}\n        tooltipDisplayMode={TooltipDisplayMode.Multi}\n        onHiddenSeriesChanged={onHiddenSeriesChanged}\n        anchorToZero\n        yAxisMaximum={allLogsVolumeMaximum}\n        eventBus={props.eventBus}\n      />\n      {extraInfoComponent && <div className={styles.extraInfoContainer}>{extraInfoComponent}</div>}\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    extraInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: -10px;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      color: ${theme.colors.text.secondary};\n    `,\n    contentContainer: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n    `,\n    streaming: css`\n      color: ${theme.colors.success.text};\n    `,\n  };\n};\n","import { DataQueryError, DataQueryResponse } from '@grafana/data';\n\n// Currently we can only infer if an error response is a timeout or not.\nexport function isTimeoutErrorResponse(response: DataQueryResponse | undefined): boolean {\n  if (!response) {\n    return false;\n  }\n  if (!response.error && !response.errors) {\n    return false;\n  }\n\n  const errors = response.error ? [response.error] : response.errors || [];\n\n  return errors.some((error: DataQueryError) => {\n    const message = `${error.message || error.data?.message}`?.toLowerCase();\n    return message.includes('timeout');\n  });\n}\n","import { css } from '@emotion/css';\nimport { flatten, groupBy, mapValues, sortBy } from 'lodash';\nimport React, { useMemo } from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  DataFrame,\n  DataQueryResponse,\n  EventBus,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n} from '@grafana/data';\nimport { Button, InlineField, Alert, useStyles2 } from '@grafana/ui';\n\nimport { mergeLogsVolumeDataFrames, isLogsVolumeLimited, getLogsVolumeMaximumRange } from '../../logs/utils';\nimport { SupplementaryResultError } from '../SupplementaryResultError';\n\nimport { LogsVolumePanel } from './LogsVolumePanel';\nimport { isTimeoutErrorResponse } from './utils/logsVolumeResponse';\n\ntype Props = {\n  logsVolumeData: DataQueryResponse | undefined;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n  onHiddenSeriesChanged: (hiddenSeries: string[]) => void;\n  eventBus: EventBus;\n  onClose?(): void;\n};\n\nexport const LogsVolumePanelList = ({\n  logsVolumeData,\n  absoluteRange,\n  onUpdateTimeRange,\n  width,\n  onLoadLogsVolume,\n  onHiddenSeriesChanged,\n  eventBus,\n  splitOpen,\n  timeZone,\n  onClose,\n}: Props) => {\n  const {\n    logVolumes,\n    maximumValue: allLogsVolumeMaximumValue,\n    maximumRange: allLogsVolumeMaximumRange,\n  } = useMemo(() => {\n    let maximumValue = -Infinity;\n    const sorted = sortBy(logsVolumeData?.data || [], 'meta.custom.datasourceName');\n    const grouped = groupBy(sorted, 'meta.custom.datasourceName');\n    const logVolumes = mapValues(grouped, (value) => {\n      const mergedData = mergeLogsVolumeDataFrames(value);\n      maximumValue = Math.max(maximumValue, mergedData.maximum);\n      return mergedData.dataFrames;\n    });\n    const maximumRange = getLogsVolumeMaximumRange(flatten(Object.values(logVolumes)));\n    return {\n      maximumValue,\n      maximumRange,\n      logVolumes,\n    };\n  }, [logsVolumeData]);\n\n  const styles = useStyles2(getStyles);\n\n  const numberOfLogVolumes = Object.keys(logVolumes).length;\n\n  const containsZoomed = Object.values(logVolumes).some((data: DataFrame[]) => {\n    const zoomRatio = logsLevelZoomRatio(data, absoluteRange);\n    return !isLogsVolumeLimited(data) && zoomRatio && zoomRatio < 1;\n  });\n\n  const timeoutError = isTimeoutErrorResponse(logsVolumeData);\n\n  const visibleRange = {\n    from: Math.max(absoluteRange.from, allLogsVolumeMaximumRange.from),\n    to: Math.min(absoluteRange.to, allLogsVolumeMaximumRange.to),\n  };\n\n  if (logsVolumeData?.state === LoadingState.Loading) {\n    return <span>Loading...</span>;\n  } else if (timeoutError) {\n    return (\n      <SupplementaryResultError\n        title=\"The logs volume query has timed out\"\n        // Using info to avoid users thinking that the actual query has failed.\n        severity=\"info\"\n        suggestedAction=\"Retry\"\n        onSuggestedAction={onLoadLogsVolume}\n        onRemove={onClose}\n      />\n    );\n  } else if (logsVolumeData?.error !== undefined) {\n    return <SupplementaryResultError error={logsVolumeData.error} title=\"Failed to load log volume for this query\" />;\n  }\n\n  if (numberOfLogVolumes === 0) {\n    return (\n      <div className={styles.alertContainer}>\n        <Alert severity=\"info\" title=\"No logs volume available\">\n          No volume information available for the current queries and time range.\n        </Alert>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.listContainer}>\n      {Object.keys(logVolumes).map((name, index) => {\n        const logsVolumeData = { data: logVolumes[name] };\n        return (\n          <LogsVolumePanel\n            key={index}\n            absoluteRange={visibleRange}\n            allLogsVolumeMaximum={allLogsVolumeMaximumValue}\n            width={width}\n            logsVolumeData={logsVolumeData}\n            onUpdateTimeRange={onUpdateTimeRange}\n            timeZone={timeZone}\n            splitOpen={splitOpen}\n            onLoadLogsVolume={onLoadLogsVolume}\n            // TODO: Support filtering level from multiple log levels\n            onHiddenSeriesChanged={numberOfLogVolumes > 1 ? () => {} : onHiddenSeriesChanged}\n            eventBus={eventBus}\n          />\n        );\n      })}\n      {containsZoomed && (\n        <div className={styles.extraInfoContainer}>\n          <InlineField label=\"Reload log volume\" transparent>\n            <Button size=\"xs\" icon=\"sync\" variant=\"secondary\" onClick={onLoadLogsVolume} id=\"reload-volume\" />\n          </InlineField>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    listContainer: css`\n      padding-top: 10px;\n    `,\n    extraInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: 5px;\n    `,\n    oldInfoText: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      color: ${theme.colors.text.secondary};\n    `,\n    alertContainer: css`\n      width: 50%;\n      min-width: ${theme.breakpoints.values.sm}px;\n      margin: 0 auto;\n    `,\n  };\n};\n\nfunction logsLevelZoomRatio(\n  logsVolumeData: DataFrame[] | undefined,\n  selectedTimeRange: AbsoluteTimeRange\n): number | undefined {\n  const dataRange = logsVolumeData && logsVolumeData[0] && logsVolumeData[0].meta?.custom?.absoluteRange;\n  return dataRange ? (selectedTimeRange.from - selectedTimeRange.to) / (dataRange.from - dataRange.to) : undefined;\n}\n","import { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport React, { PureComponent, createRef } from 'react';\n\nimport {\n  rangeUtil,\n  RawTimeRange,\n  LogLevel,\n  TimeZone,\n  AbsoluteTimeRange,\n  LogsDedupStrategy,\n  LogRowModel,\n  LogsDedupDescription,\n  LogsMetaItem,\n  LogsSortOrder,\n  LinkModel,\n  Field,\n  DataFrame,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  DataQueryResponse,\n  CoreApp,\n  DataHoverEvent,\n  DataHoverClearEvent,\n  EventBus,\n  LogRowContextOptions,\n  ExplorePanelsState,\n  serializeStateToUrlParam,\n  urlUtil,\n  TimeRange,\n} from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport {\n  RadioButtonGroup,\n  Button,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  withTheme2,\n  Themeable2,\n  PanelChrome,\n} from '@grafana/ui';\nimport store from 'app/core/store';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { getState, dispatch } from 'app/store/store';\n\nimport { LogRows } from '../../logs/components/LogRows';\nimport { LogRowContextModal } from '../../logs/components/log-context/LogRowContextModal';\nimport { dedupLogRows, filterLogLevels } from '../../logs/logsModel';\nimport { getUrlStateFromPaneState } from '../hooks/useStateSync';\nimport { changePanelState } from '../state/explorePane';\n\nimport { LogsMetaRow } from './LogsMetaRow';\nimport LogsNavigation from './LogsNavigation';\nimport { LogsTable } from './LogsTable';\nimport { LogsVolumePanelList } from './LogsVolumePanelList';\nimport { SETTINGS_KEYS } from './utils/logs';\n\ninterface Props extends Themeable2 {\n  width: number;\n  splitOpen: SplitOpen;\n  logRows: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: DataFrame[];\n  logsQueries?: DataQuery[];\n  visibleRange?: AbsoluteTimeRange;\n  theme: GrafanaTheme2;\n  loading: boolean;\n  loadingState: LoadingState;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  exploreId: string;\n  datasourceType?: string;\n  logsVolumeEnabled: boolean;\n  logsVolumeData: DataQueryResponse | undefined;\n  onSetLogsVolumeEnabled: (enabled: boolean) => void;\n  loadLogsVolumeData: () => void;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel?: (key: string, value: string, refId?: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string, refId?: string) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  getRowContext?: (row: LogRowModel, origRow: LogRowModel, options: LogRowContextOptions) => Promise<any>;\n  getRowContextQuery?: (row: LogRowModel, options?: LogRowContextOptions) => Promise<DataQuery | null>;\n  getLogRowContextUi?: (row: LogRowModel, runContextQuery?: () => void) => React.ReactNode;\n  getFieldLinks: (field: Field, rowIndex: number, dataFrame: DataFrame) => Array<LinkModel<Field>>;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n  eventBus: EventBus;\n  panelState?: ExplorePanelsState;\n  scrollElement?: HTMLDivElement;\n  isFilterLabelActive?: (key: string, value: string, refId?: string) => Promise<boolean>;\n  logsFrames?: DataFrame[];\n  range: TimeRange;\n}\n\ntype VisualisationType = 'table' | 'logs';\n\ninterface State {\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  dedupStrategy: LogsDedupStrategy;\n  hiddenLogLevels: LogLevel[];\n  logsSortOrder: LogsSortOrder;\n  isFlipping: boolean;\n  displayedFields: string[];\n  forceEscape: boolean;\n  contextOpen: boolean;\n  contextRow?: LogRowModel;\n  tableFrame?: DataFrame;\n  visualisationType?: VisualisationType;\n  logsContainer?: HTMLDivElement;\n}\n\nconst scrollableLogsContainer = config.featureToggles.exploreScrollableLogsContainer;\n\n// we need to define the order of these explicitly\nconst DEDUP_OPTIONS = [\n  LogsDedupStrategy.none,\n  LogsDedupStrategy.exact,\n  LogsDedupStrategy.numbers,\n  LogsDedupStrategy.signature,\n];\n\nclass UnthemedLogs extends PureComponent<Props, State> {\n  flipOrderTimer?: number;\n  cancelFlippingTimer?: number;\n  topLogsRef = createRef<HTMLDivElement>();\n  logsVolumeEventBus: EventBus;\n\n  state: State = {\n    showLabels: store.getBool(SETTINGS_KEYS.showLabels, false),\n    showTime: store.getBool(SETTINGS_KEYS.showTime, true),\n    wrapLogMessage: store.getBool(SETTINGS_KEYS.wrapLogMessage, true),\n    prettifyLogMessage: store.getBool(SETTINGS_KEYS.prettifyLogMessage, false),\n    dedupStrategy: LogsDedupStrategy.none,\n    hiddenLogLevels: [],\n    logsSortOrder: store.get(SETTINGS_KEYS.logsSortOrder) || LogsSortOrder.Descending,\n    isFlipping: false,\n    displayedFields: [],\n    forceEscape: false,\n    contextOpen: false,\n    contextRow: undefined,\n    tableFrame: undefined,\n    visualisationType: 'logs',\n    logsContainer: undefined,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.logsVolumeEventBus = props.eventBus.newScopedBus('logsvolume', { onlyLocal: false });\n  }\n\n  componentWillUnmount() {\n    if (this.flipOrderTimer) {\n      window.clearTimeout(this.flipOrderTimer);\n    }\n\n    if (this.cancelFlippingTimer) {\n      window.clearTimeout(this.cancelFlippingTimer);\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (this.props.loading && !prevProps.loading && this.props.panelState?.logs?.id) {\n      // loading stopped, so we need to remove any permalinked log lines\n      delete this.props.panelState.logs.id;\n      dispatch(\n        changePanelState(this.props.exploreId, 'logs', {\n          ...this.props.panelState,\n        })\n      );\n    }\n  }\n\n  onLogRowHover = (row?: LogRowModel) => {\n    if (!row) {\n      this.props.eventBus.publish(new DataHoverClearEvent());\n    } else {\n      this.props.eventBus.publish(\n        new DataHoverEvent({\n          point: {\n            time: row.timeEpochMs,\n          },\n        })\n      );\n    }\n  };\n\n  onLogsContainerRef = (node: HTMLDivElement) => {\n    this.setState({ logsContainer: node });\n  };\n\n  onChangeLogsSortOrder = () => {\n    this.setState({ isFlipping: true });\n    // we are using setTimeout here to make sure that disabled button is rendered before the rendering of reordered logs\n    this.flipOrderTimer = window.setTimeout(() => {\n      this.setState((prevState) => {\n        const newSortOrder =\n          prevState.logsSortOrder === LogsSortOrder.Descending ? LogsSortOrder.Ascending : LogsSortOrder.Descending;\n        store.set(SETTINGS_KEYS.logsSortOrder, newSortOrder);\n        return { logsSortOrder: newSortOrder };\n      });\n    }, 0);\n    this.cancelFlippingTimer = window.setTimeout(() => this.setState({ isFlipping: false }), 1000);\n  };\n\n  onEscapeNewlines = () => {\n    this.setState((prevState) => ({\n      forceEscape: !prevState.forceEscape,\n    }));\n  };\n\n  onChangeVisualisation = (visualisation: VisualisationType) => {\n    this.setState(() => ({\n      visualisationType: visualisation,\n    }));\n  };\n\n  onChangeDedup = (dedupStrategy: LogsDedupStrategy) => {\n    reportInteraction('grafana_explore_logs_deduplication_clicked', {\n      deduplicationType: dedupStrategy,\n      datasourceType: this.props.datasourceType,\n    });\n    this.setState({ dedupStrategy });\n  };\n\n  onChangeLabels = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showLabels = target.checked;\n      this.setState({\n        showLabels,\n      });\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  };\n\n  onChangeTime = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showTime = target.checked;\n      this.setState({\n        showTime,\n      });\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  };\n\n  onChangeWrapLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const wrapLogMessage = target.checked;\n      this.setState({\n        wrapLogMessage,\n      });\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  };\n\n  onChangePrettifyLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const prettifyLogMessage = target.checked;\n      this.setState({\n        prettifyLogMessage,\n      });\n      store.set(SETTINGS_KEYS.prettifyLogMessage, prettifyLogMessage);\n    }\n  };\n\n  onToggleLogLevel = (hiddenRawLevels: string[]) => {\n    const hiddenLogLevels = hiddenRawLevels.map((level) => LogLevel[level as LogLevel]);\n    this.setState({ hiddenLogLevels });\n  };\n\n  onToggleLogsVolumeCollapse = (collapsed: boolean) => {\n    this.props.onSetLogsVolumeEnabled(!collapsed);\n    reportInteraction('grafana_explore_logs_histogram_toggle_clicked', {\n      datasourceType: this.props.datasourceType,\n      type: !collapsed ? 'open' : 'close',\n    });\n  };\n\n  onClickScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStartScanning) {\n      this.props.onStartScanning();\n      reportInteraction('grafana_explore_logs_scanning_button_clicked', {\n        type: 'start',\n        datasourceType: this.props.datasourceType,\n      });\n    }\n  };\n\n  onClickStopScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStopScanning) {\n      this.props.onStopScanning();\n    }\n  };\n\n  showField = (key: string) => {\n    const index = this.state.displayedFields.indexOf(key);\n\n    if (index === -1) {\n      this.setState((state) => {\n        return {\n          displayedFields: state.displayedFields.concat(key),\n        };\n      });\n    }\n  };\n\n  hideField = (key: string) => {\n    const index = this.state.displayedFields.indexOf(key);\n    if (index > -1) {\n      this.setState((state) => {\n        return {\n          displayedFields: state.displayedFields.filter((k) => key !== k),\n        };\n      });\n    }\n  };\n\n  clearDetectedFields = () => {\n    this.setState((state) => {\n      return {\n        displayedFields: [],\n      };\n    });\n  };\n\n  onCloseContext = () => {\n    this.setState({\n      contextOpen: false,\n      contextRow: undefined,\n    });\n  };\n\n  onOpenContext = (row: LogRowModel, onClose: () => void) => {\n    // we are setting the `contextOpen` open state and passing it down to the `LogRow` in order to highlight the row when a LogContext is open\n    this.setState({\n      contextOpen: true,\n      contextRow: row,\n    });\n    reportInteraction('grafana_explore_logs_log_context_opened', {\n      datasourceType: row.datasourceType,\n      logRowUid: row.uid,\n    });\n    this.onCloseContext = () => {\n      this.setState({\n        contextOpen: false,\n        contextRow: undefined,\n      });\n      reportInteraction('grafana_explore_logs_log_context_closed', {\n        datasourceType: row.datasourceType,\n        logRowUid: row.uid,\n      });\n      onClose();\n    };\n  };\n\n  onPermalinkClick = async (row: LogRowModel) => {\n    // this is an extra check, to be sure that we are not\n    // creating permalinks for logs without an id-field.\n    // normally it should never happen, because we do not\n    // display the permalink button in such cases.\n    if (row.rowId === undefined) {\n      return;\n    }\n\n    // get explore state, add log-row-id and make timerange absolute\n    const urlState = getUrlStateFromPaneState(getState().explore.panes[this.props.exploreId]!);\n    urlState.panelsState = { ...this.props.panelState, logs: { id: row.uid } };\n    urlState.range = {\n      from: new Date(this.props.absoluteRange.from).toISOString(),\n      to: new Date(this.props.absoluteRange.to).toISOString(),\n    };\n\n    // append changed urlState to baseUrl\n    const serializedState = serializeStateToUrlParam(urlState);\n    const baseUrl = /.*(?=\\/explore)/.exec(`${window.location.href}`)![0];\n    const url = urlUtil.renderUrl(`${baseUrl}/explore`, { left: serializedState });\n    await createAndCopyShortLink(url);\n\n    reportInteraction('grafana_explore_logs_permalink_clicked', {\n      datasourceType: row.datasourceType ?? 'unknown',\n      logRowUid: row.uid,\n      logRowLevel: row.logLevel,\n    });\n  };\n\n  scrollIntoView = (element: HTMLElement) => {\n    if (config.featureToggles.exploreScrollableLogsContainer) {\n      if (this.state.logsContainer) {\n        this.topLogsRef.current?.scrollIntoView();\n        this.state.logsContainer.scroll({\n          behavior: 'smooth',\n          top: this.state.logsContainer.scrollTop + element.getBoundingClientRect().top - window.innerHeight / 2,\n        });\n      }\n\n      return;\n    }\n    const { scrollElement } = this.props;\n\n    if (scrollElement) {\n      scrollElement.scroll({\n        behavior: 'smooth',\n        top: scrollElement.scrollTop + element.getBoundingClientRect().top - window.innerHeight / 2,\n      });\n    }\n  };\n\n  checkUnescapedContent = memoizeOne((logRows: LogRowModel[]) => {\n    return !!logRows.some((r) => r.hasUnescapedContent);\n  });\n\n  dedupRows = memoizeOne((logRows: LogRowModel[], dedupStrategy: LogsDedupStrategy) => {\n    const dedupedRows = dedupLogRows(logRows, dedupStrategy);\n    const dedupCount = dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0);\n    return { dedupedRows, dedupCount };\n  });\n\n  filterRows = memoizeOne((logRows: LogRowModel[], hiddenLogLevels: LogLevel[]) => {\n    return filterLogLevels(logRows, new Set(hiddenLogLevels));\n  });\n\n  createNavigationRange = memoizeOne((logRows: LogRowModel[]): { from: number; to: number } | undefined => {\n    if (!logRows || logRows.length === 0) {\n      return undefined;\n    }\n    const firstTimeStamp = logRows[0].timeEpochMs;\n    const lastTimeStamp = logRows[logRows.length - 1].timeEpochMs;\n\n    if (lastTimeStamp < firstTimeStamp) {\n      return { from: lastTimeStamp, to: firstTimeStamp };\n    }\n\n    return { from: firstTimeStamp, to: lastTimeStamp };\n  });\n\n  scrollToTopLogs = () => {\n    if (config.featureToggles.exploreScrollableLogsContainer) {\n      if (this.state.logsContainer) {\n        this.state.logsContainer.scroll({\n          behavior: 'auto',\n          top: 0,\n        });\n      }\n    } else {\n      this.topLogsRef.current?.scrollIntoView();\n    }\n  };\n\n  render() {\n    const {\n      width,\n      splitOpen,\n      logRows,\n      logsMeta,\n      logsVolumeEnabled,\n      logsVolumeData,\n      loadLogsVolumeData,\n      loading = false,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      timeZone,\n      scanning,\n      scanRange,\n      showContextToggle,\n      absoluteRange,\n      onChangeTime,\n      getFieldLinks,\n      theme,\n      logsQueries,\n      clearCache,\n      addResultsToCache,\n      exploreId,\n      getRowContext,\n      getLogRowContextUi,\n      getRowContextQuery,\n    } = this.props;\n\n    const {\n      showLabels,\n      showTime,\n      wrapLogMessage,\n      prettifyLogMessage,\n      dedupStrategy,\n      hiddenLogLevels,\n      logsSortOrder,\n      isFlipping,\n      displayedFields,\n      forceEscape,\n      contextOpen,\n      contextRow,\n    } = this.state;\n\n    const styles = getStyles(theme, wrapLogMessage);\n    const hasData = logRows && logRows.length > 0;\n    const hasUnescapedContent = this.checkUnescapedContent(logRows);\n\n    const filteredLogs = this.filterRows(logRows, hiddenLogLevels);\n    const { dedupedRows, dedupCount } = this.dedupRows(filteredLogs, dedupStrategy);\n    const navigationRange = this.createNavigationRange(logRows);\n\n    const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n\n    return (\n      <>\n        {getRowContext && contextRow && (\n          <LogRowContextModal\n            open={contextOpen}\n            row={contextRow}\n            onClose={this.onCloseContext}\n            getRowContext={(row, options) => getRowContext(row, contextRow, options)}\n            getRowContextQuery={getRowContextQuery}\n            getLogRowContextUi={getLogRowContextUi}\n            logsSortOrder={logsSortOrder}\n            timeZone={timeZone}\n          />\n        )}\n        <PanelChrome\n          title=\"Logs volume\"\n          collapsible\n          collapsed={!logsVolumeEnabled}\n          onToggleCollapse={this.onToggleLogsVolumeCollapse}\n        >\n          {logsVolumeEnabled && (\n            <LogsVolumePanelList\n              absoluteRange={absoluteRange}\n              width={width}\n              logsVolumeData={logsVolumeData}\n              onUpdateTimeRange={onChangeTime}\n              timeZone={timeZone}\n              splitOpen={splitOpen}\n              onLoadLogsVolume={loadLogsVolumeData}\n              onHiddenSeriesChanged={this.onToggleLogLevel}\n              eventBus={this.logsVolumeEventBus}\n              onClose={() => this.onToggleLogsVolumeCollapse(true)}\n            />\n          )}\n        </PanelChrome>\n        <PanelChrome\n          title={\n            config.featureToggles.logsExploreTableVisualisation\n              ? this.state.visualisationType === 'logs'\n                ? 'Logs'\n                : 'Table'\n              : 'Logs'\n          }\n          actions={\n            <>\n              {config.featureToggles.logsExploreTableVisualisation && (\n                <div className={styles.visualisationType}>\n                  <RadioButtonGroup\n                    className={styles.visualisationTypeRadio}\n                    options={[\n                      {\n                        label: 'Table',\n                        value: 'table',\n                        description: 'Show results in table visualisation',\n                      },\n                      {\n                        label: 'Logs',\n                        value: 'logs',\n                        description: 'Show results in logs visualisation',\n                      },\n                    ]}\n                    size=\"sm\"\n                    value={this.state.visualisationType}\n                    onChange={this.onChangeVisualisation}\n                  />\n                </div>\n              )}\n            </>\n          }\n          loadingState={loading ? LoadingState.Loading : LoadingState.Done}\n        >\n          <div className={styles.stickyNavigation}>\n            {this.state.visualisationType !== 'table' && (\n              <div className={styles.logOptions}>\n                <InlineFieldRow>\n                  <InlineField label=\"Time\" className={styles.horizontalInlineLabel} transparent>\n                    <InlineSwitch\n                      value={showTime}\n                      onChange={this.onChangeTime}\n                      className={styles.horizontalInlineSwitch}\n                      transparent\n                      id={`show-time_${exploreId}`}\n                    />\n                  </InlineField>\n                  <InlineField label=\"Unique labels\" className={styles.horizontalInlineLabel} transparent>\n                    <InlineSwitch\n                      value={showLabels}\n                      onChange={this.onChangeLabels}\n                      className={styles.horizontalInlineSwitch}\n                      transparent\n                      id={`unique-labels_${exploreId}`}\n                    />\n                  </InlineField>\n                  <InlineField label=\"Wrap lines\" className={styles.horizontalInlineLabel} transparent>\n                    <InlineSwitch\n                      value={wrapLogMessage}\n                      onChange={this.onChangeWrapLogMessage}\n                      className={styles.horizontalInlineSwitch}\n                      transparent\n                      id={`wrap-lines_${exploreId}`}\n                    />\n                  </InlineField>\n                  <InlineField label=\"Prettify JSON\" className={styles.horizontalInlineLabel} transparent>\n                    <InlineSwitch\n                      value={prettifyLogMessage}\n                      onChange={this.onChangePrettifyLogMessage}\n                      className={styles.horizontalInlineSwitch}\n                      transparent\n                      id={`prettify_${exploreId}`}\n                    />\n                  </InlineField>\n                  <InlineField label=\"Deduplication\" className={styles.horizontalInlineLabel} transparent>\n                    <RadioButtonGroup\n                      options={DEDUP_OPTIONS.map((dedupType) => ({\n                        label: capitalize(dedupType),\n                        value: dedupType,\n                        description: LogsDedupDescription[dedupType],\n                      }))}\n                      value={dedupStrategy}\n                      onChange={this.onChangeDedup}\n                      className={styles.radioButtons}\n                    />\n                  </InlineField>\n                </InlineFieldRow>\n\n                <div>\n                  <InlineField label=\"Display results\" className={styles.horizontalInlineLabel} transparent>\n                    <RadioButtonGroup\n                      disabled={isFlipping}\n                      options={[\n                        {\n                          label: 'Newest first',\n                          value: LogsSortOrder.Descending,\n                          description: 'Show results newest to oldest',\n                        },\n                        {\n                          label: 'Oldest first',\n                          value: LogsSortOrder.Ascending,\n                          description: 'Show results oldest to newest',\n                        },\n                      ]}\n                      value={logsSortOrder}\n                      onChange={this.onChangeLogsSortOrder}\n                      className={styles.radioButtons}\n                    />\n                  </InlineField>\n                </div>\n              </div>\n            )}\n            <div ref={this.topLogsRef} />\n            <LogsMetaRow\n              logRows={logRows}\n              meta={logsMeta || []}\n              dedupStrategy={dedupStrategy}\n              dedupCount={dedupCount}\n              hasUnescapedContent={hasUnescapedContent}\n              forceEscape={forceEscape}\n              displayedFields={displayedFields}\n              onEscapeNewlines={this.onEscapeNewlines}\n              clearDetectedFields={this.clearDetectedFields}\n            />\n          </div>\n          <div className={styles.logsSection}>\n            {this.state.visualisationType === 'table' && hasData && (\n              <div className={styles.logRows} data-testid=\"logRowsTable\">\n                {/* Width should be full width minus logsnavigation and padding */}\n                <LogsTable\n                  logsSortOrder={this.state.logsSortOrder}\n                  range={this.props.range}\n                  splitOpen={this.props.splitOpen}\n                  timeZone={timeZone}\n                  width={width - 80}\n                  logsFrames={this.props.logsFrames}\n                />\n              </div>\n            )}\n            {this.state.visualisationType === 'logs' && hasData && (\n              <div className={styles.logRows} data-testid=\"logRows\" ref={this.onLogsContainerRef}>\n                <LogRows\n                  logRows={logRows}\n                  deduplicatedRows={dedupedRows}\n                  dedupStrategy={dedupStrategy}\n                  onClickFilterLabel={onClickFilterLabel}\n                  onClickFilterOutLabel={onClickFilterOutLabel}\n                  showContextToggle={showContextToggle}\n                  showLabels={showLabels}\n                  showTime={showTime}\n                  enableLogDetails={true}\n                  forceEscape={forceEscape}\n                  wrapLogMessage={wrapLogMessage}\n                  prettifyLogMessage={prettifyLogMessage}\n                  timeZone={timeZone}\n                  getFieldLinks={getFieldLinks}\n                  logsSortOrder={logsSortOrder}\n                  displayedFields={displayedFields}\n                  onClickShowField={this.showField}\n                  onClickHideField={this.hideField}\n                  app={CoreApp.Explore}\n                  onLogRowHover={this.onLogRowHover}\n                  onOpenContext={this.onOpenContext}\n                  onPermalinkClick={this.onPermalinkClick}\n                  permalinkedRowId={this.props.panelState?.logs?.id}\n                  scrollIntoView={this.scrollIntoView}\n                  isFilterLabelActive={this.props.isFilterLabelActive}\n                  containerRendered={!!this.state.logsContainer}\n                />\n              </div>\n            )}\n            {!loading && !hasData && !scanning && (\n              <div className={styles.logRows}>\n                <div className={styles.noData}>\n                  No logs found.\n                  <Button size=\"sm\" variant=\"secondary\" onClick={this.onClickScan}>\n                    Scan for older logs\n                  </Button>\n                </div>\n              </div>\n            )}\n            {scanning && (\n              <div className={styles.logRows}>\n                <div className={styles.noData}>\n                  <span>{scanText}</span>\n                  <Button size=\"sm\" variant=\"secondary\" onClick={this.onClickStopScan}>\n                    Stop scan\n                  </Button>\n                </div>\n              </div>\n            )}\n            <LogsNavigation\n              logsSortOrder={logsSortOrder}\n              visibleRange={navigationRange ?? absoluteRange}\n              absoluteRange={absoluteRange}\n              timeZone={timeZone}\n              onChangeTime={onChangeTime}\n              loading={loading}\n              queries={logsQueries ?? []}\n              scrollToTopLogs={this.scrollToTopLogs}\n              addResultsToCache={addResultsToCache}\n              clearCache={clearCache}\n            />\n          </div>\n        </PanelChrome>\n      </>\n    );\n  }\n}\n\nexport const Logs = withTheme2(UnthemedLogs);\n\nconst getStyles = (theme: GrafanaTheme2, wrapLogMessage: boolean) => {\n  return {\n    noData: css`\n      > * {\n        margin-left: 0.5em;\n      }\n    `,\n    logOptions: css`\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n      flex-wrap: wrap;\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1, 2)};\n      border-radius: ${theme.shape.radius.default};\n      margin: ${theme.spacing(0, 0, 1)};\n      border: 1px solid ${theme.colors.border.medium};\n    `,\n    headerButton: css`\n      margin: ${theme.spacing(0.5, 0, 0, 1)};\n    `,\n    horizontalInlineLabel: css`\n      > label {\n        margin-right: 0;\n      }\n    `,\n    horizontalInlineSwitch: css`\n      padding: 0 ${theme.spacing(1)} 0 0;\n    `,\n    radioButtons: css`\n      margin: 0;\n    `,\n    logsSection: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n    `,\n    logRows: css`\n      overflow-x: ${scrollableLogsContainer ? 'scroll;' : `${wrapLogMessage ? 'unset' : 'scroll'};`}\n      overflow-y: visible;\n      width: 100%;\n      ${scrollableLogsContainer && 'max-height: calc(100vh - 170px);'}\n    `,\n    visualisationType: css`\n      display: flex;\n      flex: 1;\n      justify-content: space-between;\n    `,\n    visualisationTypeRadio: css`\n      margin: 0 0 0 ${theme.spacing(1)};\n    `,\n    stickyNavigation: css`\n      ${scrollableLogsContainer && 'margin-bottom: 0px'}\n      overflow: visible;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport {\n  AbsoluteTimeRange,\n  Field,\n  hasLogsContextSupport,\n  hasLogsContextUiSupport,\n  LoadingState,\n  LogRowModel,\n  RawTimeRange,\n  EventBus,\n  SplitOpen,\n  DataFrame,\n  SupplementaryQueryType,\n  DataQueryResponse,\n  LogRowContextOptions,\n  DataSourceWithLogsContextSupport,\n  DataSourceApi,\n  hasToggleableQueryFiltersSupport,\n} from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { Collapse } from '@grafana/ui';\nimport { StoreState } from 'app/types';\nimport { ExploreItemState } from 'app/types/explore';\n\nimport { getTimeZone } from '../../profile/state/selectors';\nimport {\n  addResultsToCache,\n  clearCache,\n  loadSupplementaryQueryData,\n  selectIsWaitingForData,\n  setSupplementaryQueryEnabled,\n} from '../state/query';\nimport { updateTimeRange } from '../state/time';\nimport { LiveTailControls } from '../useLiveTailControls';\nimport { getFieldLinksForExplore } from '../utils/links';\n\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\n\ninterface LogsContainerProps extends PropsFromRedux {\n  width: number;\n  exploreId: string;\n  scanRange?: RawTimeRange;\n  syncedTimes: boolean;\n  loadingState: LoadingState;\n  onClickFilterLabel: (key: string, value: string, refId?: string) => void;\n  onClickFilterOutLabel: (key: string, value: string, refId?: string) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n  eventBus: EventBus;\n  splitOpenFn: SplitOpen;\n  scrollElement?: HTMLDivElement;\n  isFilterLabelActive: (key: string, value: string, refId?: string) => Promise<boolean>;\n}\n\ninterface LogsContainerState {\n  logDetailsFilterAvailable: boolean;\n}\n\nclass LogsContainer extends PureComponent<LogsContainerProps, LogsContainerState> {\n  state: LogsContainerState = {\n    logDetailsFilterAvailable: false,\n  };\n\n  componentDidMount() {\n    this.checkFiltersAvailability();\n  }\n\n  componentDidUpdate(prevProps: LogsContainerProps) {\n    this.checkFiltersAvailability();\n  }\n\n  private checkFiltersAvailability() {\n    const { logsQueries, datasourceInstance } = this.props;\n\n    if (!logsQueries) {\n      return;\n    }\n\n    if (datasourceInstance?.modifyQuery || hasToggleableQueryFiltersSupport(datasourceInstance)) {\n      this.setState({ logDetailsFilterAvailable: true });\n      return;\n    }\n\n    const promises = [];\n    for (const query of logsQueries) {\n      if (query.datasource) {\n        promises.push(getDataSourceSrv().get(query.datasource));\n      }\n    }\n\n    Promise.all(promises).then((dataSources) => {\n      const logDetailsFilterAvailable = dataSources.some(\n        (ds) => ds.modifyQuery || hasToggleableQueryFiltersSupport(ds)\n      );\n      this.setState({ logDetailsFilterAvailable });\n    });\n  }\n\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  private getQuery(\n    logsQueries: DataQuery[] | undefined,\n    row: LogRowModel,\n    datasourceInstance: DataSourceApi<DataQuery> & DataSourceWithLogsContextSupport<DataQuery>\n  ) {\n    // we need to find the query, and we need to be very sure that it's a query\n    // from this datasource\n    return (logsQueries ?? []).find(\n      (q) => q.refId === row.dataFrame.refId && q.datasource != null && q.datasource.type === datasourceInstance.type\n    );\n  }\n\n  getLogRowContext = async (\n    row: LogRowModel,\n    origRow: LogRowModel,\n    options: LogRowContextOptions\n  ): Promise<DataQueryResponse | []> => {\n    const { datasourceInstance, logsQueries } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      const query = this.getQuery(logsQueries, origRow, datasourceInstance);\n      return datasourceInstance.getLogRowContext(row, options, query);\n    }\n\n    return [];\n  };\n\n  getLogRowContextQuery = async (row: LogRowModel, options?: LogRowContextOptions): Promise<DataQuery | null> => {\n    const { datasourceInstance, logsQueries } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance) && datasourceInstance.getLogRowContextQuery) {\n      const query = this.getQuery(logsQueries, row, datasourceInstance);\n      return datasourceInstance.getLogRowContextQuery(row, options, query);\n    }\n\n    return null;\n  };\n\n  getLogRowContextUi = (row: LogRowModel, runContextQuery?: () => void): React.ReactNode => {\n    const { datasourceInstance, logsQueries } = this.props;\n\n    if (hasLogsContextUiSupport(datasourceInstance) && datasourceInstance.getLogRowContextUi) {\n      const query = this.getQuery(logsQueries, row, datasourceInstance);\n      return datasourceInstance.getLogRowContextUi(row, runContextQuery, query);\n    }\n\n    return <></>;\n  };\n\n  showContextToggle = (row?: LogRowModel): boolean => {\n    const { datasourceInstance } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      return datasourceInstance.showContextToggle(row);\n    }\n\n    return false;\n  };\n\n  getFieldLinks = (field: Field, rowIndex: number, dataFrame: DataFrame) => {\n    const { splitOpenFn, range } = this.props;\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range, dataFrame });\n  };\n\n  render() {\n    const {\n      loading,\n      loadingState,\n      logRows,\n      logsMeta,\n      logsSeries,\n      logsQueries,\n      loadSupplementaryQueryData,\n      setSupplementaryQueryEnabled,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      visibleRange,\n      scanning,\n      range,\n      width,\n      splitOpenFn,\n      isLive,\n      exploreId,\n      addResultsToCache,\n      clearCache,\n      logsVolume,\n      scrollElement,\n    } = this.props;\n    const { logDetailsFilterAvailable } = this.state;\n\n    if (!logRows) {\n      return null;\n    }\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                  onClear={controls.clear}\n                  clearedAtIndex={this.props.clearedAtIndex}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Logs\n            exploreId={exploreId}\n            datasourceType={this.props.datasourceInstance?.type}\n            logRows={logRows}\n            logsMeta={logsMeta}\n            logsSeries={logsSeries}\n            logsVolumeEnabled={logsVolume.enabled}\n            onSetLogsVolumeEnabled={(enabled) =>\n              setSupplementaryQueryEnabled(exploreId, enabled, SupplementaryQueryType.LogsVolume)\n            }\n            logsVolumeData={logsVolume.data}\n            logsQueries={logsQueries}\n            width={width}\n            splitOpen={splitOpenFn}\n            loading={loading}\n            loadingState={loadingState}\n            loadLogsVolumeData={() => loadSupplementaryQueryData(exploreId, SupplementaryQueryType.LogsVolume)}\n            onChangeTime={this.onChangeTime}\n            onClickFilterLabel={logDetailsFilterAvailable ? onClickFilterLabel : undefined}\n            onClickFilterOutLabel={logDetailsFilterAvailable ? onClickFilterOutLabel : undefined}\n            onStartScanning={onStartScanning}\n            onStopScanning={onStopScanning}\n            absoluteRange={absoluteRange}\n            visibleRange={visibleRange}\n            timeZone={timeZone}\n            scanning={scanning}\n            scanRange={range.raw}\n            showContextToggle={this.showContextToggle}\n            getRowContext={this.getLogRowContext}\n            getRowContextQuery={this.getLogRowContextQuery}\n            getLogRowContextUi={this.getLogRowContextUi}\n            getFieldLinks={this.getFieldLinks}\n            addResultsToCache={() => addResultsToCache(exploreId)}\n            clearCache={() => clearCache(exploreId)}\n            eventBus={this.props.eventBus}\n            panelState={this.props.panelState}\n            logsFrames={this.props.logsFrames}\n            scrollElement={scrollElement}\n            isFilterLabelActive={logDetailsFilterAvailable ? this.props.isFilterLabelActive : undefined}\n            range={range}\n          />\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const {\n    logsResult,\n    scanning,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    clearedAtIndex,\n    range,\n    absoluteRange,\n    supplementaryQueries,\n  } = item;\n  const loading = selectIsWaitingForData(exploreId)(state);\n  const panelState = item.panelsState;\n  const timeZone = getTimeZone(state.user);\n  const logsVolume = supplementaryQueries[SupplementaryQueryType.LogsVolume];\n\n  return {\n    loading,\n    logRows: logsResult?.rows,\n    logsMeta: logsResult?.meta,\n    logsSeries: logsResult?.series,\n    logsQueries: logsResult?.queries,\n    visibleRange: logsResult?.visibleRange,\n    scanning,\n    timeZone,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    clearedAtIndex,\n    range,\n    absoluteRange,\n    logsVolume,\n    panelState,\n    logsFrames: item.queryResponse.logsFrames,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTimeRange,\n  addResultsToCache,\n  clearCache,\n  loadSupplementaryQueryData,\n  setSupplementaryQueryEnabled,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(LogsContainer);\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport {\n  DataQueryResponse,\n  DataSourceApi,\n  GrafanaTheme2,\n  hasSupplementaryQuerySupport,\n  LoadingState,\n  LogsDedupStrategy,\n  SplitOpen,\n  SupplementaryQueryType,\n} from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { DataQuery, TimeZone } from '@grafana/schema';\nimport { Button, Collapse, Icon, Tooltip, useStyles2 } from '@grafana/ui';\nimport store from 'app/core/store';\n\nimport { LogRows } from '../../logs/components/LogRows';\nimport { dataFrameToLogsModel } from '../../logs/logsModel';\nimport { SupplementaryResultError } from '../SupplementaryResultError';\n\nimport { SETTINGS_KEYS } from './utils/logs';\n\ntype Props = {\n  queryResponse: DataQueryResponse | undefined;\n  enabled: boolean;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  datasourceInstance: DataSourceApi | null | undefined;\n  splitOpen: SplitOpen;\n  setLogsSampleEnabled: (enabled: boolean) => void;\n};\n\nexport function LogsSamplePanel(props: Props) {\n  const { queryResponse, timeZone, enabled, setLogsSampleEnabled, datasourceInstance, queries, splitOpen } = props;\n\n  const styles = useStyles2(getStyles);\n  const onToggleLogsSampleCollapse = (isOpen: boolean) => {\n    setLogsSampleEnabled(isOpen);\n    reportInteraction('grafana_explore_logs_sample_toggle_clicked', {\n      datasourceType: datasourceInstance?.type ?? 'unknown',\n      type: isOpen ? 'open' : 'close',\n    });\n  };\n\n  const OpenInSplitViewButton = () => {\n    if (!hasSupplementaryQuerySupport(datasourceInstance, SupplementaryQueryType.LogsSample)) {\n      return null;\n    }\n\n    const logSampleQueries = queries\n      .map((query) => datasourceInstance.getSupplementaryQuery({ type: SupplementaryQueryType.LogsSample }, query))\n      .filter((query): query is DataQuery => !!query);\n\n    if (!logSampleQueries.length) {\n      return null;\n    }\n\n    const onSplitOpen = () => {\n      splitOpen({ queries: logSampleQueries, datasourceUid: datasourceInstance.uid });\n      reportInteraction('grafana_explore_logs_sample_split_button_clicked', {\n        datasourceType: datasourceInstance?.type ?? 'unknown',\n        queriesCount: logSampleQueries.length,\n      });\n    };\n\n    return (\n      <Button size=\"sm\" className={styles.logSamplesButton} onClick={onSplitOpen}>\n        Open logs in split view\n      </Button>\n    );\n  };\n\n  let LogsSamplePanelContent: JSX.Element | null;\n\n  if (queryResponse === undefined) {\n    LogsSamplePanelContent = null;\n  } else if (queryResponse.error !== undefined) {\n    LogsSamplePanelContent = (\n      <SupplementaryResultError error={queryResponse.error} title=\"Failed to load logs sample for this query\" />\n    );\n  } else if (queryResponse.state === LoadingState.Loading) {\n    LogsSamplePanelContent = <span>Logs sample is loading...</span>;\n  } else if (queryResponse.data.length === 0 || queryResponse.data.every((frame) => frame.length === 0)) {\n    LogsSamplePanelContent = <span>No logs sample data.</span>;\n  } else {\n    const logs = dataFrameToLogsModel(queryResponse.data);\n    LogsSamplePanelContent = (\n      <>\n        <OpenInSplitViewButton />\n        <div className={styles.logContainer}>\n          <LogRows\n            logRows={logs.rows}\n            dedupStrategy={LogsDedupStrategy.none}\n            showLabels={store.getBool(SETTINGS_KEYS.showLabels, false)}\n            showTime={store.getBool(SETTINGS_KEYS.showTime, true)}\n            wrapLogMessage={store.getBool(SETTINGS_KEYS.wrapLogMessage, true)}\n            prettifyLogMessage={store.getBool(SETTINGS_KEYS.prettifyLogMessage, false)}\n            timeZone={timeZone}\n            enableLogDetails={true}\n          />\n        </div>\n      </>\n    );\n  }\n\n  return queryResponse?.state !== LoadingState.NotStarted ? (\n    <Collapse\n      className={styles.logsSamplePanel}\n      label={\n        <div>\n          Logs sample\n          <Tooltip content=\"Show log lines that contributed to visualized metrics\">\n            <Icon name=\"info-circle\" className={styles.infoTooltip} />\n          </Tooltip>\n        </div>\n      }\n      isOpen={enabled}\n      collapsible={true}\n      onToggle={onToggleLogsSampleCollapse}\n    >\n      {LogsSamplePanelContent}\n    </Collapse>\n  ) : null;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const scrollableLogsContainer = config.featureToggles.exploreScrollableLogsContainer;\n\n  return {\n    logsSamplePanel: css`\n      ${scrollableLogsContainer && 'max-height: calc(100vh - 115px);'}\n    `,\n    logSamplesButton: css`\n      position: absolute;\n      top: ${theme.spacing(1)};\n      right: ${theme.spacing(1)};\n    `,\n    logContainer: css`\n      ${scrollableLogsContainer && 'position: relative;'}\n      ${scrollableLogsContainer && 'height: 100%;'}\n      overflow: scroll;\n    `,\n    infoTooltip: css`\n      margin-left: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { useStyles2, PanelContainer } from '@grafana/ui';\n\nexport const NoData = () => {\n  const css = useStyles2(getStyles);\n  return (\n    <>\n      <PanelContainer data-testid=\"explore-no-data\" className={css.wrapper}>\n        <span className={css.message}>{'No data'}</span>\n      </PanelContainer>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    label: no-data-card;\n    padding: ${theme.spacing(3)};\n    background: ${theme.colors.background.primary};\n    border-radius: ${theme.shape.radius.default};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    flex-grow: 1;\n  `,\n  message: css`\n    font-size: ${theme.typography.h2.fontSize};\n    padding: ${theme.spacing(4)};\n    color: ${theme.colors.text.disabled};\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { LinkButton, CallToActionCard, Icon, useTheme2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nexport const NoDataSourceCallToAction = () => {\n  const theme = useTheme2();\n\n  const canCreateDataSource =\n    contextSrv.hasPermission(AccessControlAction.DataSourcesCreate) &&\n    contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <Icon name=\"rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/?utm_source=explore#data-sources\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"datasources/new\" icon=\"database\" disabled={!canCreateDataSource}>\n      Add data source\n    </LinkButton>\n  );\n\n  const cardClassName = css`\n    max-width: ${theme.breakpoints.values.lg}px;\n    margin-top: ${theme.spacing(2)};\n    align-self: center;\n  `;\n\n  return (\n    <CallToActionCard callToActionElement={ctaElement} className={cardClassName} footer={footer} message={message} />\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useToggle, useWindowSize } from 'react-use';\n\nimport { applyFieldOverrides, DataFrame, GrafanaTheme2, SplitOpen } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { useStyles2, useTheme2, PanelChrome } from '@grafana/ui';\n\nimport { NodeGraph } from '../../../plugins/panel/nodeGraph';\nimport { useCategorizeFrames } from '../../../plugins/panel/nodeGraph/useCategorizeFrames';\nimport { StoreState } from '../../../types';\nimport { useLinks } from '../utils/links';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  warningText: css`\n    label: warningText;\n    display: flex;\n    align-items: center;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\ninterface OwnProps {\n  // Edges and Nodes are separate frames\n  dataFrames: DataFrame[];\n  exploreId: string;\n  // When showing the node graph together with trace view we do some changes so it works better.\n  withTraceView?: boolean;\n  datasourceType: string;\n  splitOpenFn: SplitOpen;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UnconnectedNodeGraphContainer(props: Props) {\n  const { dataFrames, range, splitOpenFn, withTraceView, datasourceType } = props;\n  const getLinks = useLinks(range, splitOpenFn);\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  // This is implicit dependency that is needed for links to work. At some point when replacing variables in the link\n  // it requires field to have a display property which is added by the overrides even though we don't add any field\n  // overrides in explore.\n  const frames = applyFieldOverrides({\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    data: dataFrames,\n    // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n    replaceVariables: (value) => value,\n    theme,\n  });\n\n  const { nodes } = useCategorizeFrames(frames);\n  const [collapsed, toggleCollapsed] = useToggle(true);\n\n  const toggled = () => {\n    toggleCollapsed();\n    reportInteraction('grafana_traces_node_graph_panel_clicked', {\n      datasourceType: datasourceType,\n      grafana_version: config.buildInfo.version,\n      isExpanded: !open,\n    });\n  };\n\n  // Calculate node graph height based on window and top position, with some padding\n  const { height: windowHeight } = useWindowSize();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [top, setTop] = useState(250);\n  useEffect(() => {\n    if (containerRef.current) {\n      const { top } = containerRef.current.getBoundingClientRect();\n      setTop(top);\n    }\n  }, [containerRef]);\n  const height = windowHeight - top - 32;\n\n  const countWarning =\n    withTraceView && nodes[0]?.length > 1000 ? (\n      <span className={styles.warningText}> ({nodes[0].length} nodes, can be slow to load)</span>\n    ) : null;\n\n  return (\n    <PanelChrome\n      title={`Node graph`}\n      titleItems={countWarning}\n      // We allow collapsing this only when it is shown together with trace view.\n      collapsible={!!withTraceView}\n      collapsed={withTraceView ? collapsed : false}\n      onToggleCollapse={withTraceView ? toggled : undefined}\n    >\n      <div\n        ref={containerRef}\n        style={\n          withTraceView\n            ? { height: 500 }\n            : {\n                minHeight: 600,\n                height,\n              }\n        }\n      >\n        <NodeGraph dataFrames={frames} getLinks={getLinks} />\n      </div>\n    </PanelChrome>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: OwnProps) {\n  return {\n    range: state.explore.panes[exploreId]!.range,\n  };\n}\n\nconst connector = connect(mapStateToProps, {});\nexport const NodeGraphContainer = connector(UnconnectedNodeGraphContainer);\n","import { createSelector } from '@reduxjs/toolkit';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { CoreApp } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { getNextRefIdChar } from 'app/core/utils/query';\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { QueryEditorRows } from '../query/components/QueryEditorRows';\n\nimport { changeQueries, runQueries } from './state/query';\nimport { getExploreItemSelector } from './state/selectors';\n\ninterface Props {\n  exploreId: string;\n}\n\nconst makeSelectors = (exploreId: string) => {\n  const exploreItemSelector = getExploreItemSelector(exploreId);\n  return {\n    getQueries: createSelector(exploreItemSelector, (s) => s!.queries),\n    getQueryResponse: createSelector(exploreItemSelector, (s) => s!.queryResponse),\n    getHistory: createSelector(exploreItemSelector, (s) => s!.history),\n    getEventBridge: createSelector(exploreItemSelector, (s) => s!.eventBridge),\n    getDatasourceInstanceSettings: createSelector(\n      exploreItemSelector,\n      (s) => getDatasourceSrv().getInstanceSettings(s!.datasourceInstance?.uid)!\n    ),\n  };\n};\n\nexport const QueryRows = ({ exploreId }: Props) => {\n  const dispatch = useDispatch();\n  const { getQueries, getDatasourceInstanceSettings, getQueryResponse, getHistory, getEventBridge } = useMemo(\n    () => makeSelectors(exploreId),\n    [exploreId]\n  );\n\n  const queries = useSelector(getQueries);\n  const dsSettings = useSelector(getDatasourceInstanceSettings);\n  const queryResponse = useSelector(getQueryResponse);\n  const history = useSelector(getHistory);\n  const eventBridge = useSelector(getEventBridge);\n\n  const onRunQueries = useCallback(() => {\n    dispatch(runQueries({ exploreId }));\n  }, [dispatch, exploreId]);\n\n  const onChange = useCallback(\n    (newQueries: DataQuery[]) => {\n      dispatch(changeQueries({ exploreId, queries: newQueries }));\n    },\n    [dispatch, exploreId]\n  );\n\n  const onAddQuery = useCallback(\n    (query: DataQuery) => {\n      onChange([...queries, { ...query, refId: getNextRefIdChar(queries) }]);\n    },\n    [onChange, queries]\n  );\n\n  const onQueryCopied = () => {\n    reportInteraction('grafana_explore_query_row_copy');\n  };\n\n  const onQueryRemoved = () => {\n    reportInteraction('grafana_explore_query_row_remove');\n  };\n\n  const onQueryToggled = (queryStatus?: boolean) => {\n    reportInteraction('grafana_query_row_toggle', queryStatus === undefined ? {} : { queryEnabled: queryStatus });\n  };\n\n  return (\n    <QueryEditorRows\n      dsSettings={dsSettings}\n      queries={queries}\n      onQueriesChange={onChange}\n      onAddQuery={onAddQuery}\n      onRunQueries={onRunQueries}\n      onQueryCopied={onQueryCopied}\n      onQueryRemoved={onQueryRemoved}\n      onQueryToggled={onQueryToggled}\n      data={queryResponse}\n      app={CoreApp.Explore}\n      history={history}\n      eventBus={eventBridge}\n    />\n  );\n};\n","import { css } from '@emotion/css';\nimport { cloneDeep } from 'lodash';\nimport React, { useEffect, useId, useRef, useState } from 'react';\nimport { useWindowSize } from 'react-use';\nimport { VariableSizeList as List } from 'react-window';\n\nimport { DataFrame, Field as DataFrameField } from '@grafana/data/';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { Field, Switch } from '@grafana/ui/';\n\nimport {\n  getRawPrometheusListItemsFromDataFrame,\n  RawPrometheusListItemEmptyValue,\n} from '../utils/getRawPrometheusListItemsFromDataFrame';\n\nimport { ItemLabels } from './ItemLabels';\nimport RawListItem from './RawListItem';\n\nexport type instantQueryRawVirtualizedListData = { Value: string; __name__: string; [index: string]: string };\n\nexport interface RawListContainerProps {\n  tableResult: DataFrame;\n}\n\nconst styles = {\n  wrapper: css`\n    height: 100%;\n    overflow: scroll;\n  `,\n  switchWrapper: css`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 0;\n  `,\n  switchLabel: css`\n    margin-left: 15px;\n    margin-bottom: 0;\n  `,\n  switch: css`\n    margin-left: 10px;\n  `,\n  resultCount: css`\n    margin-bottom: 4px;\n  `,\n  header: css`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px 0;\n    font-size: 12px;\n    line-height: 1.25;\n  `,\n};\n\nconst mobileWidthThreshold = 480;\nconst numberOfColumnsBeforeExpandedViewIsDefault = 2;\n\n/**\n * The container that provides the virtualized list to the child components\n * @param props\n * @constructor\n */\nconst RawListContainer = (props: RawListContainerProps) => {\n  const { tableResult } = props;\n  const dataFrame = cloneDeep(tableResult);\n  const listRef = useRef<List | null>(null);\n\n  const valueLabels = dataFrame.fields.filter((field) => field.name.includes('Value'));\n  const items = getRawPrometheusListItemsFromDataFrame(dataFrame);\n  const { width } = useWindowSize();\n  const [isExpandedView, setIsExpandedView] = useState(\n    width <= mobileWidthThreshold || valueLabels.length > numberOfColumnsBeforeExpandedViewIsDefault\n  );\n\n  const onContentClick = () => {\n    setIsExpandedView(!isExpandedView);\n    const props = {\n      isExpanded: !isExpandedView,\n    };\n    reportInteraction('grafana_explore_prometheus_instant_query_ui_raw_toggle_expand', props);\n  };\n\n  useEffect(() => {\n    // After the expanded view has updated, tell the list to re-render\n    listRef.current?.resetAfterIndex(0, true);\n  }, [isExpandedView]);\n\n  const calculateInitialHeight = (length: number): number => {\n    const maxListHeight = 600;\n    const shortListLength = 10;\n\n    if (length < shortListLength) {\n      let sum = 0;\n      for (let i = 0; i < length; i++) {\n        sum += getListItemHeight(i, true);\n      }\n\n      return Math.min(maxListHeight, sum);\n    }\n\n    return maxListHeight;\n  };\n\n  const getListItemHeight = (itemIndex: number, isExpandedView: boolean) => {\n    const singleLineHeight = 32;\n    const additionalLineHeight = 22;\n    if (!isExpandedView) {\n      return singleLineHeight;\n    }\n    const item = items[itemIndex];\n\n    // Height of 1.5 lines, plus the number of non-value attributes times the height of additional lines\n    return 1.5 * singleLineHeight + (Object.keys(item).length - valueLabels.length) * additionalLineHeight;\n  };\n\n  const switchId = `isExpandedView ${useId()}`;\n\n  return (\n    <section>\n      <header className={styles.header}>\n        <Field className={styles.switchWrapper} label={`Expand results`} htmlFor={'isExpandedView'}>\n          <div className={styles.switch}>\n            <Switch onChange={onContentClick} id={switchId} value={isExpandedView} label={`Expand results`} />\n          </div>\n        </Field>\n\n        <div className={styles.resultCount}>Result series: {items.length}</div>\n      </header>\n\n      <div role={'table'}>\n        {\n          <>\n            {/* Show the value headings above all the values, but only if we're in the contracted view */}\n            {valueLabels.length > 1 && !isExpandedView && (\n              <ItemLabels valueLabels={valueLabels} expanded={isExpandedView} />\n            )}\n            <List\n              ref={listRef}\n              itemCount={items.length}\n              className={styles.wrapper}\n              itemSize={(index) => getListItemHeight(index, isExpandedView)}\n              height={calculateInitialHeight(items.length)}\n              width=\"100%\"\n            >\n              {({ index, style }) => {\n                let filteredValueLabels: DataFrameField[] | undefined;\n                if (isExpandedView) {\n                  filteredValueLabels = valueLabels.filter((valueLabel) => {\n                    const itemWithValue = items[index][valueLabel.name];\n                    return itemWithValue && itemWithValue !== RawPrometheusListItemEmptyValue;\n                  });\n                }\n\n                return (\n                  <div role=\"row\" style={{ ...style, overflow: 'hidden' }}>\n                    <RawListItem\n                      isExpandedView={isExpandedView}\n                      valueLabels={filteredValueLabels}\n                      totalNumberOfValues={valueLabels.length}\n                      listKey={items[index].__name__}\n                      listItemData={items[index]}\n                    />\n                  </div>\n                );\n              }}\n            </List>\n          </>\n        }\n      </div>\n    </section>\n  );\n};\n\nexport default RawListContainer;\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { applyFieldOverrides, DataFrame, SelectableValue, SplitOpen, TimeZone } from '@grafana/data';\nimport { getTemplateSrv, reportInteraction } from '@grafana/runtime';\nimport { Collapse, RadioButtonGroup, Table, AdHocFilterItem } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { StoreState, TABLE_RESULTS_STYLE } from 'app/types';\nimport { ExploreItemState, TABLE_RESULTS_STYLES, TableResultsStyle } from 'app/types/explore';\n\nimport { MetaInfoText } from '../MetaInfoText';\nimport RawListContainer from '../PrometheusListView/RawListContainer';\nimport { selectIsWaitingForData } from '../state/query';\nimport { exploreDataLinkPostProcessorFactory } from '../utils/links';\n\ninterface RawPrometheusContainerProps {\n  ariaLabel?: string;\n  exploreId: string;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: AdHocFilterItem) => void;\n  showRawPrometheus?: boolean;\n  splitOpenFn: SplitOpen;\n}\n\ninterface PrometheusContainerState {\n  resultsStyle: TableResultsStyle;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: RawPrometheusContainerProps) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const { tableResult, rawPrometheusResult, range } = item;\n  const loadingInState = selectIsWaitingForData(exploreId)(state);\n  const rawPrometheusFrame: DataFrame[] = rawPrometheusResult ? [rawPrometheusResult] : [];\n  const result = (tableResult?.length ?? false) > 0 && rawPrometheusResult ? tableResult : rawPrometheusFrame;\n  const loading = result && result.length > 0 ? false : loadingInState;\n\n  return { loading, tableResult: result, range };\n}\n\nconst connector = connect(mapStateToProps, {});\n\ntype Props = RawPrometheusContainerProps & ConnectedProps<typeof connector>;\n\nexport class RawPrometheusContainer extends PureComponent<Props, PrometheusContainerState> {\n  constructor(props: Props) {\n    super(props);\n\n    // If resultsStyle is undefined we won't render the toggle, and the default table will be rendered\n    if (props.showRawPrometheus) {\n      this.state = {\n        resultsStyle: TABLE_RESULTS_STYLE.raw,\n      };\n    }\n  }\n\n  onChangeResultsStyle = (resultsStyle: TableResultsStyle) => {\n    this.setState({ resultsStyle });\n  };\n\n  getTableHeight() {\n    const { tableResult } = this.props;\n\n    if (!tableResult || tableResult.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, tableResult[0].length * 35) + 35);\n  }\n\n  renderLabel = () => {\n    const spacing = css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      flex: '1',\n    });\n    const ALL_GRAPH_STYLE_OPTIONS: Array<SelectableValue<TableResultsStyle>> = TABLE_RESULTS_STYLES.map((style) => ({\n      value: style,\n      // capital-case it and switch `_` to ` `\n      label: style[0].toUpperCase() + style.slice(1).replace(/_/, ' '),\n    }));\n\n    return (\n      <div className={spacing}>\n        {this.state.resultsStyle === TABLE_RESULTS_STYLE.raw ? 'Raw' : 'Table'}\n        <RadioButtonGroup\n          onClick={() => {\n            const props = {\n              state:\n                this.state.resultsStyle === TABLE_RESULTS_STYLE.table\n                  ? TABLE_RESULTS_STYLE.raw\n                  : TABLE_RESULTS_STYLE.table,\n            };\n            reportInteraction('grafana_explore_prometheus_instant_query_ui_toggle_clicked', props);\n          }}\n          size=\"sm\"\n          options={ALL_GRAPH_STYLE_OPTIONS}\n          value={this.state?.resultsStyle}\n          onChange={this.onChangeResultsStyle}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpenFn, range, ariaLabel, timeZone } = this.props;\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n\n    let dataFrames = tableResult;\n\n    const dataLinkPostProcessor = exploreDataLinkPostProcessorFactory(splitOpenFn, range);\n\n    if (dataFrames?.length) {\n      dataFrames = applyFieldOverrides({\n        data: dataFrames,\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n        dataLinkPostProcessor,\n      });\n    }\n\n    const frames = dataFrames?.filter(\n      (frame: DataFrame | undefined): frame is DataFrame => !!frame && frame.length !== 0\n    );\n\n    const label = this.state?.resultsStyle !== undefined ? this.renderLabel() : 'Table';\n\n    // Render table as default if resultsStyle is not set.\n    const renderTable = !this.state?.resultsStyle || this.state?.resultsStyle === TABLE_RESULTS_STYLE.table;\n\n    return (\n      <Collapse label={label} loading={loading} isOpen>\n        {frames?.length && (\n          <>\n            {renderTable && (\n              <Table\n                ariaLabel={ariaLabel}\n                data={frames[0]}\n                width={tableWidth}\n                height={height}\n                onCellFilterAdded={onCellFilterAdded}\n              />\n            )}\n            {this.state?.resultsStyle === TABLE_RESULTS_STYLE.raw && <RawListContainer tableResult={frames[0]} />}\n          </>\n        )}\n        {!frames?.length && <MetaInfoText metaItems={[{ value: '0 series returned' }]} />}\n      </Collapse>\n    );\n  }\n}\n\nexport default connector(RawPrometheusContainer);\n","import React, { CSSProperties } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler<HTMLDivElement>;\n}\n\nexport const FadeIn = (props: Props) => {\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n    >\n      {(state) => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","import React from 'react';\n\nimport { DataQueryError } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer = (props: ErrorContainerProps) => {\n  const { queryError } = props;\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const title = queryError ? 'Query error' : 'Unknown error';\n  const message = queryError?.message || queryError?.data?.message || null;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <Alert severity=\"error\" title={title} topSpacing={2}>\n        {message}\n      </Alert>\n    </FadeIn>\n  );\n};\n","import React from 'react';\n\nimport { LoadingState } from '@grafana/data';\nimport { useSelector } from 'app/types';\n\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface Props {\n  exploreId: string;\n}\nexport function ResponseErrorContainer(props: Props) {\n  const queryResponse = useSelector((state) => state.explore.panes[props.exploreId]!.queryResponse);\n  const queryError = queryResponse?.state === LoadingState.Error ? queryResponse?.error : undefined;\n\n  // Errors with ref ids are shown below the corresponding query\n  if (queryError?.refId) {\n    return null;\n  }\n\n  return <ErrorContainer queryError={queryError} />;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useAsync } from 'react-use';\n\nimport { GrafanaTheme2, DataSourceApi } from '@grafana/data';\nimport { config, getDataSourceSrv, reportInteraction, getAppEvents } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport { TextArea, Button, IconButton, useStyles2, LoadingPlaceholder } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { changeDatasource } from 'app/features/explore/state/datasource';\nimport { starHistoryItem, commentHistoryItem, deleteHistoryItem } from 'app/features/explore/state/history';\nimport { setQueries } from 'app/features/explore/state/query';\nimport { dispatch } from 'app/store/store';\nimport { StoreState } from 'app/types';\nimport { ShowConfirmModalEvent } from 'app/types/events';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore.panes[exploreId]!;\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  deleteHistoryItem,\n  commentHistoryItem,\n  starHistoryItem,\n  setQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps<T extends DataQuery = DataQuery> {\n  query: RichHistoryQuery<T>;\n}\n\nexport type Props<T extends DataQuery = DataQuery> = ConnectedProps<typeof connector> & OwnProps<T>;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rightColumnWidth = '240px';\n  const rightColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.background.secondary;\n\n  return {\n    queryCard: css`\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(1)} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.shape.radius.default};\n      .starred {\n        color: ${theme.v1.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing(1)};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border.weak};\n        padding: ${theme.spacing(0.5, 1)};\n      }\n      img {\n        height: ${theme.typography.fontSize}px;\n        max-width: ${theme.typography.fontSize}px;\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n    queryActionButtons: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing(1)};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.fontWeightMedium};\n      width: calc(100% - ${rightColumnWidth});\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rightColumnWidth});\n      margin-top: ${theme.spacing(1)};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin-top: ${theme.spacing(0.5)};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-top: ${theme.spacing(1)};\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing(0.5, 2)};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n    loader: css`\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: ${theme.colors.background.secondary};\n    `,\n  };\n};\n\nexport function RichHistoryCard(props: Props) {\n  const {\n    query,\n    commentHistoryItem,\n    starHistoryItem,\n    deleteHistoryItem,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries,\n  } = props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(query.comment);\n  const { value, loading } = useAsync(async () => {\n    let dsInstance: DataSourceApi | undefined;\n    try {\n      dsInstance = await getDataSourceSrv().get(query.datasourceUid);\n    } catch (e) {}\n\n    return {\n      dsInstance,\n      queries: await Promise.all(\n        query.queries.map(async (query) => {\n          let datasource;\n          if (dsInstance?.meta.mixed) {\n            try {\n              datasource = await getDataSourceSrv().get(query.datasource);\n            } catch (e) {}\n          } else {\n            datasource = dsInstance;\n          }\n\n          return {\n            query,\n            datasource,\n          };\n        })\n      ),\n    };\n  }, [query.datasourceUid, query.queries]);\n\n  const styles = useStyles2(getStyles);\n\n  const onRunQuery = async () => {\n    const queriesToRun = query.queries;\n    const differentDataSource = query.datasourceUid !== datasourceInstance?.uid;\n    if (differentDataSource) {\n      await changeDatasource(exploreId, query.datasourceUid);\n    }\n    setQueries(exploreId, queriesToRun);\n\n    reportInteraction('grafana_explore_query_history_run', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      differentDataSource,\n    });\n  };\n\n  const onCopyQuery = async () => {\n    const datasources = [...query.queries.map((q) => q.datasource?.type || 'unknown')];\n    reportInteraction('grafana_explore_query_history_copy_query', {\n      datasources,\n      mixed: Boolean(value?.dsInstance?.meta.mixed),\n    });\n\n    if (loading || !value) {\n      return;\n    }\n\n    const queriesText = value.queries\n      .map((q) => {\n        return createQueryText(q.query, q.datasource);\n      })\n      .join('\\n');\n\n    copyStringToClipboard(queriesText);\n    dispatch(notifyApp(createSuccessNotification('Query copied to clipboard')));\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(query);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    const performDelete = (queryId: string) => {\n      deleteHistoryItem(queryId);\n      dispatch(notifyApp(createSuccessNotification('Query deleted')));\n      reportInteraction('grafana_explore_query_history_deleted', {\n        queryHistoryEnabled: config.queryHistoryEnabled,\n      });\n    };\n\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (query.starred) {\n      getAppEvents().publish(\n        new ShowConfirmModalEvent({\n          title: 'Delete',\n          text: 'Are you sure you want to permanently delete your starred query?',\n          yesText: 'Delete',\n          icon: 'trash-alt',\n          onConfirm: () => performDelete(query.id),\n        })\n      );\n    } else {\n      performDelete(query.id);\n    }\n  };\n\n  const onStarrQuery = () => {\n    starHistoryItem(query.id, !query.starred);\n    reportInteraction('grafana_explore_query_history_starred', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      newValue: !query.starred,\n    });\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    commentHistoryItem(query.id, comment);\n    setActiveUpdateComment(false);\n    reportInteraction('grafana_explore_query_history_commented', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(query.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div className={styles.updateCommentContainer} aria-label={comment ? 'Update comment form' : 'Add comment form'}>\n      <TextArea\n        onKeyDown={onKeyDown}\n        value={comment}\n        placeholder={comment ? undefined : 'An optional description of what the query does.'}\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment}>Save comment</Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        tooltip={query.comment?.length > 0 ? 'Edit comment' : 'Add comment'}\n      />\n      <IconButton name=\"copy\" onClick={onCopyQuery} tooltip=\"Copy query to clipboard\" />\n      {value?.dsInstance && (\n        <IconButton name=\"share-alt\" onClick={onCreateShortLink} tooltip=\"Copy shortened link to clipboard\" />\n      )}\n      <IconButton name=\"trash-alt\" title=\"Delete query\" tooltip=\"Delete query\" onClick={onDeleteQuery} />\n      <IconButton\n        name={query.starred ? 'favorite' : 'star'}\n        iconType={query.starred ? 'mono' : 'default'}\n        onClick={onStarrQuery}\n        tooltip={query.starred ? 'Unstar query' : 'Star query'}\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard}>\n      <div className={styles.cardRow}>\n        <DatasourceInfo dsApi={value?.dsInstance} size=\"sm\" />\n\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {value?.queries.map((q, i) => {\n            return <Query query={q} key={`${q}-${i}`} showDsInfo={value?.dsInstance?.meta.mixed} />;\n          })}\n          {!activeUpdateComment && query.comment && (\n            <div aria-label=\"Query comment\" className={styles.comment}>\n              {query.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Button\n              variant=\"secondary\"\n              onClick={onRunQuery}\n              disabled={!value?.dsInstance || value.queries.some((query) => !query.datasource)}\n            >\n              {datasourceInstance?.uid === query.datasourceUid ? 'Run query' : 'Switch data source and run query'}\n            </Button>\n          </div>\n        )}\n      </div>\n      {loading && <LoadingPlaceholder text=\"loading...\" className={styles.loader} />}\n    </div>\n  );\n}\n\nconst getQueryStyles = (theme: GrafanaTheme2) => ({\n  queryRow: css`\n    border-top: 1px solid ${theme.colors.border.weak};\n    display: flex;\n    flex-direction: row;\n    padding: 4px 0px;\n    gap: 4px;\n    :first-child {\n      border-top: none;\n    }\n  `,\n  dsInfoContainer: css`\n    display: flex;\n    align-items: center;\n  `,\n  queryText: css`\n    word-break: break-all;\n  `,\n});\n\ninterface QueryProps {\n  query: {\n    query: DataQuery;\n    datasource?: DataSourceApi;\n  };\n  /** Show datasource info (icon+name) alongside the query text */\n  showDsInfo?: boolean;\n}\n\nconst Query = ({ query, showDsInfo = false }: QueryProps) => {\n  const styles = useStyles2(getQueryStyles);\n\n  return (\n    <div className={styles.queryRow}>\n      {showDsInfo && (\n        <div className={styles.dsInfoContainer}>\n          <DatasourceInfo dsApi={query.datasource} size=\"md\" />\n          {': '}\n        </div>\n      )}\n      <span aria-label=\"Query text\" className={styles.queryText}>\n        {createQueryText(query.query, query.datasource)}\n      </span>\n    </div>\n  );\n};\n\nconst getDsInfoStyles = (size: 'sm' | 'md') => (theme: GrafanaTheme2) => css`\n  display: flex;\n  align-items: center;\n  font-size: ${theme.typography[size === 'sm' ? 'bodySmall' : 'body'].fontSize};\n  font-weight: ${theme.typography.fontWeightMedium};\n  white-space: nowrap;\n`;\n\nfunction DatasourceInfo({ dsApi, size }: { dsApi?: DataSourceApi; size: 'sm' | 'md' }) {\n  const getStyles = useCallback((theme: GrafanaTheme2) => getDsInfoStyles(size)(theme), [size]);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles}>\n      <img\n        src={dsApi?.meta.info.logos.small || 'public/img/icn-datasource.svg'}\n        alt={dsApi?.type || 'Data source does not exist anymore'}\n        aria-label=\"Data source icon\"\n      />\n      <div aria-label=\"Data source name\">{dsApi?.name || 'Data source does not exist anymore'}</div>\n    </div>\n  );\n}\n\nexport default connector(RichHistoryCard);\n","import { css } from '@emotion/css';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Button, FilterInput, MultiSelect, RangeSlider, Select, useStyles2 } from '@grafana/ui';\nimport {\n  createDatasourcesList,\n  mapNumbertoTimeInSlider,\n  mapQueriesToHeadings,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface RichHistoryQueriesTabProps {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  activeDatasourceInstance: string;\n  updateFilters: (filtersToUpdate?: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  exploreId: string;\n  height: number;\n}\n\nconst getStyles = (theme: GrafanaTheme2, height: number) => {\n  return {\n    container: css`\n      display: flex;\n    `,\n    labelSlider: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      &:last-of-type {\n        margin-top: ${theme.spacing(3)};\n      }\n      &:first-of-type {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-bottom: ${theme.spacing(2)};\n      }\n    `,\n    containerContent: css`\n      /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n      width: calc(100% - 134px);\n    `,\n    containerSlider: css`\n      width: 129px;\n      margin-right: ${theme.spacing(1)};\n    `,\n    fixedSlider: css`\n      position: fixed;\n    `,\n    slider: css`\n      bottom: 10px;\n      height: ${height - 180}px;\n      width: 129px;\n      padding: ${theme.spacing(1)} 0;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing(3)};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.h4.fontSize};\n      margin: ${theme.spacing(2, 0.25, 1, 0.25)};\n    `,\n    footer: css`\n      height: 60px;\n      margin: ${theme.spacing(3)} auto;\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.fontWeightLight};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      a {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-left: ${theme.spacing(0.25)};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin-left: ${theme.spacing(0.5)};\n    `,\n  };\n};\n\nexport function RichHistoryQueriesTab(props: RichHistoryQueriesTabProps) {\n  const {\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    richHistorySettings,\n    exploreId,\n    height,\n    activeDatasourceInstance,\n  } = props;\n\n  const styles = useStyles2(getStyles, height);\n\n  const listOfDatasources = createDatasourcesList();\n\n  useEffect(() => {\n    const datasourceFilters =\n      !richHistorySettings.activeDatasourceOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : [activeDatasourceInstance];\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: false,\n    };\n    updateFilters(filters);\n\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!richHistorySearchFilters) {\n    return <span>Loading...</span>;\n  }\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  const mappedQueriesToHeadings = mapQueriesToHeadings(queries, richHistorySearchFilters.sortOrder);\n  const sortOrderOptions = getSortOrderOptions();\n  const partialResults = queries.length && queries.length !== totalQueries;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.fixedSlider}>\n          <div className={styles.labelSlider}>Filter history</div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(richHistorySearchFilters.from)}</div>\n          <div className={styles.slider}>\n            <RangeSlider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={richHistorySettings.retentionPeriod}\n              value={[richHistorySearchFilters.from, richHistorySearchFilters.to]}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={(value) => {\n                updateFilters({ from: value![0], to: value![1] });\n              }}\n            />\n          </div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(richHistorySearchFilters.to)}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent} data-testid=\"query-history-queries-tab\">\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourceOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder=\"Filter queries for data sources(s)\"\n              aria-label=\"Filter queries for data sources(s)\"\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              escapeRegex={false}\n              placeholder=\"Search queries\"\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n\n        {loading && <span>Loading results...</span>}\n\n        {!loading &&\n          Object.keys(mappedQueriesToHeadings).map((heading) => {\n            return (\n              <div key={heading}>\n                <div className={styles.heading}>\n                  {heading}{' '}\n                  <span className={styles.queries}>\n                    {partialResults ? 'Displaying ' : ''}\n                    {mappedQueriesToHeadings[heading].length} queries\n                  </span>\n                </div>\n                {mappedQueriesToHeadings[heading].map((q) => {\n                  return <RichHistoryCard query={q} key={q.id} exploreId={exploreId} />;\n                })}\n              </div>\n            );\n          })}\n        {partialResults ? (\n          <div>\n            Showing {queries.length} of {totalQueries} <Button onClick={loadMoreRichHistory}>Load more</Button>\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled ? 'The history is local to your browser and is not shared with others.' : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { getAppEvents } from '@grafana/runtime';\nimport { useStyles2, Select, Button, Field, InlineField, InlineSwitch, Alert } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { MAX_HISTORY_ITEMS } from 'app/core/history/RichHistoryLocalStorage';\nimport { dispatch } from 'app/store/store';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: SelectableValue<number>) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n    spaceBetween: css`\n      margin-bottom: ${theme.spacing(3)};\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n    bold: css`\n      font-weight: ${theme.typography.fontWeightBold};\n    `,\n    bottomMargin: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n};\n\nconst retentionPeriodOptions = [\n  { value: 2, label: '2 days' },\n  { value: 5, label: '5 days' },\n  { value: 7, label: '1 week' },\n  { value: 14, label: '2 weeks' },\n];\n\nexport function RichHistorySettingsTab(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const styles = useStyles2(getStyles);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    getAppEvents().publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: 'Are you sure you want to permanently delete your query history?',\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(notifyApp(createSuccessNotification('Query history deleted')));\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      {supportedFeatures().changeRetention ? (\n        <Field\n          label=\"History time span\"\n          description={`Select the period of time for which Grafana will save your query history. Up to ${MAX_HISTORY_ITEMS} entries will be stored.`}\n        >\n          <div className={styles.input}>\n            <Select value={selectedOption} options={retentionPeriodOptions} onChange={onChangeRetentionPeriod}></Select>\n          </div>\n        </Field>\n      ) : (\n        <Alert severity=\"info\" title=\"History time span\">\n          Grafana will keep entries up to {selectedOption?.label}. Starred entries won&apos;t be deleted.\n        </Alert>\n      )}\n      <InlineField\n        label=\"Change the default active tab from “Query history” to “Starred”\"\n        className={styles.spaceBetween}\n      >\n        <InlineSwitch\n          id=\"explore-query-history-settings-default-active-tab\"\n          value={starredTabAsFirstTab}\n          onChange={toggleStarredTabAsFirstTab}\n        />\n      </InlineField>\n      {supportedFeatures().onlyActiveDataSource && (\n        <InlineField\n          label=\"Only show queries for data source currently active in Explore\"\n          className={styles.spaceBetween}\n        >\n          <InlineSwitch\n            id=\"explore-query-history-settings-data-source-behavior\"\n            value={activeDatasourceOnly}\n            onChange={toggleactiveDatasourceOnly}\n          />\n        </InlineField>\n      )}\n      {supportedFeatures().clearHistory && (\n        <div>\n          <div className={styles.bold}>Clear query history</div>\n          <div className={styles.bottomMargin}>Delete all of your query history, permanently.</div>\n          <Button variant=\"destructive\" onClick={onDelete}>\n            Clear query history\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { useStyles2, Select, MultiSelect, FilterInput, Button } from '@grafana/ui';\nimport {\n  createDatasourcesList,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface RichHistoryStarredTabProps {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  activeDatasourceInstance: string;\n  updateFilters: (filtersToUpdate: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  richHistorySettings: RichHistorySettings;\n  exploreId: string;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing(3)};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.fontWeightLight};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      a {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-left: ${theme.spacing(0.25)};\n      }\n    `,\n  };\n};\n\nexport function RichHistoryStarredTab(props: RichHistoryStarredTabProps) {\n  const {\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    activeDatasourceInstance,\n    richHistorySettings,\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n    exploreId,\n  } = props;\n\n  const styles = useStyles2(getStyles);\n\n  const listOfDatasources = createDatasourcesList();\n\n  useEffect(() => {\n    const datasourceFilters =\n      richHistorySettings.activeDatasourceOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : [activeDatasourceInstance];\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: true,\n    };\n    updateFilters(filters);\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!richHistorySearchFilters) {\n    return <span>Loading...</span>;\n  }\n\n  const sortOrderOptions = getSortOrderOptions();\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourceOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder=\"Filter queries for data sources(s)\"\n              aria-label=\"Filter queries for data sources(s)\"\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              escapeRegex={false}\n              placeholder=\"Search queries\"\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n        {loading && <span>Loading results...</span>}\n        {!loading &&\n          queries.map((q) => {\n            return <RichHistoryCard query={q} key={q.id} exploreId={exploreId} />;\n          })}\n        {queries.length && queries.length !== totalQueries ? (\n          <div>\n            Showing {queries.length} of {totalQueries} <Button onClick={loadMoreRichHistory}>Load more</Button>\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled ? 'The history is local to your browser and is not shared with others.' : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { debounce } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Themeable2, TabbedContainer, TabConfig, withTheme2 } from '@grafana/ui';\nimport { SortOrder, RichHistorySearchFilters, RichHistorySettings } from 'app/core/utils/richHistory';\nimport { RichHistoryQuery } from 'app/types/explore';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\n\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistorySettingsTab } from './RichHistorySettingsTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport enum Tabs {\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\nexport const getSortOrderOptions = () =>\n  [\n    { label: 'Newest first', value: SortOrder.Descending },\n    { label: 'Oldest first', value: SortOrder.Ascending },\n    { label: 'Data source A-Z', value: SortOrder.DatasourceAZ },\n    { label: 'Data source Z-A', value: SortOrder.DatasourceZA },\n  ].filter((option) => supportedFeatures().availableFilters.includes(option.value));\n\nexport interface RichHistoryProps extends Themeable2 {\n  richHistory: RichHistoryQuery[];\n  richHistoryTotal?: number;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  updateHistorySettings: (settings: RichHistorySettings) => void;\n  updateHistorySearchFilters: (exploreId: string, filters: RichHistorySearchFilters) => void;\n  loadRichHistory: (exploreId: string) => void;\n  loadMoreRichHistory: (exploreId: string) => void;\n  clearRichHistoryResults: (exploreId: string) => void;\n  deleteRichHistory: () => void;\n  activeDatasourceInstance: string;\n  firstTab: Tabs;\n  exploreId: string;\n  height: number;\n  onClose: () => void;\n}\n\ntype RichHistoryState = {\n  loading: boolean;\n};\n\nclass UnThemedRichHistory extends PureComponent<RichHistoryProps> {\n  state: RichHistoryState = {\n    loading: false,\n  };\n\n  updateSettings = (settingsToUpdate: Partial<RichHistorySettings>) => {\n    this.props.updateHistorySettings({ ...this.props.richHistorySettings, ...settingsToUpdate });\n  };\n\n  updateFilters = (filtersToUpdate?: Partial<RichHistorySearchFilters>) => {\n    const filters = {\n      ...this.props.richHistorySearchFilters!,\n      ...filtersToUpdate,\n      page: 1, // always load fresh results when updating filters\n    };\n    this.props.updateHistorySearchFilters(this.props.exploreId, filters);\n    this.loadRichHistory();\n  };\n\n  clearResults = () => {\n    this.props.clearRichHistoryResults(this.props.exploreId);\n  };\n\n  loadRichHistory = debounce(() => {\n    this.props.loadRichHistory(this.props.exploreId);\n    this.setState({\n      loading: true,\n    });\n  }, 300);\n\n  onChangeRetentionPeriod = (retentionPeriod: SelectableValue<number>) => {\n    if (retentionPeriod.value !== undefined) {\n      this.updateSettings({ retentionPeriod: retentionPeriod.value });\n    }\n  };\n\n  toggleStarredTabAsFirstTab = () =>\n    this.updateSettings({ starredTabAsFirstTab: !this.props.richHistorySettings.starredTabAsFirstTab });\n\n  toggleActiveDatasourceOnly = () =>\n    this.updateSettings({ activeDatasourceOnly: !this.props.richHistorySettings.activeDatasourceOnly });\n\n  componentDidUpdate(prevProps: Readonly<RichHistoryProps>) {\n    if (prevProps.richHistory !== this.props.richHistory) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      richHistory,\n      richHistoryTotal,\n      height,\n      exploreId,\n      deleteRichHistory,\n      onClose,\n      firstTab,\n      activeDatasourceInstance,\n    } = this.props;\n    const { loading } = this.state;\n\n    const QueriesTab: TabConfig = {\n      label: 'Query history',\n      value: Tabs.RichHistory,\n      content: (\n        <RichHistoryQueriesTab\n          queries={richHistory}\n          totalQueries={richHistoryTotal || 0}\n          loading={loading}\n          updateFilters={this.updateFilters}\n          clearRichHistoryResults={() => this.props.clearRichHistoryResults(this.props.exploreId)}\n          loadMoreRichHistory={() => this.props.loadMoreRichHistory(this.props.exploreId)}\n          activeDatasourceInstance={activeDatasourceInstance}\n          richHistorySettings={this.props.richHistorySettings}\n          richHistorySearchFilters={this.props.richHistorySearchFilters}\n          exploreId={exploreId}\n          height={height}\n        />\n      ),\n      icon: 'history',\n    };\n\n    const StarredTab: TabConfig = {\n      label: 'Starred',\n      value: Tabs.Starred,\n      content: (\n        <RichHistoryStarredTab\n          queries={richHistory}\n          totalQueries={richHistoryTotal || 0}\n          loading={loading}\n          activeDatasourceInstance={activeDatasourceInstance}\n          updateFilters={this.updateFilters}\n          clearRichHistoryResults={() => this.props.clearRichHistoryResults(this.props.exploreId)}\n          loadMoreRichHistory={() => this.props.loadMoreRichHistory(this.props.exploreId)}\n          richHistorySettings={this.props.richHistorySettings}\n          richHistorySearchFilters={this.props.richHistorySearchFilters}\n          exploreId={exploreId}\n        />\n      ),\n      icon: 'star',\n    };\n\n    const SettingsTab: TabConfig = {\n      label: 'Settings',\n      value: Tabs.Settings,\n      content: (\n        <RichHistorySettingsTab\n          retentionPeriod={this.props.richHistorySettings.retentionPeriod}\n          starredTabAsFirstTab={this.props.richHistorySettings.starredTabAsFirstTab}\n          activeDatasourceOnly={this.props.richHistorySettings.activeDatasourceOnly}\n          onChangeRetentionPeriod={this.onChangeRetentionPeriod}\n          toggleStarredTabAsFirstTab={this.toggleStarredTabAsFirstTab}\n          toggleactiveDatasourceOnly={this.toggleActiveDatasourceOnly}\n          deleteRichHistory={deleteRichHistory}\n        />\n      ),\n      icon: 'sliders-v-alt',\n    };\n\n    let tabs = [QueriesTab, StarredTab, SettingsTab];\n    return (\n      <TabbedContainer tabs={tabs} onClose={onClose} defaultTab={firstTab} closeIconTooltip=\"Close query history\" />\n    );\n  }\n}\n\nexport const RichHistory = withTheme2(UnThemedRichHistory);\n","// Libraries\nimport React, { useEffect, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { useTheme2 } from '@grafana/ui';\n// Types\nimport { ExploreItemState, StoreState } from 'app/types';\n\n// Components, enums\nimport { ExploreDrawer } from '../ExploreDrawer';\nimport {\n  deleteRichHistory,\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n} from '../state/history';\n\nimport { RichHistory, Tabs } from './RichHistory';\n\n//Actions\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const richHistorySearchFilters = item.richHistorySearchFilters;\n  const richHistorySettings = explore.richHistorySettings;\n  const { datasourceInstance } = item;\n  const firstTab = richHistorySettings?.starredTabAsFirstTab ? Tabs.Starred : Tabs.RichHistory;\n  const { richHistory, richHistoryTotal } = item;\n  return {\n    richHistory,\n    richHistoryTotal,\n    firstTab,\n    activeDatasourceInstance: datasourceInstance!.name,\n    richHistorySettings,\n    richHistorySearchFilters,\n  };\n}\n\nconst mapDispatchToProps = {\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n  deleteRichHistory,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  width: number;\n  exploreId: string;\n  onClose: () => void;\n}\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nexport function RichHistoryContainer(props: Props) {\n  const theme = useTheme2();\n  const [height, setHeight] = useState(theme.components.horizontalDrawer.defaultHeight);\n\n  const {\n    richHistory,\n    richHistoryTotal,\n    width,\n    firstTab,\n    activeDatasourceInstance,\n    exploreId,\n    deleteRichHistory,\n    initRichHistory,\n    loadRichHistory,\n    loadMoreRichHistory,\n    clearRichHistoryResults,\n    richHistorySettings,\n    updateHistorySettings,\n    richHistorySearchFilters,\n    updateHistorySearchFilters,\n    onClose,\n  } = props;\n\n  useEffect(() => {\n    initRichHistory();\n    reportInteraction('grafana_explore_query_history_opened', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  }, [initRichHistory]);\n\n  if (!richHistorySettings) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ExploreDrawer\n      width={width}\n      onResize={(_e, _dir, ref) => {\n        setHeight(Number(ref.style.height.slice(0, -2)));\n      }}\n    >\n      <RichHistory\n        richHistory={richHistory}\n        richHistoryTotal={richHistoryTotal}\n        firstTab={firstTab}\n        activeDatasourceInstance={activeDatasourceInstance}\n        exploreId={exploreId}\n        onClose={onClose}\n        height={height}\n        deleteRichHistory={deleteRichHistory}\n        richHistorySettings={richHistorySettings}\n        richHistorySearchFilters={richHistorySearchFilters}\n        updateHistorySettings={updateHistorySettings}\n        updateHistorySearchFilters={updateHistorySearchFilters}\n        loadRichHistory={loadRichHistory}\n        loadMoreRichHistory={loadMoreRichHistory}\n        clearRichHistoryResults={clearRichHistoryResults}\n      />\n    </ExploreDrawer>\n  );\n}\n\nexport default connector(RichHistoryContainer);\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Components } from '@grafana/e2e-selectors';\nimport { ToolbarButton, useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  addQueryRowButtonDisabled?: boolean;\n  addQueryRowButtonHidden?: boolean;\n  richHistoryRowButtonHidden?: boolean;\n  richHistoryButtonActive?: boolean;\n  queryInspectorButtonActive?: boolean;\n\n  onClickAddQueryRowButton: () => void;\n  onClickRichHistoryButton: () => void;\n  onClickQueryInspectorButton: () => void;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    containerMargin: css`\n      display: flex;\n      flex-wrap: wrap;\n      gap: ${theme.spacing(1)};\n      margin-top: ${theme.spacing(2)};\n    `,\n  };\n};\n\nexport function SecondaryActions(props: Props) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return (\n    <div className={styles.containerMargin}>\n      {!props.addQueryRowButtonHidden && (\n        <ToolbarButton\n          variant=\"canvas\"\n          aria-label=\"Add query\"\n          onClick={props.onClickAddQueryRowButton}\n          disabled={props.addQueryRowButtonDisabled}\n          icon=\"plus\"\n        >\n          Add query\n        </ToolbarButton>\n      )}\n      {!props.richHistoryRowButtonHidden && (\n        <ToolbarButton\n          variant={props.richHistoryButtonActive ? 'active' : 'canvas'}\n          aria-label=\"Query history\"\n          onClick={props.onClickRichHistoryButton}\n          data-testid={Components.QueryTab.queryHistoryButton}\n          icon=\"history\"\n        >\n          Query history\n        </ToolbarButton>\n      )}\n      <ToolbarButton\n        variant={props.queryInspectorButtonActive ? 'active' : 'canvas'}\n        aria-label=\"Query inspector\"\n        onClick={props.onClickQueryInspectorButton}\n        icon=\"info-circle\"\n      >\n        Query inspector\n      </ToolbarButton>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { applyFieldOverrides, TimeZone, SplitOpen, DataFrame, LoadingState, FieldType } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { Table, AdHocFilterItem, PanelChrome } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport { t } from 'app/core/internationalization';\nimport {\n  hasDeprecatedParentRowIndex,\n  migrateFromParentRowIndexToNestedFrames,\n} from 'app/plugins/panel/table/migrations';\nimport { StoreState } from 'app/types';\nimport { ExploreItemState } from 'app/types/explore';\n\nimport { MetaInfoText } from '../MetaInfoText';\nimport { selectIsWaitingForData } from '../state/query';\nimport { exploreDataLinkPostProcessorFactory } from '../utils/links';\n\ninterface TableContainerProps {\n  ariaLabel?: string;\n  exploreId: string;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: AdHocFilterItem) => void;\n  splitOpenFn: SplitOpen;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: TableContainerProps) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore.panes[exploreId]!;\n  const { tableResult, range } = item;\n  const loadingInState = selectIsWaitingForData(exploreId);\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, tableResult, range };\n}\n\nconst connector = connect(mapStateToProps, {});\n\ntype Props = TableContainerProps & ConnectedProps<typeof connector>;\n\nexport class TableContainer extends PureComponent<Props> {\n  hasSubFrames = (data: DataFrame) => data.fields.some((f) => f.type === FieldType.nestedFrames);\n\n  getTableHeight(rowCount: number, hasSubFrames: boolean) {\n    if (rowCount === 0) {\n      return 200;\n    }\n    // tries to estimate table height, with a min of 300 and a max of 600\n    // if there are multiple tables, there is no min\n    return Math.min(600, Math.max(rowCount * 36, hasSubFrames ? 300 : 0) + 40 + 46);\n  }\n\n  getTableTitle(dataFrames: DataFrame[] | null, data: DataFrame, i: number) {\n    let name = data.name;\n    if (!name && (dataFrames?.length ?? 0) > 1) {\n      name = data.refId || `${i}`;\n    }\n\n    return name ? t('explore.table.title-with-name', 'Table - {{name}}', { name }) : t('explore.table.title', 'Table');\n  }\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpenFn, range, ariaLabel, timeZone } = this.props;\n\n    let dataFrames = hasDeprecatedParentRowIndex(tableResult)\n      ? migrateFromParentRowIndexToNestedFrames(tableResult)\n      : tableResult;\n    const dataLinkPostProcessor = exploreDataLinkPostProcessorFactory(splitOpenFn, range);\n\n    if (dataFrames?.length) {\n      dataFrames = applyFieldOverrides({\n        data: dataFrames,\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n        dataLinkPostProcessor,\n      });\n    }\n\n    const frames = dataFrames?.filter(\n      (frame: DataFrame | undefined): frame is DataFrame => !!frame && frame.length !== 0\n    );\n\n    return (\n      <>\n        {frames && frames.length === 0 && (\n          <PanelChrome title={t('explore.table.title', 'Table')} width={width} height={200}>\n            {() => <MetaInfoText metaItems={[{ value: t('explore.table.no-data', '0 series returned') }]} />}\n          </PanelChrome>\n        )}\n        {frames &&\n          frames.length > 0 &&\n          frames.map((data, i) => (\n            <PanelChrome\n              key={data.refId || `table-${i}`}\n              title={this.getTableTitle(dataFrames, data, i)}\n              width={width}\n              height={this.getTableHeight(data.length, this.hasSubFrames(data))}\n              loadingState={loading ? LoadingState.Loading : undefined}\n            >\n              {(innerWidth, innerHeight) => (\n                <Table\n                  ariaLabel={ariaLabel}\n                  data={data}\n                  width={innerWidth}\n                  height={innerHeight}\n                  onCellFilterAdded={onCellFilterAdded}\n                />\n              )}\n            </PanelChrome>\n          ))}\n      </>\n    );\n  }\n}\n\nexport default connector(TableContainer);\n","import React, { RefObject, useMemo } from 'react';\n\nimport { DataFrame, SplitOpen, PanelData } from '@grafana/data';\nimport { PanelChrome } from '@grafana/ui/src/components/PanelChrome/PanelChrome';\nimport { StoreState, useSelector } from 'app/types';\n\nimport { TraceView } from './TraceView';\nimport { TopOfViewRefType } from './components/TraceTimelineViewer/VirtualizedTraceView';\nimport { transformDataFrames } from './utils/transform';\n\ninterface Props {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: string;\n  scrollElement?: Element;\n  queryResponse: PanelData;\n  topOfViewRef: RefObject<HTMLDivElement>;\n}\n\nexport function TraceViewContainer(props: Props) {\n  // At this point we only show single trace\n  const frame = props.dataFrames[0];\n  const { dataFrames, splitOpenFn, exploreId, scrollElement, topOfViewRef, queryResponse } = props;\n  const traceProp = useMemo(() => transformDataFrames(frame), [frame]);\n  const datasource = useSelector(\n    (state: StoreState) => state.explore.panes[props.exploreId]?.datasourceInstance ?? undefined\n  );\n\n  if (!traceProp) {\n    return null;\n  }\n\n  return (\n    <PanelChrome padding=\"none\" title=\"Trace\">\n      <TraceView\n        exploreId={exploreId}\n        dataFrames={dataFrames}\n        splitOpenFn={splitOpenFn}\n        scrollElement={scrollElement}\n        traceProp={traceProp}\n        queryResponse={queryResponse}\n        datasource={datasource}\n        topOfViewRef={topOfViewRef}\n        topOfViewRefType={TopOfViewRefType.Explore}\n      />\n    </PanelChrome>\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport { get, groupBy } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport React, { createRef } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport {\n  AbsoluteTimeRange,\n  EventBus,\n  GrafanaTheme2,\n  hasToggleableQueryFiltersSupport,\n  LoadingState,\n  QueryFixAction,\n  RawTimeRange,\n  SplitOpenOptions,\n  SupplementaryQueryType,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { config, getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { DataQuery } from '@grafana/schema';\nimport {\n  AdHocFilterItem,\n  CustomScrollbar,\n  ErrorBoundaryAlert,\n  PanelContainer,\n  Themeable2,\n  withTheme2,\n} from '@grafana/ui';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR } from '@grafana/ui/src/components/Table/types';\nimport { supportedFeatures } from 'app/core/history/richHistoryStorageProvider';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { getNodeGraphDataFrames } from 'app/plugins/panel/nodeGraph/utils';\nimport { StoreState } from 'app/types';\n\nimport { getTimeZone } from '../profile/state/selectors';\n\nimport { ContentOutline } from './ContentOutline/ContentOutline';\nimport { ContentOutlineContextProvider } from './ContentOutline/ContentOutlineContext';\nimport { ContentOutlineItem } from './ContentOutline/ContentOutlineItem';\nimport { CorrelationHelper } from './CorrelationHelper';\nimport { CustomContainer } from './CustomContainer';\nimport ExploreQueryInspector from './ExploreQueryInspector';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport { FlameGraphExploreContainer } from './FlameGraph/FlameGraphExploreContainer';\nimport { GraphContainer } from './Graph/GraphContainer';\nimport LogsContainer from './Logs/LogsContainer';\nimport { LogsSamplePanel } from './Logs/LogsSamplePanel';\nimport { NoData } from './NoData';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { NodeGraphContainer } from './NodeGraph/NodeGraphContainer';\nimport { QueryRows } from './QueryRows';\nimport RawPrometheusContainer from './RawPrometheus/RawPrometheusContainer';\nimport { ResponseErrorContainer } from './ResponseErrorContainer';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\nimport { SecondaryActions } from './SecondaryActions';\nimport TableContainer from './Table/TableContainer';\nimport { TraceViewContainer } from './TraceView/TraceViewContainer';\nimport { changeSize } from './state/explorePane';\nimport { splitOpen } from './state/main';\nimport {\n  addQueryRow,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  selectIsWaitingForData,\n  setQueries,\n  setSupplementaryQueryEnabled,\n} from './state/query';\nimport { isSplit } from './state/selectors';\nimport { updateTimeRange } from './state/time';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    exploreMain: css({\n      label: 'exploreMain',\n      // Is needed for some transition animations to work.\n      position: 'relative',\n      marginTop: '21px',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(1),\n    }),\n    queryContainer: css({\n      label: 'queryContainer',\n      padding: theme.spacing(1),\n    }),\n    exploreContainer: css({\n      label: 'exploreContainer',\n      display: 'flex',\n      flexDirection: 'column',\n      paddingRight: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n    }),\n    left: css({\n      marginBottom: theme.spacing(2),\n    }),\n    wrapper: css({\n      position: 'absolute',\n      top: 0,\n      left: theme.spacing(2),\n      right: 0,\n      bottom: 0,\n      display: 'flex',\n    }),\n  };\n};\n\nexport interface ExploreProps extends Themeable2 {\n  exploreId: string;\n  theme: GrafanaTheme2;\n  eventBus: EventBus;\n}\n\nenum ExploreDrawer {\n  RichHistory,\n  QueryInspector,\n}\n\ninterface ExploreState {\n  openDrawer?: ExploreDrawer;\n  contentOutlineVisible: boolean;\n}\n\nexport type Props = ExploreProps & ConnectedProps<typeof connector>;\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\n\nexport class Explore extends React.PureComponent<Props, ExploreState> {\n  scrollElement: HTMLDivElement | undefined;\n  topOfViewRef = createRef<HTMLDivElement>();\n  graphEventBus: EventBus;\n  logsEventBus: EventBus;\n  memoizedGetNodeGraphDataFrames = memoizeOne(getNodeGraphDataFrames);\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      openDrawer: undefined,\n      contentOutlineVisible: false,\n    };\n    this.graphEventBus = props.eventBus.newScopedBus('graph', { onlyLocal: false });\n    this.logsEventBus = props.eventBus.newScopedBus('logs', { onlyLocal: false });\n  }\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onCellFilterAdded = (filter: AdHocFilterItem) => {\n    const { value, key, operator } = filter;\n    if (operator === FILTER_FOR_OPERATOR) {\n      this.onClickFilterLabel(key, value);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      this.onClickFilterOutLabel(key, value);\n    }\n  };\n\n  onContentOutlineToogle = () => {\n    this.setState((state) => {\n      reportInteraction('explore_toolbar_contentoutline_clicked', {\n        item: 'outline',\n        type: state.contentOutlineVisible ? 'close' : 'open',\n      });\n      return {\n        contentOutlineVisible: !state.contentOutlineVisible,\n      };\n    });\n  };\n\n  /**\n   * Used by Logs details.\n   * Returns true if all queries have the filter, otherwise false.\n   * TODO: In the future, we would like to return active filters based the query that produced the log line.\n   * @alpha\n   */\n  isFilterLabelActive = async (key: string, value: string, refId?: string) => {\n    if (!config.featureToggles.toggleLabelsInLogsUI) {\n      return false;\n    }\n    const query = this.props.queries.find((q) => q.refId === refId);\n    if (!query) {\n      return false;\n    }\n    const ds = await getDataSourceSrv().get(query.datasource);\n    if (hasToggleableQueryFiltersSupport(ds) && ds.queryHasFilter(query, { key, value })) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Used by Logs details.\n   */\n  onClickFilterLabel = (key: string, value: string, refId?: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER', options: { key, value } }, refId);\n  };\n\n  /**\n   * Used by Logs details.\n   */\n  onClickFilterOutLabel = (key: string, value: string, refId?: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER_OUT', options: { key, value } }, refId);\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  /**\n   * Used by Logs details.\n   */\n  onModifyQueries = (action: QueryFixAction, refId?: string) => {\n    const modifier = async (query: DataQuery, modification: QueryFixAction) => {\n      // This gives Logs Details support to modify the query that produced the log line.\n      // If not present, all queries are modified.\n      if (refId && refId !== query.refId) {\n        return query;\n      }\n      const { datasource } = query;\n      if (datasource == null) {\n        return query;\n      }\n      const ds = await getDataSourceSrv().get(datasource);\n      if (hasToggleableQueryFiltersSupport(ds) && config.featureToggles.toggleLabelsInLogsUI) {\n        return ds.toggleQueryFilter(query, {\n          type: modification.type === 'ADD_FILTER' ? 'FILTER_FOR' : 'FILTER_OUT',\n          options: modification.options ?? {},\n        });\n      }\n      if (ds.modifyQuery) {\n        return ds.modifyQuery(query, modification);\n      } else {\n        return query;\n      }\n    };\n    this.props.modifyQueries(this.props.exploreId, action, modifier);\n  };\n\n  onResize = (size: { height: number; width: number }) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  toggleShowRichHistory = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.RichHistory ? undefined : ExploreDrawer.RichHistory,\n      };\n    });\n  };\n\n  toggleShowQueryInspector = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.QueryInspector ? undefined : ExploreDrawer.QueryInspector,\n      };\n    });\n  };\n\n  onSplitOpen = (panelType: string) => {\n    return async (options?: SplitOpenOptions) => {\n      this.props.splitOpen(options);\n      if (options && this.props.datasourceInstance) {\n        const target = (await getDataSourceSrv().get(options.datasourceUid)).type;\n        const source =\n          this.props.datasourceInstance.uid === MIXED_DATASOURCE_NAME\n            ? get(this.props.queries, '0.datasource.type')\n            : this.props.datasourceInstance.type;\n        const tracking = {\n          origin: 'panel',\n          panelType,\n          source,\n          target,\n          exploreId: this.props.exploreId,\n        };\n        reportInteraction('grafana_explore_split_view_opened', tracking);\n      }\n    };\n  };\n\n  renderEmptyState(exploreContainerStyles: string) {\n    return (\n      <div className={cx(exploreContainerStyles)}>\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  }\n\n  renderNoData() {\n    return <NoData />;\n  }\n\n  renderCustom(width: number) {\n    const { timeZone, queryResponse, absoluteRange, eventBus } = this.props;\n\n    const groupedByPlugin = groupBy(queryResponse?.customFrames, 'meta.preferredVisualisationPluginId');\n\n    return Object.entries(groupedByPlugin).map(([pluginId, frames], index) => {\n      return (\n        <ContentOutlineItem title={pluginId} icon=\"plug\" key={index}>\n          <CustomContainer\n            key={index}\n            timeZone={timeZone}\n            pluginId={pluginId}\n            frames={frames}\n            state={queryResponse.state}\n            absoluteRange={absoluteRange}\n            height={400}\n            width={width}\n            splitOpenFn={this.onSplitOpen(pluginId)}\n            eventBus={eventBus}\n          />\n        </ContentOutlineItem>\n      );\n    });\n  }\n\n  renderGraphPanel(width: number) {\n    const { graphResult, absoluteRange, timeZone, queryResponse, showFlameGraph } = this.props;\n\n    return (\n      <ContentOutlineItem title=\"Graph\" icon=\"graph-bar\">\n        <GraphContainer\n          data={graphResult!}\n          height={showFlameGraph ? 180 : 400}\n          width={width}\n          absoluteRange={absoluteRange}\n          timeZone={timeZone}\n          onChangeTime={this.onUpdateTimeRange}\n          annotations={queryResponse.annotations}\n          splitOpenFn={this.onSplitOpen('graph')}\n          loadingState={queryResponse.state}\n          eventBus={this.graphEventBus}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderTablePanel(width: number) {\n    const { exploreId, timeZone } = this.props;\n    return (\n      <ContentOutlineItem title=\"Table\" icon=\"table\">\n        <TableContainer\n          ariaLabel={selectors.pages.Explore.General.table}\n          width={width}\n          exploreId={exploreId}\n          onCellFilterAdded={this.onCellFilterAdded}\n          timeZone={timeZone}\n          splitOpenFn={this.onSplitOpen('table')}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderRawPrometheus(width: number) {\n    const { exploreId, datasourceInstance, timeZone } = this.props;\n    return (\n      <ContentOutlineItem title=\"Raw Prometheus\" icon=\"gf-prometheus\">\n        <RawPrometheusContainer\n          showRawPrometheus={true}\n          ariaLabel={selectors.pages.Explore.General.table}\n          width={width}\n          exploreId={exploreId}\n          onCellFilterAdded={datasourceInstance?.modifyQuery ? this.onCellFilterAdded : undefined}\n          timeZone={timeZone}\n          splitOpenFn={this.onSplitOpen('table')}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderLogsPanel(width: number) {\n    const { exploreId, syncedTimes, theme, queryResponse } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    // Need to make ContentOutlineItem a flex container so the gap works\n    const logsContentOutlineWrapper = css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(1),\n    });\n    return (\n      <ContentOutlineItem title=\"Logs\" icon=\"gf-logs\" className={logsContentOutlineWrapper}>\n        <LogsContainer\n          exploreId={exploreId}\n          loadingState={queryResponse.state}\n          syncedTimes={syncedTimes}\n          width={width - spacing}\n          onClickFilterLabel={this.onClickFilterLabel}\n          onClickFilterOutLabel={this.onClickFilterOutLabel}\n          onStartScanning={this.onStartScanning}\n          onStopScanning={this.onStopScanning}\n          eventBus={this.logsEventBus}\n          splitOpenFn={this.onSplitOpen('logs')}\n          scrollElement={this.scrollElement}\n          isFilterLabelActive={this.isFilterLabelActive}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderLogsSamplePanel() {\n    const { logsSample, timeZone, setSupplementaryQueryEnabled, exploreId, datasourceInstance, queries } = this.props;\n\n    return (\n      <ContentOutlineItem title=\"Logs Sample\" icon=\"gf-logs\">\n        <LogsSamplePanel\n          queryResponse={logsSample.data}\n          timeZone={timeZone}\n          enabled={logsSample.enabled}\n          queries={queries}\n          datasourceInstance={datasourceInstance}\n          splitOpen={this.onSplitOpen('logsSample')}\n          setLogsSampleEnabled={(enabled: boolean) =>\n            setSupplementaryQueryEnabled(exploreId, enabled, SupplementaryQueryType.LogsSample)\n          }\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderNodeGraphPanel() {\n    const { exploreId, showTrace, queryResponse, datasourceInstance } = this.props;\n    const datasourceType = datasourceInstance ? datasourceInstance?.type : 'unknown';\n\n    return (\n      <ContentOutlineItem title=\"Node Graph\" icon=\"code-branch\">\n        <NodeGraphContainer\n          dataFrames={this.memoizedGetNodeGraphDataFrames(queryResponse.series)}\n          exploreId={exploreId}\n          withTraceView={showTrace}\n          datasourceType={datasourceType}\n          splitOpenFn={this.onSplitOpen('nodeGraph')}\n        />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderFlameGraphPanel() {\n    const { queryResponse } = this.props;\n    return (\n      <ContentOutlineItem title=\"Flame Graph\" icon=\"fire\">\n        <FlameGraphExploreContainer dataFrames={queryResponse.flameGraphFrames} />\n      </ContentOutlineItem>\n    );\n  }\n\n  renderTraceViewPanel() {\n    const { queryResponse, exploreId } = this.props;\n    const dataFrames = queryResponse.series.filter((series) => series.meta?.preferredVisualisationType === 'trace');\n\n    return (\n      // If there is no data (like 404) we show a separate error so no need to show anything here\n      dataFrames.length && (\n        <ContentOutlineItem title=\"Traces\" icon=\"file-alt\">\n          <TraceViewContainer\n            exploreId={exploreId}\n            dataFrames={dataFrames}\n            splitOpenFn={this.onSplitOpen('traceView')}\n            scrollElement={this.scrollElement}\n            queryResponse={queryResponse}\n            topOfViewRef={this.topOfViewRef}\n          />\n        </ContentOutlineItem>\n      )\n    );\n  }\n\n  render() {\n    const {\n      datasourceInstance,\n      exploreId,\n      graphResult,\n      queryResponse,\n      isLive,\n      theme,\n      showMetrics,\n      showTable,\n      showRawPrometheus,\n      showLogs,\n      showTrace,\n      showCustom,\n      showNodeGraph,\n      showFlameGraph,\n      timeZone,\n      showLogsSample,\n      correlationEditorDetails,\n      correlationEditorHelperData,\n    } = this.props;\n    const { openDrawer, contentOutlineVisible } = this.state;\n    const styles = getStyles(theme);\n    const showPanels = queryResponse && queryResponse.state !== LoadingState.NotStarted;\n    const showRichHistory = openDrawer === ExploreDrawer.RichHistory;\n    const richHistoryRowButtonHidden = !supportedFeatures().queryHistoryAvailable;\n    const showQueryInspector = openDrawer === ExploreDrawer.QueryInspector;\n    const showNoData =\n      queryResponse.state === LoadingState.Done &&\n      [\n        queryResponse.logsFrames,\n        queryResponse.graphFrames,\n        queryResponse.nodeGraphFrames,\n        queryResponse.flameGraphFrames,\n        queryResponse.tableFrames,\n        queryResponse.rawPrometheusFrames,\n        queryResponse.traceFrames,\n        queryResponse.customFrames,\n      ].every((e) => e.length === 0);\n\n    let correlationsBox = undefined;\n    const isCorrelationsEditorMode = correlationEditorDetails?.editorMode;\n    const showCorrelationHelper = Boolean(isCorrelationsEditorMode || correlationEditorDetails?.dirty);\n    if (showCorrelationHelper && correlationEditorHelperData !== undefined) {\n      correlationsBox = <CorrelationHelper correlations={correlationEditorHelperData} />;\n    }\n\n    return (\n      <ContentOutlineContextProvider>\n        <ExploreToolbar\n          exploreId={exploreId}\n          onChangeTime={this.onChangeTime}\n          onContentOutlineToogle={this.onContentOutlineToogle}\n          isContentOutlineOpen={contentOutlineVisible}\n        />\n        <div\n          style={{\n            position: 'relative',\n            height: '100%',\n            paddingLeft: theme.spacing(2),\n          }}\n        >\n          <div className={styles.wrapper}>\n            {contentOutlineVisible && (\n              <div className={styles.left}>\n                <ContentOutline scroller={this.scrollElement} panelId={`content-outline-container-${exploreId}`} />\n              </div>\n            )}\n            <CustomScrollbar\n              testId={selectors.pages.Explore.General.scrollView}\n              scrollRefCallback={(scrollElement) => (this.scrollElement = scrollElement || undefined)}\n              hideHorizontalTrack\n            >\n              <div className={styles.exploreContainer} ref={this.topOfViewRef}>\n                {datasourceInstance ? (\n                  <>\n                    <ContentOutlineItem title=\"Queries\" icon=\"arrow\">\n                      <PanelContainer className={styles.queryContainer}>\n                        {correlationsBox}\n                        <QueryRows exploreId={exploreId} />\n                        <SecondaryActions\n                          // do not allow people to add queries with potentially different datasources in correlations editor mode\n                          addQueryRowButtonDisabled={\n                            isLive || (isCorrelationsEditorMode && datasourceInstance.meta.mixed)\n                          }\n                          // We cannot show multiple traces at the same time right now so we do not show add query button.\n                          //TODO:unification\n                          addQueryRowButtonHidden={false}\n                          richHistoryRowButtonHidden={richHistoryRowButtonHidden}\n                          richHistoryButtonActive={showRichHistory}\n                          queryInspectorButtonActive={showQueryInspector}\n                          onClickAddQueryRowButton={this.onClickAddQueryRowButton}\n                          onClickRichHistoryButton={this.toggleShowRichHistory}\n                          onClickQueryInspectorButton={this.toggleShowQueryInspector}\n                        />\n                        <ResponseErrorContainer exploreId={exploreId} />\n                      </PanelContainer>\n                    </ContentOutlineItem>\n                    <AutoSizer onResize={this.onResize} disableHeight>\n                      {({ width }) => {\n                        if (width === 0) {\n                          return null;\n                        }\n\n                        return (\n                          <main className={cx(styles.exploreMain)} style={{ width }}>\n                            <ErrorBoundaryAlert>\n                              {showPanels && (\n                                <>\n                                  {showMetrics && graphResult && (\n                                    <ErrorBoundaryAlert>{this.renderGraphPanel(width)}</ErrorBoundaryAlert>\n                                  )}\n                                  {showRawPrometheus && (\n                                    <ErrorBoundaryAlert>{this.renderRawPrometheus(width)}</ErrorBoundaryAlert>\n                                  )}\n                                  {showTable && <ErrorBoundaryAlert>{this.renderTablePanel(width)}</ErrorBoundaryAlert>}\n                                  {showLogs && <ErrorBoundaryAlert>{this.renderLogsPanel(width)}</ErrorBoundaryAlert>}\n                                  {showNodeGraph && (\n                                    <ErrorBoundaryAlert>{this.renderNodeGraphPanel()}</ErrorBoundaryAlert>\n                                  )}\n                                  {showFlameGraph && (\n                                    <ErrorBoundaryAlert>{this.renderFlameGraphPanel()}</ErrorBoundaryAlert>\n                                  )}\n                                  {showTrace && <ErrorBoundaryAlert>{this.renderTraceViewPanel()}</ErrorBoundaryAlert>}\n                                  {showLogsSample && (\n                                    <ErrorBoundaryAlert>{this.renderLogsSamplePanel()}</ErrorBoundaryAlert>\n                                  )}\n                                  {showCustom && <ErrorBoundaryAlert>{this.renderCustom(width)}</ErrorBoundaryAlert>}\n                                  {showNoData && <ErrorBoundaryAlert>{this.renderNoData()}</ErrorBoundaryAlert>}\n                                </>\n                              )}\n                              {showRichHistory && (\n                                <RichHistoryContainer\n                                  width={width}\n                                  exploreId={exploreId}\n                                  onClose={this.toggleShowRichHistory}\n                                />\n                              )}\n                              {showQueryInspector && (\n                                <ExploreQueryInspector\n                                  exploreId={exploreId}\n                                  width={width}\n                                  onClose={this.toggleShowQueryInspector}\n                                  timeZone={timeZone}\n                                />\n                              )}\n                            </ErrorBoundaryAlert>\n                          </main>\n                        );\n                      }}\n                    </AutoSizer>\n                  </>\n                ) : (\n                  this.renderEmptyState(styles.exploreContainer)\n                )}\n              </div>\n            </CustomScrollbar>\n          </div>\n        </div>\n      </ContentOutlineContextProvider>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps) {\n  const explore = state.explore;\n  const { syncedTimes } = explore;\n  const item = explore.panes[exploreId]!;\n\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    tableResult,\n    logsResult,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showCustom,\n    absoluteRange,\n    queryResponse,\n    showNodeGraph,\n    showFlameGraph,\n    showRawPrometheus,\n    supplementaryQueries,\n    correlationEditorHelperData,\n  } = item;\n\n  const loading = selectIsWaitingForData(exploreId)(state);\n  const logsSample = supplementaryQueries[SupplementaryQueryType.LogsSample];\n  // We want to show logs sample only if there are no log results and if there is already graph or table result\n  const showLogsSample = !!(logsSample.dataProvider !== undefined && !logsResult && (graphResult || tableResult));\n\n  return {\n    datasourceInstance,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    logsResult: logsResult ?? undefined,\n    absoluteRange,\n    queryResponse,\n    syncedTimes,\n    timeZone,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showCustom,\n    showNodeGraph,\n    showRawPrometheus,\n    showFlameGraph,\n    splitted: isSplit(state),\n    loading,\n    logsSample,\n    showLogsSample,\n    correlationEditorHelperData,\n    correlationEditorDetails: explore.correlationEditorDetails,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeSize,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  addQueryRow,\n  splitOpen,\n  setSupplementaryQueryEnabled,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default withTheme2(connector(Explore));\n","import { css } from '@emotion/css';\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { EventBusSrv, GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { useStyles2, CustomScrollbar } from '@grafana/ui';\nimport { stopQueryState } from 'app/core/utils/explore';\nimport { StoreState, useSelector } from 'app/types';\n\nimport Explore from './Explore';\nimport { getExploreItemSelector } from './state/selectors';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    explore: css`\n      label: explorePaneContainer;\n      display: flex;\n      flex-direction: column;\n      min-width: 600px;\n      height: 100%;\n    `,\n  };\n};\n\ninterface Props {\n  exploreId: string;\n}\n\n/*\n  Connected components subscribe to the store before function components (using hooks) and can react to store changes. Thus, this connector function is called before the parent component (ExplorePage) is rerendered.\n  This means that child components' mapStateToProps will be executed with a zombie `exploreId` that is not present anymore in the store if the pane gets closed.\n  By connecting this component and returning the pane we workaround the zombie children issue here instead of modifying every children.\n  This is definitely not the ideal solution and we should in the future invest more time in exploring other approaches to better handle this scenario, potentially by refactoring panels to be function components \n  (therefore immune to this behaviour), or by forbidding them to access the store directly and instead pass them all the data they need via props or context.\n\n  You can read more about this issue here: https://react-redux.js.org/api/hooks#stale-props-and-zombie-children\n*/\nfunction ExplorePaneContainerUnconnected({ exploreId }: Props) {\n  useStopQueries(exploreId);\n  const styles = useStyles2(getStyles);\n  const eventBus = useRef(new EventBusSrv());\n  const ref = useRef(null);\n\n  useEffect(() => {\n    const bus = eventBus.current;\n    return () => bus.removeAllListeners();\n  }, []);\n\n  return (\n    <CustomScrollbar hideVerticalTrack>\n      <div className={styles.explore} ref={ref} data-testid={selectors.pages.Explore.General.container}>\n        <Explore exploreId={exploreId} eventBus={eventBus.current} />\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, props: Props) {\n  const pane = state.explore.panes[props.exploreId];\n\n  return { pane };\n}\n\nconst connector = connect(mapStateToProps);\n\nexport const ExplorePaneContainer = connector(ExplorePaneContainerUnconnected);\n\nfunction useStopQueries(exploreId: string) {\n  const paneSelector = useMemo(() => getExploreItemSelector(exploreId), [exploreId]);\n  const paneRef = useRef<ReturnType<typeof paneSelector>>();\n  paneRef.current = useSelector(paneSelector);\n\n  useEffect(() => {\n    return () => {\n      stopQueryState(paneRef.current?.querySubscription);\n    };\n  }, []);\n}\n","import { useEffect, useRef } from 'react';\n\nimport { NavModel } from '@grafana/data';\nimport { Branding } from 'app/core/components/Branding/Branding';\nimport { useNavModel } from 'app/core/hooks/useNavModel';\nimport { safeParseJson } from 'app/core/utils/explore';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { ExploreQueryParams } from 'app/types';\n\nimport { isFulfilled, hasKey } from './utils';\n\nexport function useExplorePageTitle(params: ExploreQueryParams) {\n  const navModel = useRef<NavModel>();\n  navModel.current = useNavModel('explore');\n  const dsService = useRef(getDatasourceSrv());\n\n  useEffect(() => {\n    if (!params.panes || typeof params.panes !== 'string') {\n      return;\n    }\n\n    Promise.allSettled(\n      Object.values(safeParseJson(params.panes)).map((pane) => {\n        if (\n          !pane ||\n          typeof pane !== 'object' ||\n          !hasKey('datasource', pane) ||\n          !pane.datasource ||\n          typeof pane.datasource !== 'string'\n        ) {\n          return Promise.reject();\n        }\n\n        return dsService.current.get(pane.datasource);\n      })\n    )\n      .then((results) => results.filter(isFulfilled).map((result) => result.value))\n      .then((datasources) => {\n        if (!navModel.current) {\n          return;\n        }\n\n        const names = datasources.map((ds) => ds.name);\n\n        if (names.length === 0) {\n          global.document.title = `${navModel.current.main.text} - ${Branding.AppTitle}`;\n          return;\n        }\n\n        global.document.title = `${navModel.current.main.text} - ${names.join(' | ')} - ${Branding.AppTitle}`;\n      });\n  }, [params.panes]);\n}\n","import { useEffect } from 'react';\nimport { Unsubscribable } from 'rxjs';\n\nimport { getAppEvents } from '@grafana/runtime';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\nimport { useDispatch } from 'app/types';\nimport { AbsoluteTimeEvent, ShiftTimeEvent, ZoomOutEvent } from 'app/types/events';\n\nimport { makeAbsoluteTime, shiftTime, zoomOut } from '../state/time';\n\nexport function useKeyboardShortcuts() {\n  const { keybindings } = useGrafana();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    keybindings.setupTimeRangeBindings(false);\n\n    const tearDown: Unsubscribable[] = [];\n\n    tearDown.push(\n      getAppEvents().subscribe(AbsoluteTimeEvent, () => {\n        dispatch(makeAbsoluteTime());\n      })\n    );\n\n    tearDown.push(\n      getAppEvents().subscribe(ShiftTimeEvent, (event) => {\n        dispatch(shiftTime(event.payload.direction));\n      })\n    );\n\n    tearDown.push(\n      getAppEvents().subscribe(ZoomOutEvent, (event) => {\n        dispatch(zoomOut(event.payload.scale));\n      })\n    );\n\n    return () => {\n      tearDown.forEach((u) => u.unsubscribe());\n    };\n  }, [dispatch, keybindings]);\n}\n","import { inRange } from 'lodash';\nimport { useState } from 'react';\nimport { useWindowSize } from 'react-use';\n\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { splitSizeUpdateAction } from '../state/main';\nimport { isSplit, selectPanesEntries } from '../state/selectors';\n\nexport const useSplitSizeUpdater = (minWidth: number) => {\n  const dispatch = useDispatch();\n  const { width: windowWidth } = useWindowSize();\n  const panes = useSelector(selectPanesEntries);\n  const hasSplit = useSelector(isSplit);\n  const [rightPaneWidthRatio, setRightPaneWidthRatio] = useState(0.5);\n\n  const exploreState = useSelector((state) => state.explore);\n\n  const updateSplitSize = (size: number) => {\n    const evenSplitWidth = windowWidth / 2;\n    const areBothSimilar = inRange(size, evenSplitWidth - 100, evenSplitWidth + 100);\n    if (areBothSimilar) {\n      dispatch(splitSizeUpdateAction({ largerExploreId: undefined }));\n    } else {\n      dispatch(\n        splitSizeUpdateAction({\n          largerExploreId: size > evenSplitWidth ? panes[1][0] : panes[0][0],\n        })\n      );\n    }\n\n    setRightPaneWidthRatio(size / windowWidth);\n  };\n\n  let widthCalc = 0;\n  if (hasSplit) {\n    if (!exploreState.evenSplitPanes && exploreState.maxedExploreId) {\n      widthCalc = exploreState.maxedExploreId === panes[1][0] ? windowWidth - minWidth : minWidth;\n    } else if (exploreState.evenSplitPanes) {\n      widthCalc = Math.floor(windowWidth / 2);\n    } else if (rightPaneWidthRatio !== undefined) {\n      widthCalc = windowWidth * rightPaneWidthRatio;\n    }\n  }\n\n  return { updateSplitSize, widthCalc };\n};\n","import { useEffect } from 'react';\n\nimport { useGrafana } from 'app/core/context/GrafanaContext';\n\n/**\n * timeSrv (which is used internally) on init reads `from` and `to` param from the URL and updates itself\n * using those value regardless of what is passed to the init method.\n * The updated value is then used by Explore to get the range for each pane.\n * This means that if `from` and `to` parameters are present in the URL,\n * it would be impossible to change the time range in Explore.\n * We are only doing this on mount for 2 reasons:\n * 1: Doing it on update means we'll enter a render loop.\n * 2: when parsing time in Explore (before feeding it to timeSrv) we make sure `from` is before `to` inside\n *    each pane state in order to not trigger un URL update from timeSrv.\n */\nexport function useTimeSrvFix() {\n  const { location } = useGrafana();\n\n  useEffect(() => {\n    const searchParams = location.getSearchObject();\n    if (searchParams.from || searchParams.to) {\n      location.partial({ from: undefined, to: undefined }, true);\n    }\n  }, [location]);\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { ErrorBoundaryAlert, useStyles2, useTheme2 } from '@grafana/ui';\nimport { SplitPaneWrapper } from 'app/core/components/SplitPaneWrapper/SplitPaneWrapper';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\nimport { useNavModel } from 'app/core/hooks/useNavModel';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { useSelector } from 'app/types';\nimport { ExploreQueryParams } from 'app/types/explore';\n\nimport { CorrelationEditorModeBar } from './CorrelationEditorModeBar';\nimport { ExploreActions } from './ExploreActions';\nimport { ExplorePaneContainer } from './ExplorePaneContainer';\nimport { useExplorePageTitle } from './hooks/useExplorePageTitle';\nimport { useKeyboardShortcuts } from './hooks/useKeyboardShortcuts';\nimport { useSplitSizeUpdater } from './hooks/useSplitSizeUpdater';\nimport { useStateSync } from './hooks/useStateSync';\nimport { useTimeSrvFix } from './hooks/useTimeSrvFix';\nimport { isSplit, selectCorrelationDetails, selectPanesEntries } from './state/selectors';\n\nconst MIN_PANE_WIDTH = 200;\n\nexport default function ExplorePage(props: GrafanaRouteComponentProps<{}, ExploreQueryParams>) {\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n  useTimeSrvFix();\n  useStateSync(props.queryParams);\n  // We want  to set the title according to the URL and not to the state because the URL itself may lag\n  // (due to how useStateSync above works) by a few milliseconds.\n  // When a URL is pushed to the history, the browser also saves the title of the page and\n  // if we were to update the URL on state change, the title would not match the URL.\n  // Ultimately the URL is the single source of truth from which state is derived, the page title is not different\n  useExplorePageTitle(props.queryParams);\n  const { chrome } = useGrafana();\n  const navModel = useNavModel('explore');\n  const { updateSplitSize, widthCalc } = useSplitSizeUpdater(MIN_PANE_WIDTH);\n\n  const panes = useSelector(selectPanesEntries);\n  const hasSplit = useSelector(isSplit);\n  const correlationDetails = useSelector(selectCorrelationDetails);\n  const showCorrelationEditorBar = config.featureToggles.correlations && (correlationDetails?.editorMode || false);\n\n  useEffect(() => {\n    //This is needed for breadcrumbs and topnav.\n    //We should probably abstract this out at some point\n    chrome.update({ sectionNav: navModel });\n  }, [chrome, navModel]);\n\n  useKeyboardShortcuts();\n\n  return (\n    <div\n      className={cx(styles.pageScrollbarWrapper, {\n        [styles.correlationsEditorIndicator]: showCorrelationEditorBar,\n      })}\n    >\n      <ExploreActions />\n      {showCorrelationEditorBar && <CorrelationEditorModeBar panes={panes} />}\n      <SplitPaneWrapper\n        splitOrientation=\"vertical\"\n        paneSize={widthCalc}\n        minSize={MIN_PANE_WIDTH}\n        maxSize={MIN_PANE_WIDTH * -1}\n        primary=\"second\"\n        splitVisible={hasSplit}\n        parentStyle={showCorrelationEditorBar ? { height: `calc(100% - ${theme.spacing(6)}` } : {}} // button = 4, padding = 1 x 2\n        paneStyle={{ overflow: 'auto', display: 'flex', flexDirection: 'column' }}\n        onDragFinished={(size) => size && updateSplitSize(size)}\n      >\n        {panes.map(([exploreId]) => {\n          return (\n            <ErrorBoundaryAlert key={exploreId} style=\"page\">\n              <ExplorePaneContainer exploreId={exploreId} />\n            </ErrorBoundaryAlert>\n          );\n        })}\n      </SplitPaneWrapper>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    pageScrollbarWrapper: css({\n      width: '100%',\n      flexGrow: 1,\n      minHeight: 0,\n      height: '100%',\n      position: 'relative',\n    }),\n    correlationsEditorIndicator: css({\n      borderLeft: `4px solid ${theme.colors.primary.main}`,\n      borderRight: `4px solid ${theme.colors.primary.main}`,\n      borderBottom: `4px solid ${theme.colors.primary.main}`,\n      overflow: 'scroll',\n    }),\n  };\n};\n","export enum InspectTab {\n  Data = 'data',\n  Meta = 'meta', // When result metadata exists\n  Error = 'error',\n  Stats = 'stats',\n  JSON = 'json',\n  Query = 'query',\n  Help = 'help', // get info required for support+debugging\n}\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n"],"names":["useBeforeUnload","enabled","message","handler","event","finalEnabled","CorrelationUnsavedChangesModal","onSave","onDiscard","onCancel","Modal","Button","CorrelationEditorModeBar","panes","dispatch","styles","getStyles","correlationDetails","showSavePrompt","setShowSavePrompt","useUnmount","pane","closePaneAndReset","exploreId","changeDatasourceAndReset","datasourceUid","saveCorrelation","skipPostConfirmAction","action","changeDatasourceUid","location","Tooltip","Icon","theme","contrastColor","lighterBackgroundColor","colorManipulator","darkerBackgroundColor","disabledColor","ExploreActions","actions","setActions","query","splitted","canWriteCorrelations","keys","exploreSection","actionsArr","hasMixed","config","ContentOutlineContext","ContentOutlineContextProvider","children","outlineItems","setOutlineItems","register","title","icon","ref","id","prevItems","a","b","diff","unregister","item","useContentOutlineContext","ctx","ContentOutlineItemButton","tooltip","className","rest","buttonStyles","body","renderIcon","ContentOutline","scroller","panelId","expanded","toggleExpanded","useToggle","scrollIntoView","buttonTitle","scrollValue","el","toggle","PanelContainer","CustomScrollbar","ContentOutlineItem","CorrelationHelper","correlations","watch","isOpen","setIsOpen","subscription","value","dirty","Alert","entry","Collapse","Field","Input","CustomContainer","width","height","timeZone","state","pluginId","frames","absoluteRange","splitOpenFn","eventBus","timeRange","plugin","panelContext","useExploreDataLinkPostProcessor","PanelContext","PanelChrome","innerWidth","innerHeight","PanelRenderer","__extends","extendStatics","d","p","__","__assign","t","s","i","n","rowSizeBase","colSizeBase","edgeBase","Resizer","_super","_this","e","DEFAULT_SIZE","clamp","min","max","snap","size","hasDirection","dir","target","isTouchEvent","isMouseEvent","findClosestSnap","snapArray","snapGap","closestGapIndex","prev","curr","index","gap","getStringSize","getPixelSize","parentSize","ratio","calculateNewMax","maxWidth","maxHeight","minWidth","minHeight","definedProps","baseClassName","Resizable","props","parent","element","base","c","orgWidth","orgHeight","orgPosition","getSize","key","percent","wrapChanged","wrap","computedStyle","newSize","kind","propsSize","boundsByDirection","direction","widthByDirection","heightByDirection","boundWidth","boundHeight","parent_1","clientX","clientY","scale","resizeRatio","_a","original","_b","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","parent_2","parentRect","targetRect","left","top_1","right","bottom","startResize","flexBasis","parent_3","_c","boundaryMax","newGridWidth","newGridHeight","delta","vw","vh","newState","isResizing","enable","handleStyles","handleClasses","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","extendsProps","acc","style","Wrapper","drawerSlide","stylesFactory","ExploreDrawer","onResize","drawerWidth","ExploreQueryInspector","onClose","queryResponse","dataFrames","errors","statsTab","InspectStatsTab","jsonTab","InspectJSONTab","dataTab","InspectDataTab","queryTab","QueryInspector","tabs","errorTab","InspectErrorTab","TabbedContainer","mapStateToProps","mapDispatchToProps","TimeSyncButton","onClick","isSynced","syncTimesTooltip","ToolbarButton","ExploreTimeControls","range","onChangeTime","from","to","nextTimeRange","adjustedFrom","adjustedTo","fiscalYearStartMonth","syncedTimes","onChangeTimeSync","hideText","onChangeTimeZone","onChangeFiscalYearStartMonth","timeSyncButton","timePickerCommonProps","TimePickerWithHistory","LiveTailButton","start","pause","resume","isLive","isPaused","stop","buttonVariant","onClickMain","ButtonGroup","CSSTransition","ConfirmNavigationModal","onDismiss","path","openInNewTab","openInCurrentTab","ToolbarExtensionPointMenu","extensions","onSelect","categorised","uncategorised","useExtensionLinksByCategory","showDivider","Menu","category","renderItems","extension","link","AddToDashboard","ToolbarExtensionPoint","selectedExtension","setSelectedExtension","context","useExtensionPointContext","useExtensionLinks","selectExploreItem","noQueriesInPane","menu","Dropdown","isCorrelationsEditorMode","queries","isLeftPane","datasourceUids","uid","numUniqueIds","useLiveTailControls","RefreshPicker","clear","LiveTailControls","controls","ExploreToolbar","topOfViewRef","onContentOutlineToogle","isContentOutlineOpen","refreshInterval","datasourceInstance","loading","isLargerPane","showSmallTimePicker","showSmallDataSourcePicker","shouldRotateSplitIcon","refreshPickerLabel","onCopyShortLink","onChangeDatasource","dsSettings","onRunQuery","timezone","onOpenSplitView","onCloseSplitView","onClickResize","fiscalyearStartMonth","onChangeRefreshInterval","navBarActions","DashNavButton","SetInterval","AppChromeUpdate","PageToolbar","DataSourcePicker","interaction","name","FlameGraphExploreContainer","view","align","sort","INTERVAL","ElapsedTime","resetKey","humanize","elapsed","setElapsed","useInterval","Time","tinycolor","LiveLogs","onPause","scrollTop","clientHeight","scrollHeight","rowsToRender","nextProps","onResume","onClear","logsRow","logsRowLocalTime","logsRowMessage","getLogRowStyles","row","LogMessageAnsi","LiveLogsWithTheme","SETTINGS_KEYS","LoadingIndicator","place","text","loadingIndicatorStyles","Spinner","LogContextButtons","wrapLines","onChangeWrapLines","onScrollCenterClick","internalOnChangeWrapLines","makeEmptyContext","getLoadMoreDirection","sortOrder","normalizeLogRowRefId","counter","containsRow","rows","r","PAGE_SIZE","LogRowContextModal","open","logsSortOrder","getLogRowContextUi","getRowContextQuery","getRowContext","scrollElement","entryElement","preEntryElement","prevScrollHeightRef","prevClientHeightRef","aboveLoadingElement","belowLoadingElement","loadCountRef","sticky","setSticky","setContext","setSection","fun","newContext","generationRef","contextQuery","setContextQuery","setWrapLines","getFullTimeRange","below","above","allRows","fromMs","toMs","updateContextQuery","updateResults","loadMore","refRow","result","newRows","displayedFields","setDisplayedFields","showField","hideField","maybeLoadMore","section","currentGen","older","newer","newRow","newAbove","newBelow","sortedNewAbove","sortedNewBelow","onScrollHit","entries","observer","targetElement","scroll","aboveElem","belowElem","scrollToCenter","scrollE","prevClientHeight","currentClientHeight","prevScrollHeight","currentHeight","newScrollTop","useAsync","loadingStateAbove","loadingStateBelow","LogRows","rowId","isFulfilled","promise","hasKey","k","v0Migrator","params","parseUrlState","isSegment","segment","prop","ParseUrlStateIndex","initial","parsed","errorResult","datasource","parsedSegments","panelsState","v1Migrator","DEFAULT_STATE","rawPanes","applyDefaults","input","parseURL","migrate","migrators","schemaVersion","getSchemaVersion","parser","migratorsToRun","parsedUrl","migrator","useStateSync","panesState","orgId","prevParams","initState","unsubscribe","_","cancelActiveListeners","delay","getState","panesQueryParams","paneState","getUrlStateFromPaneState","replace","isURLOutOfSync","urlState","sync","firstRange","urlPane","update","urlDiff","EventBus","keyInStore","paneId","getPaneDatasource","paneDatasource","getQueryFilter","isMixedDatasource","ds","getDefaultQuery","validQueries","removeQueriesWithInvalidDatasource","newParams","q","rootDatasource","queriesWithDS","lastUsedDSUID","oldUrlState","currentUrlState","pruneObject","obj","pruned","MetaInfoItem","label","MetaInfoText","metaItems","DownloadFormat","LogsMetaRow","meta","dedupStrategy","dedupCount","clearDetectedFields","hasUnescapedContent","forceEscape","onEscapeNewlines","logRows","downloadLogs","format","download","jsonLogs","blob","fileName","logsMetaItem","renderMetaItem","downloadMenu","LogLabels","LogsNavigationPages","pages","currentPageIndex","oldestLogsFirst","formatTime","time","createPageContent","page","topContent","bottomContent","LogsNavigation","scrollToTopLogs","visibleRange","clearCache","addResultsToCache","setPages","setCurrentPageIndex","expectedQueriesRef","expectedRangeRef","rangeSpanRef","onFirstPage","onLastPage","newPage","newPages","sortPages","changeTime","olderLogsButton","indexChange","newerLogsButton","onPageClick","pageNumber","navContainerHeight","getTableHeight","largestFrameLength","length","frame","LogsTable","splitOpen","logsFrames","tableFrame","setTableFrame","prepareTableFrame","timeIndex","sortedFrame","frameWithOverrides","field","dataFrame","transformations","transformedDataFrame","lastValueFrom","transformDataFrame","Table","SupplementaryResultError","SHORT_ERROR_MESSAGE_LIMIT","error","suggestedAction","onSuggestedAction","onRemove","severity","showButton","LogsVolumePanel","onUpdateTimeRange","onHiddenSeriesChanged","allLogsVolumeMaximum","spacing","logsVolumeData","logsVolumeInfo","extraInfo","extraInfoComponent","ExploreGraph","isTimeoutErrorResponse","response","LogsVolumePanelList","onLoadLogsVolume","logVolumes","allLogsVolumeMaximumValue","allLogsVolumeMaximumRange","maximumValue","sorted","grouped","mergedData","maximumRange","numberOfLogVolumes","containsZoomed","data","zoomRatio","logsLevelZoomRatio","timeoutError","InlineField","selectedTimeRange","dataRange","scrollableLogsContainer","DEDUP_OPTIONS","UnthemedLogs","node","prevState","newSortOrder","visualisation","showLabels","showTime","wrapLogMessage","prettifyLogMessage","hiddenRawLevels","hiddenLogLevels","level","collapsed","serializedState","baseUrl","url","dedupedRows","sum","firstTimeStamp","lastTimeStamp","prevProps","logsMeta","logsVolumeEnabled","loadLogsVolumeData","onClickFilterLabel","onClickFilterOutLabel","scanning","scanRange","showContextToggle","getFieldLinks","logsQueries","isFlipping","contextOpen","contextRow","hasData","filteredLogs","navigationRange","scanText","options","RadioButtonGroup","InlineFieldRow","dedupType","Logs","transitionDuration","transitionDelay","LogsCrossFadeTransition","visible","LogsContainer","updateTimeRange","origRow","runContextQuery","rowIndex","promises","dataSources","logDetailsFilterAvailable","loadingState","logsSeries","loadSupplementaryQueryData","setSupplementaryQueryEnabled","onStartScanning","onStopScanning","logsVolume","logsResult","clearedAtIndex","supplementaryQueries","panelState","LogsSamplePanel","setLogsSampleEnabled","onToggleLogsSampleCollapse","OpenInSplitViewButton","logSampleQueries","onSplitOpen","LogsSamplePanelContent","logs","NoData","css","NoDataSourceCallToAction","canCreateDataSource","footer","ctaElement","cardClassName","CallToActionCard","UnconnectedNodeGraphContainer","withTraceView","datasourceType","getLinks","nodes","useCategorizeFrames","toggleCollapsed","toggled","windowHeight","useWindowSize","containerRef","top","setTop","countWarning","NodeGraph","NodeGraphContainer","makeSelectors","exploreItemSelector","QueryRows","getQueries","getDatasourceInstanceSettings","getQueryResponse","getHistory","getEventBridge","history","eventBridge","onRunQueries","onChange","newQueries","onAddQuery","onQueryCopied","onQueryRemoved","onQueryToggled","queryStatus","QueryEditorRows","mobileWidthThreshold","numberOfColumnsBeforeExpandedViewIsDefault","tableResult","listRef","valueLabels","items","getRawPrometheusListItemsFromDataFrame","isExpandedView","setIsExpandedView","onContentClick","calculateInitialHeight","getListItemHeight","itemIndex","switchId","Switch","ItemLabels","filteredValueLabels","valueLabel","itemWithValue","RawListItem","rawPrometheusResult","loadingInState","rawPrometheusFrame","RawPrometheusContainer","resultsStyle","ALL_GRAPH_STYLE_OPTIONS","onCellFilterAdded","ariaLabel","tableWidth","dataLinkPostProcessor","renderTable","FadeIn","defaultStyle","transitionStyles","Transition","ErrorContainer","queryError","showError","duration","ResponseErrorContainer","explore","rightColumnWidth","rightColumnContentWidth","cardColor","RichHistoryCard","commentHistoryItem","starHistoryItem","deleteHistoryItem","changeDatasource","setQueries","activeUpdateComment","setActiveUpdateComment","comment","setComment","dsInstance","queriesToRun","differentDataSource","onCopyQuery","datasources","queriesText","onCreateShortLink","onDeleteQuery","performDelete","queryId","onStarrQuery","toggleActiveUpdateComment","onUpdateComment","onCancelUpdateComment","onKeyDown","keyEvent","updateComment","TextArea","queryActionButtons","IconButton","DatasourceInfo","Query","LoadingPlaceholder","getQueryStyles","showDsInfo","getDsInfoStyles","dsApi","RichHistoryQueriesTab","totalQueries","richHistorySearchFilters","updateFilters","clearRichHistoryResults","loadMoreRichHistory","richHistorySettings","activeDatasourceInstance","listOfDatasources","datasourceFilters","filters","mappedQueriesToHeadings","sortOrderOptions","getSortOrderOptions","partialResults","RangeSlider","option","FilterInput","search","Select","order","heading","retentionPeriodOptions","RichHistorySettingsTab","retentionPeriod","starredTabAsFirstTab","activeDatasourceOnly","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","selectedOption","v","onDelete","RichHistoryStarredTab","Tabs","UnThemedRichHistory","settingsToUpdate","filtersToUpdate","richHistory","richHistoryTotal","firstTab","QueriesTab","StarredTab","SettingsTab","RichHistory","RichHistoryContainer","setHeight","initRichHistory","loadRichHistory","updateHistorySettings","updateHistorySearchFilters","_e","_dir","SecondaryActions","TableContainer","f","rowCount","hasSubFrames","TraceViewContainer","traceProp","transform","TraceView","Explore","rawRange","filter","operator","refId","queryKeys","modifier","modification","panelType","source","tracking","exploreContainerStyles","groupedByPlugin","graphResult","showFlameGraph","GraphContainer","logsContentOutlineWrapper","logsSample","showTrace","series","showMetrics","showTable","showRawPrometheus","showLogs","showCustom","showNodeGraph","showLogsSample","correlationEditorDetails","correlationEditorHelperData","openDrawer","contentOutlineVisible","showPanels","showRichHistory","richHistoryRowButtonHidden","showQueryInspector","showNoData","correlationsBox","ErrorBoundary","ExplorePaneContainerUnconnected","useStopQueries","bus","ExplorePaneContainer","paneSelector","paneRef","useExplorePageTitle","navModel","useNavModel","dsService","results","names","Branding","useKeyboardShortcuts","keybindings","tearDown","u","useSplitSizeUpdater","windowWidth","hasSplit","rightPaneWidthRatio","setRightPaneWidthRatio","exploreState","updateSplitSize","evenSplitWidth","areBothSimilar","widthCalc","useTimeSrvFix","searchParams","MIN_PANE_WIDTH","ExplorePage","chrome","showCorrelationEditorBar","SplitPaneWrapper","InspectTab","callback","savedCallback","interval_1"],"sourceRoot":""}