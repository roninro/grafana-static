{"version":3,"file":"UserInvitePage.329144af97f354070773.js","mappings":"8XAyBA,MAAMA,EACJ,gCAAE,+HAGA,gBAACC,EAAA,GACC,KAAK,mGACL,QAAQ,YACR,SAAQ,IACT,mBAED,EAAW,GAEb,EAGIC,EAAyC,OAAO,OAAO,SAAO,EAAE,IAAKC,IAAO,CAChF,MAAOA,IAAM,UAAQ,KAAO,gBAAkBA,EAC9C,MAAOA,CACT,EAAE,EAUIC,EAA2B,CAC/B,KAAM,GACN,MAAO,GACP,KAAM,UAAQ,OACd,UAAW,EACb,EAgEA,EA9D8B,IAAM,CAClC,MAAMC,KAAW,eAAY,EAEvBC,EAAW,MAAOC,GAAwB,CAC9C,MAAMF,KAAS,MAAWE,CAAQ,CAAC,EAAE,OAAO,EAC5C,KAAgB,KAAK,eAAe,CACtC,EAEA,OACE,gBAACC,EAAA,EAAI,CAAC,cAAAJ,EAA8B,SAAAE,CAAA,EACjC,CAAC,CAAE,SAAAG,EAAU,QAAAC,EAAS,OAAAC,CAAO,IAE1B,gCACE,gBAACC,EAAA,EAAQ,KACP,gBAACC,EAAA,GACC,QAAS,CAAC,CAACF,EAAO,aAClB,MAASA,EAAO,aAAe,gCAAkC,OACjE,MAAM,qBAEN,gBAACG,EAAA,EAAK,CAAE,GAAGL,EAAS,eAAgB,CAAE,SAAU,EAAK,CAAC,EAAG,YAAY,mBAAoB,EAC3F,EACA,gBAACI,EAAA,EAAK,CAAC,QAAS,CAAC,CAACF,EAAO,KAAM,MAAM,QACnC,gBAACG,EAAA,EAAK,CAAE,GAAGL,EAAS,MAAM,EAAG,YAAY,YAAa,EACxD,EACA,gBAACI,EAAA,GACC,QAAS,CAAC,CAACF,EAAO,KAClB,MACE,gBAACI,EAAA,EAAK,KACJ,gBAACC,EAAA,EAAK,CAAC,IAAK,IACV,gBAAC,YAAK,MAAI,EACThB,GACC,gBAACiB,EAAA,EAAO,CAAC,UAAU,YAAY,YAAa,GAAM,QAASjB,CAAA,EACzD,gBAACkB,EAAA,EAAI,CAAC,KAAK,cAAc,KAAK,IAAK,EACrC,CAEJ,CACF,GAGF,gBAACC,EAAA,GACC,OAAQ,CAAC,CAAE,MAAO,CAAE,IAAAC,EAAK,GAAGC,CAAM,CAAE,IAAM,gBAACC,EAAA,EAAgB,CAAE,GAAGD,EAAO,QAASnB,CAAA,CAAO,EACvF,QAAAQ,EACA,KAAK,OACP,CACF,EACA,gBAACG,EAAA,EAAK,CAAC,MAAM,qBACX,gBAACU,EAAA,EAAM,CAAC,GAAG,oBAAqB,GAAGd,EAAS,WAAW,EAAG,CAC5D,CACF,EACA,gBAACO,EAAA,EAAK,KACJ,gBAACQ,EAAA,GAAM,CAAC,KAAK,UAAS,QAAM,EAC5B,gBAAC,KAAU,CAAC,KAAM,IAAa,iBAAc,MAAU,EAAE,UAAY,cAAc,EAAG,QAAQ,aAAY,MAE1G,CACF,CACF,CAGN,CAEJ,ECjHO,SAASC,GAAiB,CAC/B,MAAMC,EACJ,gCAAE,oEAEA,gBAAC,QAAK,UAAU,kBAAiB,IAAE,KAAW,KAAK,OAAQ,CAC7D,EAGF,OACE,gBAACC,EAAA,EAAI,CAAC,MAAM,eAAe,QAAS,CAAE,KAAM,aAAc,EAAG,SAAAD,CAAA,EAC3D,gBAACC,EAAA,EAAK,SAAL,KACC,gBAAC,EAAc,IAAC,CAClB,CACF,CAEJ,CAEA,QAAeF,C","sources":["webpack://grafana/./public/app/features/org/UserInviteForm.tsx","webpack://grafana/./public/app/features/org/UserInvitePage.tsx"],"sourcesContent":["import React from 'react';\n\nimport { locationUtil, SelectableValue } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { locationService } from '@grafana/runtime';\nimport {\n  Button,\n  LinkButton,\n  Input,\n  Switch,\n  RadioButtonGroup,\n  Form,\n  Field,\n  InputControl,\n  FieldSet,\n  Icon,\n  TextLink,\n  Tooltip,\n  Label,\n} from '@grafana/ui';\nimport { getConfig } from 'app/core/config';\nimport { OrgRole, useDispatch } from 'app/types';\n\nimport { addInvitee } from '../invites/state/actions';\n\nconst tooltipMessage = (\n  <>\n    You can now select the &quot;No basic role&quot; option and add permissions to your custom needs. You can find more\n    information in&nbsp;\n    <TextLink\n      href=\"https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/#organization-roles\"\n      variant=\"bodySmall\"\n      external\n    >\n      our documentation\n    </TextLink>\n    .\n  </>\n);\n\nconst roles: Array<SelectableValue<OrgRole>> = Object.values(OrgRole).map((r) => ({\n  label: r === OrgRole.None ? 'No basic role' : r,\n  value: r,\n}));\n\nexport interface FormModel {\n  role: OrgRole;\n  name: string;\n  loginOrEmail?: string;\n  sendEmail: boolean;\n  email: string;\n}\n\nconst defaultValues: FormModel = {\n  name: '',\n  email: '',\n  role: OrgRole.Editor,\n  sendEmail: true,\n};\n\nexport const UserInviteForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = async (formData: FormModel) => {\n    await dispatch(addInvitee(formData)).unwrap();\n    locationService.push('/admin/users/');\n  };\n\n  return (\n    <Form defaultValues={defaultValues} onSubmit={onSubmit}>\n      {({ register, control, errors }) => {\n        return (\n          <>\n            <FieldSet>\n              <Field\n                invalid={!!errors.loginOrEmail}\n                error={!!errors.loginOrEmail ? 'Email or username is required' : undefined}\n                label=\"Email or username\"\n              >\n                <Input {...register('loginOrEmail', { required: true })} placeholder=\"email@example.com\" />\n              </Field>\n              <Field invalid={!!errors.name} label=\"Name\">\n                <Input {...register('name')} placeholder=\"(optional)\" />\n              </Field>\n              <Field\n                invalid={!!errors.role}\n                label={\n                  <Label>\n                    <Stack gap={0.5}>\n                      <span>Role</span>\n                      {tooltipMessage && (\n                        <Tooltip placement=\"right-end\" interactive={true} content={tooltipMessage}>\n                          <Icon name=\"info-circle\" size=\"xs\" />\n                        </Tooltip>\n                      )}\n                    </Stack>\n                  </Label>\n                }\n              >\n                <InputControl\n                  render={({ field: { ref, ...field } }) => <RadioButtonGroup {...field} options={roles} />}\n                  control={control}\n                  name=\"role\"\n                />\n              </Field>\n              <Field label=\"Send invite email\">\n                <Switch id=\"send-email-switch\" {...register('sendEmail')} />\n              </Field>\n            </FieldSet>\n            <Stack>\n              <Button type=\"submit\">Submit</Button>\n              <LinkButton href={locationUtil.assureBaseUrl(getConfig().appSubUrl + '/admin/users')} variant=\"secondary\">\n                Back\n              </LinkButton>\n            </Stack>\n          </>\n        );\n      }}\n    </Form>\n  );\n};\n\nexport default UserInviteForm;\n","import React from 'react';\n\nimport { Page } from 'app/core/components/Page/Page';\nimport { contextSrv } from 'app/core/core';\n\nimport UserInviteForm from './UserInviteForm';\n\nexport function UserInvitePage() {\n  const subTitle = (\n    <>\n      Send invitation or add existing Grafana user to the organization.\n      <span className=\"highlight-word\"> {contextSrv.user.orgName}</span>\n    </>\n  );\n\n  return (\n    <Page navId=\"global-users\" pageNav={{ text: 'Invite user' }} subTitle={subTitle}>\n      <Page.Contents>\n        <UserInviteForm />\n      </Page.Contents>\n    </Page>\n  );\n}\n\nexport default UserInvitePage;\n"],"names":["tooltipMessage","TextLink","roles","r","defaultValues","dispatch","onSubmit","formData","Form","register","control","errors","FieldSet","Field","Input","Label","Stack","Tooltip","Icon","InputControl","ref","field","RadioButtonGroup","Switch","Button","UserInvitePage","subTitle","Page"],"sourceRoot":""}